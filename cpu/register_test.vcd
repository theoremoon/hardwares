$date
	Fri Jan 24 18:17:42 2020
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module test_registers $end
$var wire 32 ! v2 [31:0] $end
$var wire 32 " v1 [31:0] $end
$var reg 1 # clk $end
$var reg 2 $ r1 [1:0] $end
$var reg 2 % r2 [1:0] $end
$var reg 1 & rst $end
$var reg 32 ' w [31:0] $end
$var reg 3 ( w1 [2:0] $end
$scope module regs $end
$var wire 1 # clk $end
$var wire 2 ) r1 [1:0] $end
$var wire 2 * r2 [1:0] $end
$var wire 1 & rst $end
$var wire 32 + w [31:0] $end
$var wire 3 , w1 [2:0] $end
$var reg 32 - v1 [31:0] $end
$var reg 32 . v2 [31:0] $end
$var integer 32 / i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
x&
bx %
bx $
x#
bx "
bx !
$end
#10
b0 !
b0 .
b0 "
b0 -
b100 /
b0 '
b0 +
b0 (
b0 ,
b0 %
b0 *
b0 $
b0 )
0#
0&
#50
b100 /
1#
#100
0#
#110
1&
#150
1#
#200
0#
#210
b1 '
b1 +
#250
b1 !
b1 .
b1 "
b1 -
1#
#300
0#
#310
b11 '
b11 +
b1 (
b1 ,
#350
1#
#400
0#
#410
b111 '
b111 +
b10 (
b10 ,
#450
1#
#500
0#
#510
b11111111111111111111111111111111 '
b11111111111111111111111111111111 +
b11 (
b11 ,
#550
1#
#600
0#
#610
b100 (
b100 ,
#650
1#
#700
0#
#710
b1 %
b1 *
#750
b11 !
b11 .
1#
#800
0#
#810
b11 %
b11 *
b10 $
b10 )
#850
b11111111111111111111111111111111 !
b11111111111111111111111111111111 .
b111 "
b111 -
1#
#900
0#
#910
b0 '
b0 +
b11 (
b11 ,
#950
b0 !
b0 .
1#
#1000
0#
#1010
b1100100 '
b1100100 +
b100 (
b100 ,
#1050
1#
#1100
0#
#1110
