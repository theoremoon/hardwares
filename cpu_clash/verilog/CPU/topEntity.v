/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 1.0.1. DO NOT MODIFY.
*/
`timescale 100fs/100fs
module topEntity
    ( // Inputs
      input [72:0] c$arg_0
    , input [63:0] c$arg_1_0
    , input [63:0] c$arg_1_1
    , input [63:0] c$arg_1_2
    , input [63:0] c$arg_1_3
    , input [63:0] c$arg_1_4
    , input [8:0] c$arg_1_5
    , input [63:0] c$arg_2_0
    , input [63:0] c$arg_2_1
    , input [63:0] c$arg_2_2
    , input [63:0] c$arg_2_3
    , input [63:0] c$arg_2_4
    , input [63:0] c$arg_2_5
    , input [63:0] c$arg_2_6
    , input [63:0] c$arg_2_7
    , input [63:0] c$arg_2_8
    , input [63:0] c$arg_2_9
    , input [63:0] c$arg_2_10
    , input [63:0] c$arg_2_11
    , input [63:0] c$arg_2_12
    , input [63:0] c$arg_2_13
    , input [63:0] c$arg_2_14
    , input [63:0] c$arg_2_15
    , input [63:0] c$arg_2_16
    , input [63:0] c$arg_2_17
    , input [63:0] c$arg_2_18
    , input [63:0] c$arg_2_19
    , input [63:0] c$arg_2_20
    , input [63:0] c$arg_2_21
    , input [63:0] c$arg_2_22
    , input [63:0] c$arg_2_23
    , input [63:0] c$arg_2_24
    , input [63:0] c$arg_2_25
    , input [63:0] c$arg_2_26
    , input [63:0] c$arg_2_27
    , input [63:0] c$arg_2_28
    , input [63:0] c$arg_2_29
    , input [63:0] c$arg_2_30
    , input [63:0] c$arg_2_31
    , input [63:0] c$arg_2_32
    , input [63:0] c$arg_2_33
    , input [63:0] c$arg_2_34
    , input [63:0] c$arg_2_35
    , input [63:0] c$arg_2_36
    , input [63:0] c$arg_2_37
    , input [63:0] c$arg_2_38
    , input [63:0] c$arg_2_39
    , input [63:0] c$arg_2_40
    , input [63:0] c$arg_2_41
    , input [63:0] c$arg_2_42
    , input [63:0] c$arg_2_43
    , input [63:0] c$arg_2_44
    , input [63:0] c$arg_2_45
    , input [63:0] c$arg_2_46
    , input [63:0] c$arg_2_47
    , input [63:0] c$arg_2_48
    , input [63:0] c$arg_2_49
    , input [63:0] c$arg_2_50
    , input [63:0] c$arg_2_51
    , input [63:0] c$arg_2_52
    , input [63:0] c$arg_2_53
    , input [63:0] c$arg_2_54
    , input [63:0] c$arg_2_55
    , input [63:0] c$arg_2_56
    , input [63:0] c$arg_2_57
    , input [63:0] c$arg_2_58
    , input [63:0] c$arg_2_59
    , input [63:0] c$arg_2_60
    , input [63:0] c$arg_2_61
    , input [63:0] c$arg_2_62
    , input [63:0] c$arg_2_63

      // Outputs
    , output wire [72:0] c$case_alt_0_0
    , output wire [63:0] c$case_alt_0_1_0
    , output wire [63:0] c$case_alt_0_1_1
    , output wire [63:0] c$case_alt_0_1_2
    , output wire [63:0] c$case_alt_0_1_3
    , output wire [63:0] c$case_alt_0_1_4
    , output wire [8:0] c$case_alt_0_1_5
    , output wire [63:0] c$case_alt_1_0
    , output wire [63:0] c$case_alt_1_1
    , output wire [63:0] c$case_alt_1_2
    , output wire [63:0] c$case_alt_1_3
    , output wire [63:0] c$case_alt_1_4
    , output wire [63:0] c$case_alt_1_5
    , output wire [63:0] c$case_alt_1_6
    , output wire [63:0] c$case_alt_1_7
    , output wire [63:0] c$case_alt_1_8
    , output wire [63:0] c$case_alt_1_9
    , output wire [63:0] c$case_alt_1_10
    , output wire [63:0] c$case_alt_1_11
    , output wire [63:0] c$case_alt_1_12
    , output wire [63:0] c$case_alt_1_13
    , output wire [63:0] c$case_alt_1_14
    , output wire [63:0] c$case_alt_1_15
    , output wire [63:0] c$case_alt_1_16
    , output wire [63:0] c$case_alt_1_17
    , output wire [63:0] c$case_alt_1_18
    , output wire [63:0] c$case_alt_1_19
    , output wire [63:0] c$case_alt_1_20
    , output wire [63:0] c$case_alt_1_21
    , output wire [63:0] c$case_alt_1_22
    , output wire [63:0] c$case_alt_1_23
    , output wire [63:0] c$case_alt_1_24
    , output wire [63:0] c$case_alt_1_25
    , output wire [63:0] c$case_alt_1_26
    , output wire [63:0] c$case_alt_1_27
    , output wire [63:0] c$case_alt_1_28
    , output wire [63:0] c$case_alt_1_29
    , output wire [63:0] c$case_alt_1_30
    , output wire [63:0] c$case_alt_1_31
    , output wire [63:0] c$case_alt_1_32
    , output wire [63:0] c$case_alt_1_33
    , output wire [63:0] c$case_alt_1_34
    , output wire [63:0] c$case_alt_1_35
    , output wire [63:0] c$case_alt_1_36
    , output wire [63:0] c$case_alt_1_37
    , output wire [63:0] c$case_alt_1_38
    , output wire [63:0] c$case_alt_1_39
    , output wire [63:0] c$case_alt_1_40
    , output wire [63:0] c$case_alt_1_41
    , output wire [63:0] c$case_alt_1_42
    , output wire [63:0] c$case_alt_1_43
    , output wire [63:0] c$case_alt_1_44
    , output wire [63:0] c$case_alt_1_45
    , output wire [63:0] c$case_alt_1_46
    , output wire [63:0] c$case_alt_1_47
    , output wire [63:0] c$case_alt_1_48
    , output wire [63:0] c$case_alt_1_49
    , output wire [63:0] c$case_alt_1_50
    , output wire [63:0] c$case_alt_1_51
    , output wire [63:0] c$case_alt_1_52
    , output wire [63:0] c$case_alt_1_53
    , output wire [63:0] c$case_alt_1_54
    , output wire [63:0] c$case_alt_1_55
    , output wire [63:0] c$case_alt_1_56
    , output wire [63:0] c$case_alt_1_57
    , output wire [63:0] c$case_alt_1_58
    , output wire [63:0] c$case_alt_1_59
    , output wire [63:0] c$case_alt_1_60
    , output wire [63:0] c$case_alt_1_61
    , output wire [63:0] c$case_alt_1_62
    , output wire [63:0] c$case_alt_1_63
    );
  // CPU.hs:172:1-5
  wire [72:0] mode;
  reg [4497:0] result;
  // CPU.hs:172:1-5
  wire [70:0] ir;
  // CPU.hs:172:1-5
  wire [328:0] regs;
  wire [328:0] c$app_arg;
  wire [4095:0] result_0;
  // CPU.hs:172:1-5
  wire [63:0] ds2;
  // CPU.hs:172:1-5
  wire [63:0] ds3;
  // CPU.hs:172:1-5
  wire [63:0] ds4;
  // CPU.hs:172:1-5
  wire [63:0] ds5;
  // CPU.hs:172:1-5
  wire [63:0] ds6;
  // CPU.hs:140:1-6
  wire [3:0] ds1;
  reg [2:0] result_1;
  // CPU.hs:140:1-6
  wire [3:0] ds1_0;
  reg [2:0] result_2;
  // CPU.hs:140:1-6
  wire [63:0] c$ptr_app_arg;
  // CPU.hs:140:1-6
  wire [8:0] ptr;
  reg [70:0] result_3;
  // CPU.hs:140:1-6
  wire [63:0] imm;
  reg [70:0] result_4;
  reg [70:0] result_5;
  // CPU.hs:140:1-6
  wire [3:0] ds;
  reg [63:0] c$case_alt_2;
  // CPU.hs:172:1-5
  wire [8:0] ds7;
  wire [63:0] result_6;
  reg [328:0] result_7;
  // CPU.hs:93:1-13
  wire [63:0] ds3_0;
  // CPU.hs:93:1-13
  wire [8:0] ds5_0;
  // CPU.hs:93:1-13
  wire [63:0] ds4_0;
  // CPU.hs:93:1-13
  wire [63:0] ds2_0;
  // CPU.hs:93:1-13
  wire [63:0] ds1_1;
  wire [63:0] result_8;
  // CPU.hs:172:1-5
  wire [2:0] src;
  reg  c$case_alt_3;
  // CPU.hs:72:1-6
  wire [63:0] ds5_1;
  // CPU.hs:172:1-5
  wire signed [63:0] wild1;
  wire [63:0] c$case_alt_4;
  // CPU.hs:172:1-5
  wire [63:0] x;
  // CPU.hs:172:1-5
  wire [63:0] y;
  reg [66:0] c$tupIn;
  // CPU.hs:102:1-7
  wire signed [63:0] wild1_0;
  // CPU.hs:172:1-5
  reg [63:0] c$y_case_alt;
  // CPU.hs:172:1-5
  reg [63:0] c$x_case_alt;
  // CPU.hs:172:1-5
  wire [2:0] lhs;
  // CPU.hs:172:1-5
  wire [2:0] rhs;
  // CPU.hs:172:1-5
  reg [63:0] c$wild1_case_alt;
  // CPU.hs:172:1-5
  wire [2:0] dst;
  // CPU.hs:172:1-5
  wire [2:0] dst_0;
  // CPU.hs:172:1-5
  wire [2:0] dst_1;
  // CPU.hs:172:1-5
  wire [2:0] dst_2;
  // CPU.hs:172:1-5
  wire [2:0] dst_3;
  // CPU.hs:172:1-5
  wire [2:0] dst_4;
  // CPU.hs:172:1-5
  wire [2:0] dst_5;
  // CPU.hs:172:1-5
  wire [2:0] dst_6;
  wire [63:0] result_9;
  // CPU.hs:172:1-5
  wire [2:0] dst_7;
  // CPU.hs:172:1-5
  wire [63:0] imm_0;
  // CPU.hs:172:1-5
  wire [63:0] imm_1;
  reg [63:0] c$tupIn_case_alt;
  reg [63:0] c$tupIn_case_alt_0;
  reg [63:0] c$tupIn_case_alt_1;
  reg [63:0] c$tupIn_case_alt_2;
  reg [63:0] c$tupIn_case_alt_3;
  reg [63:0] c$tupIn_case_alt_4;
  // CPU.hs:172:1-5
  wire [2:0] src_0;
  // CPU.hs:172:1-5
  wire [2:0] src_1;
  // CPU.hs:102:1-7
  wire signed [63:0] wild1_1;
  reg [63:0] c$tupIn_case_alt_5;
  reg [63:0] c$tupIn_case_alt_6;
  reg [63:0] c$tupIn_case_alt_7;
  reg [63:0] c$tupIn_case_alt_8;
  reg [63:0] c$tupIn_case_alt_9;
  reg [63:0] c$tupIn_case_alt_10;
  // CPU.hs:172:1-5
  wire [2:0] src_2;
  // CPU.hs:172:1-5
  wire [2:0] src_3;
  // CPU.hs:172:1-5
  wire [2:0] src_4;
  // CPU.hs:102:1-7
  wire [8:0] ds1_2;
  // CPU.hs:102:1-7
  reg [63:0] c$ds1_case_alt;
  // CPU.hs:172:1-5
  wire [2:0] src_5;
  wire [401:0] c$arg;
  wire [4095:0] c$arg_2;
  wire [1471:0] c$case_alt_sel_alt_res;
  wire [1632:0] c$vec;
  wire [1471:0] c$case_alt_sel_alt_res_0;
  wire [1632:0] c$vec_0;
  wire [1471:0] result_sel_alt_res;
  wire [1632:0] c$vec_1;
  wire [1471:0] result_sel_alt_res_0;
  wire [1632:0] c$vec_2;
  wire [1471:0] result_sel_alt_res_1;
  wire [1632:0] c$vec_3;
  wire [1471:0] result_sel_alt_res_2;
  wire [1632:0] c$vec_4;
  wire [1471:0] result_sel_alt_res_3;
  wire [1632:0] c$vec_5;
  wire [1471:0] result_sel_alt_res_4;
  wire [1632:0] c$vec_6;
  wire [1471:0] result_sel_alt_res_5;
  wire [1632:0] c$vec_7;
  wire [1471:0] result_sel_alt_res_6;
  wire [1632:0] c$vec_8;
  wire [1471:0] result_sel_alt_res_7;
  wire [1632:0] c$vec_9;
  wire [1471:0] result_sel_alt_res_8;
  wire [1632:0] c$vec_10;
  wire [1471:0] result_sel_alt_res_9;
  wire [1632:0] c$vec_11;
  wire [1471:0] result_sel_alt_res_10;
  wire [1632:0] c$vec_12;
  wire [1471:0] result_sel_alt_res_11;
  wire [1632:0] c$vec_13;
  wire [4095:0] c$vec_14;
  wire [2:0] result_7_selection;
  wire [1471:0] result_8_res;
  wire [1632:0] c$vec_15;
  wire [4095:0] c$vecFlat;
  wire [63:0] c$case_alt_3_selection_res;
  wire [8:0] c$i_1747;
  wire [1471:0] result_9_res;
  wire [1632:0] c$vec_16;
  wire [4095:0] c$vecFlat_0;
  reg [4497:0] c$case_alt;
  wire [401:0] c$case_alt_0;
  wire [328:0] c$case_alt_0_1;
  wire [4095:0] c$case_alt_1;

  assign c$arg = {c$arg_0
                 ,{c$arg_1_0
                  ,c$arg_1_1
                  ,c$arg_1_2
                  ,c$arg_1_3
                  ,c$arg_1_4
                  ,c$arg_1_5}};

  assign c$arg_2 = {c$arg_2_0
                   ,c$arg_2_1
                   ,c$arg_2_2
                   ,c$arg_2_3
                   ,c$arg_2_4
                   ,c$arg_2_5
                   ,c$arg_2_6
                   ,c$arg_2_7
                   ,c$arg_2_8
                   ,c$arg_2_9
                   ,c$arg_2_10
                   ,c$arg_2_11
                   ,c$arg_2_12
                   ,c$arg_2_13
                   ,c$arg_2_14
                   ,c$arg_2_15
                   ,c$arg_2_16
                   ,c$arg_2_17
                   ,c$arg_2_18
                   ,c$arg_2_19
                   ,c$arg_2_20
                   ,c$arg_2_21
                   ,c$arg_2_22
                   ,c$arg_2_23
                   ,c$arg_2_24
                   ,c$arg_2_25
                   ,c$arg_2_26
                   ,c$arg_2_27
                   ,c$arg_2_28
                   ,c$arg_2_29
                   ,c$arg_2_30
                   ,c$arg_2_31
                   ,c$arg_2_32
                   ,c$arg_2_33
                   ,c$arg_2_34
                   ,c$arg_2_35
                   ,c$arg_2_36
                   ,c$arg_2_37
                   ,c$arg_2_38
                   ,c$arg_2_39
                   ,c$arg_2_40
                   ,c$arg_2_41
                   ,c$arg_2_42
                   ,c$arg_2_43
                   ,c$arg_2_44
                   ,c$arg_2_45
                   ,c$arg_2_46
                   ,c$arg_2_47
                   ,c$arg_2_48
                   ,c$arg_2_49
                   ,c$arg_2_50
                   ,c$arg_2_51
                   ,c$arg_2_52
                   ,c$arg_2_53
                   ,c$arg_2_54
                   ,c$arg_2_55
                   ,c$arg_2_56
                   ,c$arg_2_57
                   ,c$arg_2_58
                   ,c$arg_2_59
                   ,c$arg_2_60
                   ,c$arg_2_61
                   ,c$arg_2_62
                   ,c$arg_2_63};

  assign c$vec = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b0101,3'd0,64'd1}
                 ,{4'b0101,3'd1,64'd1}
                 ,{4'b0101,3'd2,64'd10}
                 ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b0101,3'd3,64'd1}
                 ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b0101,3'd2,64'd1}
                 ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                 ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i;
  generate
  for (i=0; i < 23; i = i + 1) begin : map
    wire [70:0] map_in;
    assign map_in = c$vec[i*71+:71];
    reg [63:0] map_out;
    // CPU.hs:112:1-6
    wire [2:0] dst_8;
    // CPU.hs:112:1-6
    wire [2:0] src_6;
    // CPU.hs:112:1-6
    wire [2:0] dst_9;
    // CPU.hs:112:1-6
    wire [2:0] src_7;
    // CPU.hs:112:1-6
    wire [2:0] lhs_0;
    // CPU.hs:112:1-6
    wire [2:0] rhs_0;
    // CPU.hs:112:1-6
    wire [2:0] dst_10;
    // CPU.hs:112:1-6
    wire [63:0] imm_2;
    // CPU.hs:112:1-6
    wire [2:0] dst_11;
    // CPU.hs:112:1-6
    wire [63:0] imm_3;
    // CPU.hs:112:1-6
    wire [2:0] dst_12;
    // CPU.hs:112:1-6
    wire [2:0] src_8;
    // CPU.hs:112:1-6
    wire [2:0] dst_13;
    // CPU.hs:112:1-6
    wire [2:0] src_9;
    // CPU.hs:112:1-6
    wire [2:0] dst_14;
    // CPU.hs:112:1-6
    wire [2:0] src_10;
    // CPU.hs:112:1-6
    wire [2:0] dst_15;
    // CPU.hs:112:1-6
    wire [2:0] src_11;
    // CPU.hs:112:1-6
    wire [2:0] dst_16;
    // CPU.hs:112:1-6
    wire [2:0] src_12;
    reg [3:0] c$app_arg_0;
    reg [3:0] c$app_arg_1;
    reg [3:0] c$app_arg_2;
    reg [3:0] c$app_arg_3;
    reg [3:0] c$app_arg_4;
    reg [3:0] c$app_arg_5;
    reg [3:0] c$app_arg_6;
    reg [3:0] c$app_arg_7;
    reg [3:0] c$app_arg_8;
    reg [3:0] c$app_arg_9;
    reg [3:0] c$app_arg_10;
    reg [3:0] c$app_arg_11;
    reg [3:0] c$app_arg_12;
    reg [3:0] c$app_arg_13;
    reg [3:0] c$app_arg_14;
    reg [3:0] c$app_arg_15;
    reg [3:0] c$app_arg_16;
    reg [3:0] c$app_arg_17;
      assign dst_8 = map_in[66:64];

      assign src_6 = map_in[63:61];

      assign dst_9 = map_in[66:64];

      assign src_7 = map_in[63:61];

      assign lhs_0 = map_in[66:64];

      assign rhs_0 = map_in[63:61];

      assign dst_10 = map_in[66:64];

      assign imm_2 = map_in[63:0];

      assign dst_11 = map_in[66:64];

      assign imm_3 = map_in[63:0];

      assign dst_12 = map_in[66:64];

      assign src_8 = map_in[63:61];

      assign dst_13 = map_in[66:64];

      assign src_9 = map_in[63:61];

      assign dst_14 = map_in[66:64];

      assign src_10 = map_in[63:61];

      assign dst_15 = map_in[66:64];

      assign src_11 = map_in[63:61];

      assign dst_16 = map_in[66:64];

      assign src_12 = map_in[63:61];

      always @(*) begin
        case(src_6)
          3'b000 : c$app_arg_0 = 4'b0000;
          3'b001 : c$app_arg_0 = 4'b0001;
          3'b010 : c$app_arg_0 = 4'b0010;
          3'b011 : c$app_arg_0 = 4'b0011;
          default : c$app_arg_0 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_8)
          3'b000 : c$app_arg_1 = 4'b0000;
          3'b001 : c$app_arg_1 = 4'b0001;
          3'b010 : c$app_arg_1 = 4'b0010;
          3'b011 : c$app_arg_1 = 4'b0011;
          default : c$app_arg_1 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_7)
          3'b000 : c$app_arg_2 = 4'b0000;
          3'b001 : c$app_arg_2 = 4'b0001;
          3'b010 : c$app_arg_2 = 4'b0010;
          3'b011 : c$app_arg_2 = 4'b0011;
          default : c$app_arg_2 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_9)
          3'b000 : c$app_arg_3 = 4'b0000;
          3'b001 : c$app_arg_3 = 4'b0001;
          3'b010 : c$app_arg_3 = 4'b0010;
          3'b011 : c$app_arg_3 = 4'b0011;
          default : c$app_arg_3 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_0)
          3'b000 : c$app_arg_4 = 4'b0000;
          3'b001 : c$app_arg_4 = 4'b0001;
          3'b010 : c$app_arg_4 = 4'b0010;
          3'b011 : c$app_arg_4 = 4'b0011;
          default : c$app_arg_4 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_0)
          3'b000 : c$app_arg_5 = 4'b0000;
          3'b001 : c$app_arg_5 = 4'b0001;
          3'b010 : c$app_arg_5 = 4'b0010;
          3'b011 : c$app_arg_5 = 4'b0011;
          default : c$app_arg_5 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_10)
          3'b000 : c$app_arg_6 = 4'b0000;
          3'b001 : c$app_arg_6 = 4'b0001;
          3'b010 : c$app_arg_6 = 4'b0010;
          3'b011 : c$app_arg_6 = 4'b0011;
          default : c$app_arg_6 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_11)
          3'b000 : c$app_arg_7 = 4'b0000;
          3'b001 : c$app_arg_7 = 4'b0001;
          3'b010 : c$app_arg_7 = 4'b0010;
          3'b011 : c$app_arg_7 = 4'b0011;
          default : c$app_arg_7 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_8)
          3'b000 : c$app_arg_8 = 4'b0000;
          3'b001 : c$app_arg_8 = 4'b0001;
          3'b010 : c$app_arg_8 = 4'b0010;
          3'b011 : c$app_arg_8 = 4'b0011;
          default : c$app_arg_8 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_12)
          3'b000 : c$app_arg_9 = 4'b0000;
          3'b001 : c$app_arg_9 = 4'b0001;
          3'b010 : c$app_arg_9 = 4'b0010;
          3'b011 : c$app_arg_9 = 4'b0011;
          default : c$app_arg_9 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_9)
          3'b000 : c$app_arg_10 = 4'b0000;
          3'b001 : c$app_arg_10 = 4'b0001;
          3'b010 : c$app_arg_10 = 4'b0010;
          3'b011 : c$app_arg_10 = 4'b0011;
          default : c$app_arg_10 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_13)
          3'b000 : c$app_arg_11 = 4'b0000;
          3'b001 : c$app_arg_11 = 4'b0001;
          3'b010 : c$app_arg_11 = 4'b0010;
          3'b011 : c$app_arg_11 = 4'b0011;
          default : c$app_arg_11 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_10)
          3'b000 : c$app_arg_12 = 4'b0000;
          3'b001 : c$app_arg_12 = 4'b0001;
          3'b010 : c$app_arg_12 = 4'b0010;
          3'b011 : c$app_arg_12 = 4'b0011;
          default : c$app_arg_12 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_14)
          3'b000 : c$app_arg_13 = 4'b0000;
          3'b001 : c$app_arg_13 = 4'b0001;
          3'b010 : c$app_arg_13 = 4'b0010;
          3'b011 : c$app_arg_13 = 4'b0011;
          default : c$app_arg_13 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_11)
          3'b000 : c$app_arg_14 = 4'b0000;
          3'b001 : c$app_arg_14 = 4'b0001;
          3'b010 : c$app_arg_14 = 4'b0010;
          3'b011 : c$app_arg_14 = 4'b0011;
          default : c$app_arg_14 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_15)
          3'b000 : c$app_arg_15 = 4'b0000;
          3'b001 : c$app_arg_15 = 4'b0001;
          3'b010 : c$app_arg_15 = 4'b0010;
          3'b011 : c$app_arg_15 = 4'b0011;
          default : c$app_arg_15 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_12)
          3'b000 : c$app_arg_16 = 4'b0000;
          3'b001 : c$app_arg_16 = 4'b0001;
          3'b010 : c$app_arg_16 = 4'b0010;
          3'b011 : c$app_arg_16 = 4'b0011;
          default : c$app_arg_16 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_16)
          3'b000 : c$app_arg_17 = 4'b0000;
          3'b001 : c$app_arg_17 = 4'b0001;
          3'b010 : c$app_arg_17 = 4'b0010;
          3'b011 : c$app_arg_17 = 4'b0011;
          default : c$app_arg_17 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in[70:67])
          4'b0000 : map_out = ({({({4'b0000,c$app_arg_17}),c$app_arg_16}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out = ({({({4'b0001,c$app_arg_15}),c$app_arg_14}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out = ({({({4'b0010,c$app_arg_13}),c$app_arg_12}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out = ({({({4'b0011,c$app_arg_11}),c$app_arg_10}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out = ({({({4'b0100,c$app_arg_9}),c$app_arg_8}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out = ({({4'b0101,c$app_arg_7}),((imm_3[0+:56]))});
          4'b0110 : map_out = ({({4'b0110,c$app_arg_6}),((imm_2[0+:56]))});
          4'b0111 : map_out = ({({({4'b0111,c$app_arg_5}),c$app_arg_4}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out = ({({({4'b1010,c$app_arg_3}),c$app_arg_2}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out = ({({({4'b1011,c$app_arg_1}),c$app_arg_0}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out = ({({4'b1100,(map_in[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out = ({({4'b1101,(map_in[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out = ({({4'b1110,(map_in[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out = 64'd17293822569102704640;
        endcase
      end


    assign c$case_alt_sel_alt_res[i*64+:64] = map_out;
  end
  endgenerate
  // map end

  assign c$vec_0 = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd0,64'd1}
                   ,{4'b0101,3'd1,64'd1}
                   ,{4'b0101,3'd2,64'd10}
                   ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd3,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd2,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i_0;
  generate
  for (i_0=0; i_0 < 23; i_0 = i_0 + 1) begin : map_0
    wire [70:0] map_in_0;
    assign map_in_0 = c$vec_0[i_0*71+:71];
    reg [63:0] map_out_0;
    // CPU.hs:112:1-6
    wire [2:0] dst_17;
    // CPU.hs:112:1-6
    wire [2:0] src_13;
    // CPU.hs:112:1-6
    wire [2:0] dst_18;
    // CPU.hs:112:1-6
    wire [2:0] src_14;
    // CPU.hs:112:1-6
    wire [2:0] lhs_1;
    // CPU.hs:112:1-6
    wire [2:0] rhs_1;
    // CPU.hs:112:1-6
    wire [2:0] dst_19;
    // CPU.hs:112:1-6
    wire [63:0] imm_4;
    // CPU.hs:112:1-6
    wire [2:0] dst_20;
    // CPU.hs:112:1-6
    wire [63:0] imm_5;
    // CPU.hs:112:1-6
    wire [2:0] dst_21;
    // CPU.hs:112:1-6
    wire [2:0] src_15;
    // CPU.hs:112:1-6
    wire [2:0] dst_22;
    // CPU.hs:112:1-6
    wire [2:0] src_16;
    // CPU.hs:112:1-6
    wire [2:0] dst_23;
    // CPU.hs:112:1-6
    wire [2:0] src_17;
    // CPU.hs:112:1-6
    wire [2:0] dst_24;
    // CPU.hs:112:1-6
    wire [2:0] src_18;
    // CPU.hs:112:1-6
    wire [2:0] dst_25;
    // CPU.hs:112:1-6
    wire [2:0] src_19;
    reg [3:0] c$app_arg_18;
    reg [3:0] c$app_arg_19;
    reg [3:0] c$app_arg_20;
    reg [3:0] c$app_arg_21;
    reg [3:0] c$app_arg_22;
    reg [3:0] c$app_arg_23;
    reg [3:0] c$app_arg_24;
    reg [3:0] c$app_arg_25;
    reg [3:0] c$app_arg_26;
    reg [3:0] c$app_arg_27;
    reg [3:0] c$app_arg_28;
    reg [3:0] c$app_arg_29;
    reg [3:0] c$app_arg_30;
    reg [3:0] c$app_arg_31;
    reg [3:0] c$app_arg_32;
    reg [3:0] c$app_arg_33;
    reg [3:0] c$app_arg_34;
    reg [3:0] c$app_arg_35;
      assign dst_17 = map_in_0[66:64];

      assign src_13 = map_in_0[63:61];

      assign dst_18 = map_in_0[66:64];

      assign src_14 = map_in_0[63:61];

      assign lhs_1 = map_in_0[66:64];

      assign rhs_1 = map_in_0[63:61];

      assign dst_19 = map_in_0[66:64];

      assign imm_4 = map_in_0[63:0];

      assign dst_20 = map_in_0[66:64];

      assign imm_5 = map_in_0[63:0];

      assign dst_21 = map_in_0[66:64];

      assign src_15 = map_in_0[63:61];

      assign dst_22 = map_in_0[66:64];

      assign src_16 = map_in_0[63:61];

      assign dst_23 = map_in_0[66:64];

      assign src_17 = map_in_0[63:61];

      assign dst_24 = map_in_0[66:64];

      assign src_18 = map_in_0[63:61];

      assign dst_25 = map_in_0[66:64];

      assign src_19 = map_in_0[63:61];

      always @(*) begin
        case(src_13)
          3'b000 : c$app_arg_18 = 4'b0000;
          3'b001 : c$app_arg_18 = 4'b0001;
          3'b010 : c$app_arg_18 = 4'b0010;
          3'b011 : c$app_arg_18 = 4'b0011;
          default : c$app_arg_18 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_17)
          3'b000 : c$app_arg_19 = 4'b0000;
          3'b001 : c$app_arg_19 = 4'b0001;
          3'b010 : c$app_arg_19 = 4'b0010;
          3'b011 : c$app_arg_19 = 4'b0011;
          default : c$app_arg_19 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_14)
          3'b000 : c$app_arg_20 = 4'b0000;
          3'b001 : c$app_arg_20 = 4'b0001;
          3'b010 : c$app_arg_20 = 4'b0010;
          3'b011 : c$app_arg_20 = 4'b0011;
          default : c$app_arg_20 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_18)
          3'b000 : c$app_arg_21 = 4'b0000;
          3'b001 : c$app_arg_21 = 4'b0001;
          3'b010 : c$app_arg_21 = 4'b0010;
          3'b011 : c$app_arg_21 = 4'b0011;
          default : c$app_arg_21 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_1)
          3'b000 : c$app_arg_22 = 4'b0000;
          3'b001 : c$app_arg_22 = 4'b0001;
          3'b010 : c$app_arg_22 = 4'b0010;
          3'b011 : c$app_arg_22 = 4'b0011;
          default : c$app_arg_22 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_1)
          3'b000 : c$app_arg_23 = 4'b0000;
          3'b001 : c$app_arg_23 = 4'b0001;
          3'b010 : c$app_arg_23 = 4'b0010;
          3'b011 : c$app_arg_23 = 4'b0011;
          default : c$app_arg_23 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_19)
          3'b000 : c$app_arg_24 = 4'b0000;
          3'b001 : c$app_arg_24 = 4'b0001;
          3'b010 : c$app_arg_24 = 4'b0010;
          3'b011 : c$app_arg_24 = 4'b0011;
          default : c$app_arg_24 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_20)
          3'b000 : c$app_arg_25 = 4'b0000;
          3'b001 : c$app_arg_25 = 4'b0001;
          3'b010 : c$app_arg_25 = 4'b0010;
          3'b011 : c$app_arg_25 = 4'b0011;
          default : c$app_arg_25 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_15)
          3'b000 : c$app_arg_26 = 4'b0000;
          3'b001 : c$app_arg_26 = 4'b0001;
          3'b010 : c$app_arg_26 = 4'b0010;
          3'b011 : c$app_arg_26 = 4'b0011;
          default : c$app_arg_26 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_21)
          3'b000 : c$app_arg_27 = 4'b0000;
          3'b001 : c$app_arg_27 = 4'b0001;
          3'b010 : c$app_arg_27 = 4'b0010;
          3'b011 : c$app_arg_27 = 4'b0011;
          default : c$app_arg_27 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_16)
          3'b000 : c$app_arg_28 = 4'b0000;
          3'b001 : c$app_arg_28 = 4'b0001;
          3'b010 : c$app_arg_28 = 4'b0010;
          3'b011 : c$app_arg_28 = 4'b0011;
          default : c$app_arg_28 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_22)
          3'b000 : c$app_arg_29 = 4'b0000;
          3'b001 : c$app_arg_29 = 4'b0001;
          3'b010 : c$app_arg_29 = 4'b0010;
          3'b011 : c$app_arg_29 = 4'b0011;
          default : c$app_arg_29 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_17)
          3'b000 : c$app_arg_30 = 4'b0000;
          3'b001 : c$app_arg_30 = 4'b0001;
          3'b010 : c$app_arg_30 = 4'b0010;
          3'b011 : c$app_arg_30 = 4'b0011;
          default : c$app_arg_30 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_23)
          3'b000 : c$app_arg_31 = 4'b0000;
          3'b001 : c$app_arg_31 = 4'b0001;
          3'b010 : c$app_arg_31 = 4'b0010;
          3'b011 : c$app_arg_31 = 4'b0011;
          default : c$app_arg_31 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_18)
          3'b000 : c$app_arg_32 = 4'b0000;
          3'b001 : c$app_arg_32 = 4'b0001;
          3'b010 : c$app_arg_32 = 4'b0010;
          3'b011 : c$app_arg_32 = 4'b0011;
          default : c$app_arg_32 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_24)
          3'b000 : c$app_arg_33 = 4'b0000;
          3'b001 : c$app_arg_33 = 4'b0001;
          3'b010 : c$app_arg_33 = 4'b0010;
          3'b011 : c$app_arg_33 = 4'b0011;
          default : c$app_arg_33 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_19)
          3'b000 : c$app_arg_34 = 4'b0000;
          3'b001 : c$app_arg_34 = 4'b0001;
          3'b010 : c$app_arg_34 = 4'b0010;
          3'b011 : c$app_arg_34 = 4'b0011;
          default : c$app_arg_34 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_25)
          3'b000 : c$app_arg_35 = 4'b0000;
          3'b001 : c$app_arg_35 = 4'b0001;
          3'b010 : c$app_arg_35 = 4'b0010;
          3'b011 : c$app_arg_35 = 4'b0011;
          default : c$app_arg_35 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in_0[70:67])
          4'b0000 : map_out_0 = ({({({4'b0000,c$app_arg_35}),c$app_arg_34}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out_0 = ({({({4'b0001,c$app_arg_33}),c$app_arg_32}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out_0 = ({({({4'b0010,c$app_arg_31}),c$app_arg_30}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out_0 = ({({({4'b0011,c$app_arg_29}),c$app_arg_28}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out_0 = ({({({4'b0100,c$app_arg_27}),c$app_arg_26}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out_0 = ({({4'b0101,c$app_arg_25}),((imm_5[0+:56]))});
          4'b0110 : map_out_0 = ({({4'b0110,c$app_arg_24}),((imm_4[0+:56]))});
          4'b0111 : map_out_0 = ({({({4'b0111,c$app_arg_23}),c$app_arg_22}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out_0 = ({({({4'b1010,c$app_arg_21}),c$app_arg_20}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out_0 = ({({({4'b1011,c$app_arg_19}),c$app_arg_18}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out_0 = ({({4'b1100,(map_in_0[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out_0 = ({({4'b1101,(map_in_0[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out_0 = ({({4'b1110,(map_in_0[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out_0 = 64'd17293822569102704640;
        endcase
      end


    assign c$case_alt_sel_alt_res_0[i_0*64+:64] = map_out_0;
  end
  endgenerate
  // map end

  always @(*) begin
    case(mode[72:71])
      2'b00 : c$case_alt = {{{2'b01,result_5}
                            ,{ds2,ds3,ds4,ds5,ds6,ds7 + 9'd1}}
                           ,{c$case_alt_sel_alt_res,({41 {64'd0}})}};
      2'b01 : c$case_alt = result;
      default : c$case_alt = {{{2'b10,71'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                              ,regs}
                             ,{c$case_alt_sel_alt_res_0,({41 {64'd0}})}};
    endcase
  end

  assign mode = c$arg[401:329];

  assign c$vec_1 = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd0,64'd1}
                   ,{4'b0101,3'd1,64'd1}
                   ,{4'b0101,3'd2,64'd10}
                   ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd3,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd2,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i_1;
  generate
  for (i_1=0; i_1 < 23; i_1 = i_1 + 1) begin : map_1
    wire [70:0] map_in_1;
    assign map_in_1 = c$vec_1[i_1*71+:71];
    reg [63:0] map_out_1;
    // CPU.hs:112:1-6
    wire [2:0] dst_26;
    // CPU.hs:112:1-6
    wire [2:0] src_20;
    // CPU.hs:112:1-6
    wire [2:0] dst_27;
    // CPU.hs:112:1-6
    wire [2:0] src_21;
    // CPU.hs:112:1-6
    wire [2:0] lhs_2;
    // CPU.hs:112:1-6
    wire [2:0] rhs_2;
    // CPU.hs:112:1-6
    wire [2:0] dst_28;
    // CPU.hs:112:1-6
    wire [63:0] imm_6;
    // CPU.hs:112:1-6
    wire [2:0] dst_29;
    // CPU.hs:112:1-6
    wire [63:0] imm_7;
    // CPU.hs:112:1-6
    wire [2:0] dst_30;
    // CPU.hs:112:1-6
    wire [2:0] src_22;
    // CPU.hs:112:1-6
    wire [2:0] dst_31;
    // CPU.hs:112:1-6
    wire [2:0] src_23;
    // CPU.hs:112:1-6
    wire [2:0] dst_32;
    // CPU.hs:112:1-6
    wire [2:0] src_24;
    // CPU.hs:112:1-6
    wire [2:0] dst_33;
    // CPU.hs:112:1-6
    wire [2:0] src_25;
    // CPU.hs:112:1-6
    wire [2:0] dst_34;
    // CPU.hs:112:1-6
    wire [2:0] src_26;
    reg [3:0] c$app_arg_36;
    reg [3:0] c$app_arg_37;
    reg [3:0] c$app_arg_38;
    reg [3:0] c$app_arg_39;
    reg [3:0] c$app_arg_40;
    reg [3:0] c$app_arg_41;
    reg [3:0] c$app_arg_42;
    reg [3:0] c$app_arg_43;
    reg [3:0] c$app_arg_44;
    reg [3:0] c$app_arg_45;
    reg [3:0] c$app_arg_46;
    reg [3:0] c$app_arg_47;
    reg [3:0] c$app_arg_48;
    reg [3:0] c$app_arg_49;
    reg [3:0] c$app_arg_50;
    reg [3:0] c$app_arg_51;
    reg [3:0] c$app_arg_52;
    reg [3:0] c$app_arg_53;
      assign dst_26 = map_in_1[66:64];

      assign src_20 = map_in_1[63:61];

      assign dst_27 = map_in_1[66:64];

      assign src_21 = map_in_1[63:61];

      assign lhs_2 = map_in_1[66:64];

      assign rhs_2 = map_in_1[63:61];

      assign dst_28 = map_in_1[66:64];

      assign imm_6 = map_in_1[63:0];

      assign dst_29 = map_in_1[66:64];

      assign imm_7 = map_in_1[63:0];

      assign dst_30 = map_in_1[66:64];

      assign src_22 = map_in_1[63:61];

      assign dst_31 = map_in_1[66:64];

      assign src_23 = map_in_1[63:61];

      assign dst_32 = map_in_1[66:64];

      assign src_24 = map_in_1[63:61];

      assign dst_33 = map_in_1[66:64];

      assign src_25 = map_in_1[63:61];

      assign dst_34 = map_in_1[66:64];

      assign src_26 = map_in_1[63:61];

      always @(*) begin
        case(src_20)
          3'b000 : c$app_arg_36 = 4'b0000;
          3'b001 : c$app_arg_36 = 4'b0001;
          3'b010 : c$app_arg_36 = 4'b0010;
          3'b011 : c$app_arg_36 = 4'b0011;
          default : c$app_arg_36 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_26)
          3'b000 : c$app_arg_37 = 4'b0000;
          3'b001 : c$app_arg_37 = 4'b0001;
          3'b010 : c$app_arg_37 = 4'b0010;
          3'b011 : c$app_arg_37 = 4'b0011;
          default : c$app_arg_37 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_21)
          3'b000 : c$app_arg_38 = 4'b0000;
          3'b001 : c$app_arg_38 = 4'b0001;
          3'b010 : c$app_arg_38 = 4'b0010;
          3'b011 : c$app_arg_38 = 4'b0011;
          default : c$app_arg_38 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_27)
          3'b000 : c$app_arg_39 = 4'b0000;
          3'b001 : c$app_arg_39 = 4'b0001;
          3'b010 : c$app_arg_39 = 4'b0010;
          3'b011 : c$app_arg_39 = 4'b0011;
          default : c$app_arg_39 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_2)
          3'b000 : c$app_arg_40 = 4'b0000;
          3'b001 : c$app_arg_40 = 4'b0001;
          3'b010 : c$app_arg_40 = 4'b0010;
          3'b011 : c$app_arg_40 = 4'b0011;
          default : c$app_arg_40 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_2)
          3'b000 : c$app_arg_41 = 4'b0000;
          3'b001 : c$app_arg_41 = 4'b0001;
          3'b010 : c$app_arg_41 = 4'b0010;
          3'b011 : c$app_arg_41 = 4'b0011;
          default : c$app_arg_41 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_28)
          3'b000 : c$app_arg_42 = 4'b0000;
          3'b001 : c$app_arg_42 = 4'b0001;
          3'b010 : c$app_arg_42 = 4'b0010;
          3'b011 : c$app_arg_42 = 4'b0011;
          default : c$app_arg_42 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_29)
          3'b000 : c$app_arg_43 = 4'b0000;
          3'b001 : c$app_arg_43 = 4'b0001;
          3'b010 : c$app_arg_43 = 4'b0010;
          3'b011 : c$app_arg_43 = 4'b0011;
          default : c$app_arg_43 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_22)
          3'b000 : c$app_arg_44 = 4'b0000;
          3'b001 : c$app_arg_44 = 4'b0001;
          3'b010 : c$app_arg_44 = 4'b0010;
          3'b011 : c$app_arg_44 = 4'b0011;
          default : c$app_arg_44 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_30)
          3'b000 : c$app_arg_45 = 4'b0000;
          3'b001 : c$app_arg_45 = 4'b0001;
          3'b010 : c$app_arg_45 = 4'b0010;
          3'b011 : c$app_arg_45 = 4'b0011;
          default : c$app_arg_45 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_23)
          3'b000 : c$app_arg_46 = 4'b0000;
          3'b001 : c$app_arg_46 = 4'b0001;
          3'b010 : c$app_arg_46 = 4'b0010;
          3'b011 : c$app_arg_46 = 4'b0011;
          default : c$app_arg_46 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_31)
          3'b000 : c$app_arg_47 = 4'b0000;
          3'b001 : c$app_arg_47 = 4'b0001;
          3'b010 : c$app_arg_47 = 4'b0010;
          3'b011 : c$app_arg_47 = 4'b0011;
          default : c$app_arg_47 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_24)
          3'b000 : c$app_arg_48 = 4'b0000;
          3'b001 : c$app_arg_48 = 4'b0001;
          3'b010 : c$app_arg_48 = 4'b0010;
          3'b011 : c$app_arg_48 = 4'b0011;
          default : c$app_arg_48 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_32)
          3'b000 : c$app_arg_49 = 4'b0000;
          3'b001 : c$app_arg_49 = 4'b0001;
          3'b010 : c$app_arg_49 = 4'b0010;
          3'b011 : c$app_arg_49 = 4'b0011;
          default : c$app_arg_49 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_25)
          3'b000 : c$app_arg_50 = 4'b0000;
          3'b001 : c$app_arg_50 = 4'b0001;
          3'b010 : c$app_arg_50 = 4'b0010;
          3'b011 : c$app_arg_50 = 4'b0011;
          default : c$app_arg_50 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_33)
          3'b000 : c$app_arg_51 = 4'b0000;
          3'b001 : c$app_arg_51 = 4'b0001;
          3'b010 : c$app_arg_51 = 4'b0010;
          3'b011 : c$app_arg_51 = 4'b0011;
          default : c$app_arg_51 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_26)
          3'b000 : c$app_arg_52 = 4'b0000;
          3'b001 : c$app_arg_52 = 4'b0001;
          3'b010 : c$app_arg_52 = 4'b0010;
          3'b011 : c$app_arg_52 = 4'b0011;
          default : c$app_arg_52 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_34)
          3'b000 : c$app_arg_53 = 4'b0000;
          3'b001 : c$app_arg_53 = 4'b0001;
          3'b010 : c$app_arg_53 = 4'b0010;
          3'b011 : c$app_arg_53 = 4'b0011;
          default : c$app_arg_53 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in_1[70:67])
          4'b0000 : map_out_1 = ({({({4'b0000,c$app_arg_53}),c$app_arg_52}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out_1 = ({({({4'b0001,c$app_arg_51}),c$app_arg_50}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out_1 = ({({({4'b0010,c$app_arg_49}),c$app_arg_48}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out_1 = ({({({4'b0011,c$app_arg_47}),c$app_arg_46}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out_1 = ({({({4'b0100,c$app_arg_45}),c$app_arg_44}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out_1 = ({({4'b0101,c$app_arg_43}),((imm_7[0+:56]))});
          4'b0110 : map_out_1 = ({({4'b0110,c$app_arg_42}),((imm_6[0+:56]))});
          4'b0111 : map_out_1 = ({({({4'b0111,c$app_arg_41}),c$app_arg_40}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out_1 = ({({({4'b1010,c$app_arg_39}),c$app_arg_38}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out_1 = ({({({4'b1011,c$app_arg_37}),c$app_arg_36}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out_1 = ({({4'b1100,(map_in_1[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out_1 = ({({4'b1101,(map_in_1[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out_1 = ({({4'b1110,(map_in_1[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out_1 = 64'd17293822569102704640;
        endcase
      end


    assign result_sel_alt_res[i_1*64+:64] = map_out_1;
  end
  endgenerate
  // map end

  assign c$vec_2 = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd0,64'd1}
                   ,{4'b0101,3'd1,64'd1}
                   ,{4'b0101,3'd2,64'd10}
                   ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd3,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd2,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i_2;
  generate
  for (i_2=0; i_2 < 23; i_2 = i_2 + 1) begin : map_2
    wire [70:0] map_in_2;
    assign map_in_2 = c$vec_2[i_2*71+:71];
    reg [63:0] map_out_2;
    // CPU.hs:112:1-6
    wire [2:0] dst_35;
    // CPU.hs:112:1-6
    wire [2:0] src_27;
    // CPU.hs:112:1-6
    wire [2:0] dst_36;
    // CPU.hs:112:1-6
    wire [2:0] src_28;
    // CPU.hs:112:1-6
    wire [2:0] lhs_3;
    // CPU.hs:112:1-6
    wire [2:0] rhs_3;
    // CPU.hs:112:1-6
    wire [2:0] dst_37;
    // CPU.hs:112:1-6
    wire [63:0] imm_8;
    // CPU.hs:112:1-6
    wire [2:0] dst_38;
    // CPU.hs:112:1-6
    wire [63:0] imm_9;
    // CPU.hs:112:1-6
    wire [2:0] dst_39;
    // CPU.hs:112:1-6
    wire [2:0] src_29;
    // CPU.hs:112:1-6
    wire [2:0] dst_40;
    // CPU.hs:112:1-6
    wire [2:0] src_30;
    // CPU.hs:112:1-6
    wire [2:0] dst_41;
    // CPU.hs:112:1-6
    wire [2:0] src_31;
    // CPU.hs:112:1-6
    wire [2:0] dst_42;
    // CPU.hs:112:1-6
    wire [2:0] src_32;
    // CPU.hs:112:1-6
    wire [2:0] dst_43;
    // CPU.hs:112:1-6
    wire [2:0] src_33;
    reg [3:0] c$app_arg_54;
    reg [3:0] c$app_arg_55;
    reg [3:0] c$app_arg_56;
    reg [3:0] c$app_arg_57;
    reg [3:0] c$app_arg_58;
    reg [3:0] c$app_arg_59;
    reg [3:0] c$app_arg_60;
    reg [3:0] c$app_arg_61;
    reg [3:0] c$app_arg_62;
    reg [3:0] c$app_arg_63;
    reg [3:0] c$app_arg_64;
    reg [3:0] c$app_arg_65;
    reg [3:0] c$app_arg_66;
    reg [3:0] c$app_arg_67;
    reg [3:0] c$app_arg_68;
    reg [3:0] c$app_arg_69;
    reg [3:0] c$app_arg_70;
    reg [3:0] c$app_arg_71;
      assign dst_35 = map_in_2[66:64];

      assign src_27 = map_in_2[63:61];

      assign dst_36 = map_in_2[66:64];

      assign src_28 = map_in_2[63:61];

      assign lhs_3 = map_in_2[66:64];

      assign rhs_3 = map_in_2[63:61];

      assign dst_37 = map_in_2[66:64];

      assign imm_8 = map_in_2[63:0];

      assign dst_38 = map_in_2[66:64];

      assign imm_9 = map_in_2[63:0];

      assign dst_39 = map_in_2[66:64];

      assign src_29 = map_in_2[63:61];

      assign dst_40 = map_in_2[66:64];

      assign src_30 = map_in_2[63:61];

      assign dst_41 = map_in_2[66:64];

      assign src_31 = map_in_2[63:61];

      assign dst_42 = map_in_2[66:64];

      assign src_32 = map_in_2[63:61];

      assign dst_43 = map_in_2[66:64];

      assign src_33 = map_in_2[63:61];

      always @(*) begin
        case(src_27)
          3'b000 : c$app_arg_54 = 4'b0000;
          3'b001 : c$app_arg_54 = 4'b0001;
          3'b010 : c$app_arg_54 = 4'b0010;
          3'b011 : c$app_arg_54 = 4'b0011;
          default : c$app_arg_54 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_35)
          3'b000 : c$app_arg_55 = 4'b0000;
          3'b001 : c$app_arg_55 = 4'b0001;
          3'b010 : c$app_arg_55 = 4'b0010;
          3'b011 : c$app_arg_55 = 4'b0011;
          default : c$app_arg_55 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_28)
          3'b000 : c$app_arg_56 = 4'b0000;
          3'b001 : c$app_arg_56 = 4'b0001;
          3'b010 : c$app_arg_56 = 4'b0010;
          3'b011 : c$app_arg_56 = 4'b0011;
          default : c$app_arg_56 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_36)
          3'b000 : c$app_arg_57 = 4'b0000;
          3'b001 : c$app_arg_57 = 4'b0001;
          3'b010 : c$app_arg_57 = 4'b0010;
          3'b011 : c$app_arg_57 = 4'b0011;
          default : c$app_arg_57 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_3)
          3'b000 : c$app_arg_58 = 4'b0000;
          3'b001 : c$app_arg_58 = 4'b0001;
          3'b010 : c$app_arg_58 = 4'b0010;
          3'b011 : c$app_arg_58 = 4'b0011;
          default : c$app_arg_58 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_3)
          3'b000 : c$app_arg_59 = 4'b0000;
          3'b001 : c$app_arg_59 = 4'b0001;
          3'b010 : c$app_arg_59 = 4'b0010;
          3'b011 : c$app_arg_59 = 4'b0011;
          default : c$app_arg_59 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_37)
          3'b000 : c$app_arg_60 = 4'b0000;
          3'b001 : c$app_arg_60 = 4'b0001;
          3'b010 : c$app_arg_60 = 4'b0010;
          3'b011 : c$app_arg_60 = 4'b0011;
          default : c$app_arg_60 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_38)
          3'b000 : c$app_arg_61 = 4'b0000;
          3'b001 : c$app_arg_61 = 4'b0001;
          3'b010 : c$app_arg_61 = 4'b0010;
          3'b011 : c$app_arg_61 = 4'b0011;
          default : c$app_arg_61 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_29)
          3'b000 : c$app_arg_62 = 4'b0000;
          3'b001 : c$app_arg_62 = 4'b0001;
          3'b010 : c$app_arg_62 = 4'b0010;
          3'b011 : c$app_arg_62 = 4'b0011;
          default : c$app_arg_62 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_39)
          3'b000 : c$app_arg_63 = 4'b0000;
          3'b001 : c$app_arg_63 = 4'b0001;
          3'b010 : c$app_arg_63 = 4'b0010;
          3'b011 : c$app_arg_63 = 4'b0011;
          default : c$app_arg_63 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_30)
          3'b000 : c$app_arg_64 = 4'b0000;
          3'b001 : c$app_arg_64 = 4'b0001;
          3'b010 : c$app_arg_64 = 4'b0010;
          3'b011 : c$app_arg_64 = 4'b0011;
          default : c$app_arg_64 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_40)
          3'b000 : c$app_arg_65 = 4'b0000;
          3'b001 : c$app_arg_65 = 4'b0001;
          3'b010 : c$app_arg_65 = 4'b0010;
          3'b011 : c$app_arg_65 = 4'b0011;
          default : c$app_arg_65 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_31)
          3'b000 : c$app_arg_66 = 4'b0000;
          3'b001 : c$app_arg_66 = 4'b0001;
          3'b010 : c$app_arg_66 = 4'b0010;
          3'b011 : c$app_arg_66 = 4'b0011;
          default : c$app_arg_66 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_41)
          3'b000 : c$app_arg_67 = 4'b0000;
          3'b001 : c$app_arg_67 = 4'b0001;
          3'b010 : c$app_arg_67 = 4'b0010;
          3'b011 : c$app_arg_67 = 4'b0011;
          default : c$app_arg_67 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_32)
          3'b000 : c$app_arg_68 = 4'b0000;
          3'b001 : c$app_arg_68 = 4'b0001;
          3'b010 : c$app_arg_68 = 4'b0010;
          3'b011 : c$app_arg_68 = 4'b0011;
          default : c$app_arg_68 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_42)
          3'b000 : c$app_arg_69 = 4'b0000;
          3'b001 : c$app_arg_69 = 4'b0001;
          3'b010 : c$app_arg_69 = 4'b0010;
          3'b011 : c$app_arg_69 = 4'b0011;
          default : c$app_arg_69 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_33)
          3'b000 : c$app_arg_70 = 4'b0000;
          3'b001 : c$app_arg_70 = 4'b0001;
          3'b010 : c$app_arg_70 = 4'b0010;
          3'b011 : c$app_arg_70 = 4'b0011;
          default : c$app_arg_70 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_43)
          3'b000 : c$app_arg_71 = 4'b0000;
          3'b001 : c$app_arg_71 = 4'b0001;
          3'b010 : c$app_arg_71 = 4'b0010;
          3'b011 : c$app_arg_71 = 4'b0011;
          default : c$app_arg_71 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in_2[70:67])
          4'b0000 : map_out_2 = ({({({4'b0000,c$app_arg_71}),c$app_arg_70}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out_2 = ({({({4'b0001,c$app_arg_69}),c$app_arg_68}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out_2 = ({({({4'b0010,c$app_arg_67}),c$app_arg_66}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out_2 = ({({({4'b0011,c$app_arg_65}),c$app_arg_64}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out_2 = ({({({4'b0100,c$app_arg_63}),c$app_arg_62}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out_2 = ({({4'b0101,c$app_arg_61}),((imm_9[0+:56]))});
          4'b0110 : map_out_2 = ({({4'b0110,c$app_arg_60}),((imm_8[0+:56]))});
          4'b0111 : map_out_2 = ({({({4'b0111,c$app_arg_59}),c$app_arg_58}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out_2 = ({({({4'b1010,c$app_arg_57}),c$app_arg_56}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out_2 = ({({({4'b1011,c$app_arg_55}),c$app_arg_54}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out_2 = ({({4'b1100,(map_in_2[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out_2 = ({({4'b1101,(map_in_2[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out_2 = ({({4'b1110,(map_in_2[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out_2 = 64'd17293822569102704640;
        endcase
      end


    assign result_sel_alt_res_0[i_2*64+:64] = map_out_2;
  end
  endgenerate
  // map end

  assign c$vec_3 = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd0,64'd1}
                   ,{4'b0101,3'd1,64'd1}
                   ,{4'b0101,3'd2,64'd10}
                   ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd3,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd2,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i_3;
  generate
  for (i_3=0; i_3 < 23; i_3 = i_3 + 1) begin : map_3
    wire [70:0] map_in_3;
    assign map_in_3 = c$vec_3[i_3*71+:71];
    reg [63:0] map_out_3;
    // CPU.hs:112:1-6
    wire [2:0] dst_44;
    // CPU.hs:112:1-6
    wire [2:0] src_34;
    // CPU.hs:112:1-6
    wire [2:0] dst_45;
    // CPU.hs:112:1-6
    wire [2:0] src_35;
    // CPU.hs:112:1-6
    wire [2:0] lhs_4;
    // CPU.hs:112:1-6
    wire [2:0] rhs_4;
    // CPU.hs:112:1-6
    wire [2:0] dst_46;
    // CPU.hs:112:1-6
    wire [63:0] imm_10;
    // CPU.hs:112:1-6
    wire [2:0] dst_47;
    // CPU.hs:112:1-6
    wire [63:0] imm_11;
    // CPU.hs:112:1-6
    wire [2:0] dst_48;
    // CPU.hs:112:1-6
    wire [2:0] src_36;
    // CPU.hs:112:1-6
    wire [2:0] dst_49;
    // CPU.hs:112:1-6
    wire [2:0] src_37;
    // CPU.hs:112:1-6
    wire [2:0] dst_50;
    // CPU.hs:112:1-6
    wire [2:0] src_38;
    // CPU.hs:112:1-6
    wire [2:0] dst_51;
    // CPU.hs:112:1-6
    wire [2:0] src_39;
    // CPU.hs:112:1-6
    wire [2:0] dst_52;
    // CPU.hs:112:1-6
    wire [2:0] src_40;
    reg [3:0] c$app_arg_72;
    reg [3:0] c$app_arg_73;
    reg [3:0] c$app_arg_74;
    reg [3:0] c$app_arg_75;
    reg [3:0] c$app_arg_76;
    reg [3:0] c$app_arg_77;
    reg [3:0] c$app_arg_78;
    reg [3:0] c$app_arg_79;
    reg [3:0] c$app_arg_80;
    reg [3:0] c$app_arg_81;
    reg [3:0] c$app_arg_82;
    reg [3:0] c$app_arg_83;
    reg [3:0] c$app_arg_84;
    reg [3:0] c$app_arg_85;
    reg [3:0] c$app_arg_86;
    reg [3:0] c$app_arg_87;
    reg [3:0] c$app_arg_88;
    reg [3:0] c$app_arg_89;
      assign dst_44 = map_in_3[66:64];

      assign src_34 = map_in_3[63:61];

      assign dst_45 = map_in_3[66:64];

      assign src_35 = map_in_3[63:61];

      assign lhs_4 = map_in_3[66:64];

      assign rhs_4 = map_in_3[63:61];

      assign dst_46 = map_in_3[66:64];

      assign imm_10 = map_in_3[63:0];

      assign dst_47 = map_in_3[66:64];

      assign imm_11 = map_in_3[63:0];

      assign dst_48 = map_in_3[66:64];

      assign src_36 = map_in_3[63:61];

      assign dst_49 = map_in_3[66:64];

      assign src_37 = map_in_3[63:61];

      assign dst_50 = map_in_3[66:64];

      assign src_38 = map_in_3[63:61];

      assign dst_51 = map_in_3[66:64];

      assign src_39 = map_in_3[63:61];

      assign dst_52 = map_in_3[66:64];

      assign src_40 = map_in_3[63:61];

      always @(*) begin
        case(src_34)
          3'b000 : c$app_arg_72 = 4'b0000;
          3'b001 : c$app_arg_72 = 4'b0001;
          3'b010 : c$app_arg_72 = 4'b0010;
          3'b011 : c$app_arg_72 = 4'b0011;
          default : c$app_arg_72 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_44)
          3'b000 : c$app_arg_73 = 4'b0000;
          3'b001 : c$app_arg_73 = 4'b0001;
          3'b010 : c$app_arg_73 = 4'b0010;
          3'b011 : c$app_arg_73 = 4'b0011;
          default : c$app_arg_73 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_35)
          3'b000 : c$app_arg_74 = 4'b0000;
          3'b001 : c$app_arg_74 = 4'b0001;
          3'b010 : c$app_arg_74 = 4'b0010;
          3'b011 : c$app_arg_74 = 4'b0011;
          default : c$app_arg_74 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_45)
          3'b000 : c$app_arg_75 = 4'b0000;
          3'b001 : c$app_arg_75 = 4'b0001;
          3'b010 : c$app_arg_75 = 4'b0010;
          3'b011 : c$app_arg_75 = 4'b0011;
          default : c$app_arg_75 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_4)
          3'b000 : c$app_arg_76 = 4'b0000;
          3'b001 : c$app_arg_76 = 4'b0001;
          3'b010 : c$app_arg_76 = 4'b0010;
          3'b011 : c$app_arg_76 = 4'b0011;
          default : c$app_arg_76 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_4)
          3'b000 : c$app_arg_77 = 4'b0000;
          3'b001 : c$app_arg_77 = 4'b0001;
          3'b010 : c$app_arg_77 = 4'b0010;
          3'b011 : c$app_arg_77 = 4'b0011;
          default : c$app_arg_77 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_46)
          3'b000 : c$app_arg_78 = 4'b0000;
          3'b001 : c$app_arg_78 = 4'b0001;
          3'b010 : c$app_arg_78 = 4'b0010;
          3'b011 : c$app_arg_78 = 4'b0011;
          default : c$app_arg_78 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_47)
          3'b000 : c$app_arg_79 = 4'b0000;
          3'b001 : c$app_arg_79 = 4'b0001;
          3'b010 : c$app_arg_79 = 4'b0010;
          3'b011 : c$app_arg_79 = 4'b0011;
          default : c$app_arg_79 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_36)
          3'b000 : c$app_arg_80 = 4'b0000;
          3'b001 : c$app_arg_80 = 4'b0001;
          3'b010 : c$app_arg_80 = 4'b0010;
          3'b011 : c$app_arg_80 = 4'b0011;
          default : c$app_arg_80 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_48)
          3'b000 : c$app_arg_81 = 4'b0000;
          3'b001 : c$app_arg_81 = 4'b0001;
          3'b010 : c$app_arg_81 = 4'b0010;
          3'b011 : c$app_arg_81 = 4'b0011;
          default : c$app_arg_81 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_37)
          3'b000 : c$app_arg_82 = 4'b0000;
          3'b001 : c$app_arg_82 = 4'b0001;
          3'b010 : c$app_arg_82 = 4'b0010;
          3'b011 : c$app_arg_82 = 4'b0011;
          default : c$app_arg_82 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_49)
          3'b000 : c$app_arg_83 = 4'b0000;
          3'b001 : c$app_arg_83 = 4'b0001;
          3'b010 : c$app_arg_83 = 4'b0010;
          3'b011 : c$app_arg_83 = 4'b0011;
          default : c$app_arg_83 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_38)
          3'b000 : c$app_arg_84 = 4'b0000;
          3'b001 : c$app_arg_84 = 4'b0001;
          3'b010 : c$app_arg_84 = 4'b0010;
          3'b011 : c$app_arg_84 = 4'b0011;
          default : c$app_arg_84 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_50)
          3'b000 : c$app_arg_85 = 4'b0000;
          3'b001 : c$app_arg_85 = 4'b0001;
          3'b010 : c$app_arg_85 = 4'b0010;
          3'b011 : c$app_arg_85 = 4'b0011;
          default : c$app_arg_85 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_39)
          3'b000 : c$app_arg_86 = 4'b0000;
          3'b001 : c$app_arg_86 = 4'b0001;
          3'b010 : c$app_arg_86 = 4'b0010;
          3'b011 : c$app_arg_86 = 4'b0011;
          default : c$app_arg_86 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_51)
          3'b000 : c$app_arg_87 = 4'b0000;
          3'b001 : c$app_arg_87 = 4'b0001;
          3'b010 : c$app_arg_87 = 4'b0010;
          3'b011 : c$app_arg_87 = 4'b0011;
          default : c$app_arg_87 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_40)
          3'b000 : c$app_arg_88 = 4'b0000;
          3'b001 : c$app_arg_88 = 4'b0001;
          3'b010 : c$app_arg_88 = 4'b0010;
          3'b011 : c$app_arg_88 = 4'b0011;
          default : c$app_arg_88 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_52)
          3'b000 : c$app_arg_89 = 4'b0000;
          3'b001 : c$app_arg_89 = 4'b0001;
          3'b010 : c$app_arg_89 = 4'b0010;
          3'b011 : c$app_arg_89 = 4'b0011;
          default : c$app_arg_89 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in_3[70:67])
          4'b0000 : map_out_3 = ({({({4'b0000,c$app_arg_89}),c$app_arg_88}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out_3 = ({({({4'b0001,c$app_arg_87}),c$app_arg_86}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out_3 = ({({({4'b0010,c$app_arg_85}),c$app_arg_84}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out_3 = ({({({4'b0011,c$app_arg_83}),c$app_arg_82}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out_3 = ({({({4'b0100,c$app_arg_81}),c$app_arg_80}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out_3 = ({({4'b0101,c$app_arg_79}),((imm_11[0+:56]))});
          4'b0110 : map_out_3 = ({({4'b0110,c$app_arg_78}),((imm_10[0+:56]))});
          4'b0111 : map_out_3 = ({({({4'b0111,c$app_arg_77}),c$app_arg_76}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out_3 = ({({({4'b1010,c$app_arg_75}),c$app_arg_74}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out_3 = ({({({4'b1011,c$app_arg_73}),c$app_arg_72}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out_3 = ({({4'b1100,(map_in_3[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out_3 = ({({4'b1101,(map_in_3[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out_3 = ({({4'b1110,(map_in_3[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out_3 = 64'd17293822569102704640;
        endcase
      end


    assign result_sel_alt_res_1[i_3*64+:64] = map_out_3;
  end
  endgenerate
  // map end

  assign c$vec_4 = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd0,64'd1}
                   ,{4'b0101,3'd1,64'd1}
                   ,{4'b0101,3'd2,64'd10}
                   ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd3,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd2,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i_4;
  generate
  for (i_4=0; i_4 < 23; i_4 = i_4 + 1) begin : map_4
    wire [70:0] map_in_4;
    assign map_in_4 = c$vec_4[i_4*71+:71];
    reg [63:0] map_out_4;
    // CPU.hs:112:1-6
    wire [2:0] dst_53;
    // CPU.hs:112:1-6
    wire [2:0] src_41;
    // CPU.hs:112:1-6
    wire [2:0] dst_54;
    // CPU.hs:112:1-6
    wire [2:0] src_42;
    // CPU.hs:112:1-6
    wire [2:0] lhs_5;
    // CPU.hs:112:1-6
    wire [2:0] rhs_5;
    // CPU.hs:112:1-6
    wire [2:0] dst_55;
    // CPU.hs:112:1-6
    wire [63:0] imm_12;
    // CPU.hs:112:1-6
    wire [2:0] dst_56;
    // CPU.hs:112:1-6
    wire [63:0] imm_13;
    // CPU.hs:112:1-6
    wire [2:0] dst_57;
    // CPU.hs:112:1-6
    wire [2:0] src_43;
    // CPU.hs:112:1-6
    wire [2:0] dst_58;
    // CPU.hs:112:1-6
    wire [2:0] src_44;
    // CPU.hs:112:1-6
    wire [2:0] dst_59;
    // CPU.hs:112:1-6
    wire [2:0] src_45;
    // CPU.hs:112:1-6
    wire [2:0] dst_60;
    // CPU.hs:112:1-6
    wire [2:0] src_46;
    // CPU.hs:112:1-6
    wire [2:0] dst_61;
    // CPU.hs:112:1-6
    wire [2:0] src_47;
    reg [3:0] c$app_arg_90;
    reg [3:0] c$app_arg_91;
    reg [3:0] c$app_arg_92;
    reg [3:0] c$app_arg_93;
    reg [3:0] c$app_arg_94;
    reg [3:0] c$app_arg_95;
    reg [3:0] c$app_arg_96;
    reg [3:0] c$app_arg_97;
    reg [3:0] c$app_arg_98;
    reg [3:0] c$app_arg_99;
    reg [3:0] c$app_arg_100;
    reg [3:0] c$app_arg_101;
    reg [3:0] c$app_arg_102;
    reg [3:0] c$app_arg_103;
    reg [3:0] c$app_arg_104;
    reg [3:0] c$app_arg_105;
    reg [3:0] c$app_arg_106;
    reg [3:0] c$app_arg_107;
      assign dst_53 = map_in_4[66:64];

      assign src_41 = map_in_4[63:61];

      assign dst_54 = map_in_4[66:64];

      assign src_42 = map_in_4[63:61];

      assign lhs_5 = map_in_4[66:64];

      assign rhs_5 = map_in_4[63:61];

      assign dst_55 = map_in_4[66:64];

      assign imm_12 = map_in_4[63:0];

      assign dst_56 = map_in_4[66:64];

      assign imm_13 = map_in_4[63:0];

      assign dst_57 = map_in_4[66:64];

      assign src_43 = map_in_4[63:61];

      assign dst_58 = map_in_4[66:64];

      assign src_44 = map_in_4[63:61];

      assign dst_59 = map_in_4[66:64];

      assign src_45 = map_in_4[63:61];

      assign dst_60 = map_in_4[66:64];

      assign src_46 = map_in_4[63:61];

      assign dst_61 = map_in_4[66:64];

      assign src_47 = map_in_4[63:61];

      always @(*) begin
        case(src_41)
          3'b000 : c$app_arg_90 = 4'b0000;
          3'b001 : c$app_arg_90 = 4'b0001;
          3'b010 : c$app_arg_90 = 4'b0010;
          3'b011 : c$app_arg_90 = 4'b0011;
          default : c$app_arg_90 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_53)
          3'b000 : c$app_arg_91 = 4'b0000;
          3'b001 : c$app_arg_91 = 4'b0001;
          3'b010 : c$app_arg_91 = 4'b0010;
          3'b011 : c$app_arg_91 = 4'b0011;
          default : c$app_arg_91 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_42)
          3'b000 : c$app_arg_92 = 4'b0000;
          3'b001 : c$app_arg_92 = 4'b0001;
          3'b010 : c$app_arg_92 = 4'b0010;
          3'b011 : c$app_arg_92 = 4'b0011;
          default : c$app_arg_92 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_54)
          3'b000 : c$app_arg_93 = 4'b0000;
          3'b001 : c$app_arg_93 = 4'b0001;
          3'b010 : c$app_arg_93 = 4'b0010;
          3'b011 : c$app_arg_93 = 4'b0011;
          default : c$app_arg_93 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_5)
          3'b000 : c$app_arg_94 = 4'b0000;
          3'b001 : c$app_arg_94 = 4'b0001;
          3'b010 : c$app_arg_94 = 4'b0010;
          3'b011 : c$app_arg_94 = 4'b0011;
          default : c$app_arg_94 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_5)
          3'b000 : c$app_arg_95 = 4'b0000;
          3'b001 : c$app_arg_95 = 4'b0001;
          3'b010 : c$app_arg_95 = 4'b0010;
          3'b011 : c$app_arg_95 = 4'b0011;
          default : c$app_arg_95 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_55)
          3'b000 : c$app_arg_96 = 4'b0000;
          3'b001 : c$app_arg_96 = 4'b0001;
          3'b010 : c$app_arg_96 = 4'b0010;
          3'b011 : c$app_arg_96 = 4'b0011;
          default : c$app_arg_96 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_56)
          3'b000 : c$app_arg_97 = 4'b0000;
          3'b001 : c$app_arg_97 = 4'b0001;
          3'b010 : c$app_arg_97 = 4'b0010;
          3'b011 : c$app_arg_97 = 4'b0011;
          default : c$app_arg_97 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_43)
          3'b000 : c$app_arg_98 = 4'b0000;
          3'b001 : c$app_arg_98 = 4'b0001;
          3'b010 : c$app_arg_98 = 4'b0010;
          3'b011 : c$app_arg_98 = 4'b0011;
          default : c$app_arg_98 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_57)
          3'b000 : c$app_arg_99 = 4'b0000;
          3'b001 : c$app_arg_99 = 4'b0001;
          3'b010 : c$app_arg_99 = 4'b0010;
          3'b011 : c$app_arg_99 = 4'b0011;
          default : c$app_arg_99 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_44)
          3'b000 : c$app_arg_100 = 4'b0000;
          3'b001 : c$app_arg_100 = 4'b0001;
          3'b010 : c$app_arg_100 = 4'b0010;
          3'b011 : c$app_arg_100 = 4'b0011;
          default : c$app_arg_100 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_58)
          3'b000 : c$app_arg_101 = 4'b0000;
          3'b001 : c$app_arg_101 = 4'b0001;
          3'b010 : c$app_arg_101 = 4'b0010;
          3'b011 : c$app_arg_101 = 4'b0011;
          default : c$app_arg_101 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_45)
          3'b000 : c$app_arg_102 = 4'b0000;
          3'b001 : c$app_arg_102 = 4'b0001;
          3'b010 : c$app_arg_102 = 4'b0010;
          3'b011 : c$app_arg_102 = 4'b0011;
          default : c$app_arg_102 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_59)
          3'b000 : c$app_arg_103 = 4'b0000;
          3'b001 : c$app_arg_103 = 4'b0001;
          3'b010 : c$app_arg_103 = 4'b0010;
          3'b011 : c$app_arg_103 = 4'b0011;
          default : c$app_arg_103 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_46)
          3'b000 : c$app_arg_104 = 4'b0000;
          3'b001 : c$app_arg_104 = 4'b0001;
          3'b010 : c$app_arg_104 = 4'b0010;
          3'b011 : c$app_arg_104 = 4'b0011;
          default : c$app_arg_104 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_60)
          3'b000 : c$app_arg_105 = 4'b0000;
          3'b001 : c$app_arg_105 = 4'b0001;
          3'b010 : c$app_arg_105 = 4'b0010;
          3'b011 : c$app_arg_105 = 4'b0011;
          default : c$app_arg_105 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_47)
          3'b000 : c$app_arg_106 = 4'b0000;
          3'b001 : c$app_arg_106 = 4'b0001;
          3'b010 : c$app_arg_106 = 4'b0010;
          3'b011 : c$app_arg_106 = 4'b0011;
          default : c$app_arg_106 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_61)
          3'b000 : c$app_arg_107 = 4'b0000;
          3'b001 : c$app_arg_107 = 4'b0001;
          3'b010 : c$app_arg_107 = 4'b0010;
          3'b011 : c$app_arg_107 = 4'b0011;
          default : c$app_arg_107 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in_4[70:67])
          4'b0000 : map_out_4 = ({({({4'b0000,c$app_arg_107}),c$app_arg_106}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out_4 = ({({({4'b0001,c$app_arg_105}),c$app_arg_104}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out_4 = ({({({4'b0010,c$app_arg_103}),c$app_arg_102}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out_4 = ({({({4'b0011,c$app_arg_101}),c$app_arg_100}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out_4 = ({({({4'b0100,c$app_arg_99}),c$app_arg_98}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out_4 = ({({4'b0101,c$app_arg_97}),((imm_13[0+:56]))});
          4'b0110 : map_out_4 = ({({4'b0110,c$app_arg_96}),((imm_12[0+:56]))});
          4'b0111 : map_out_4 = ({({({4'b0111,c$app_arg_95}),c$app_arg_94}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out_4 = ({({({4'b1010,c$app_arg_93}),c$app_arg_92}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out_4 = ({({({4'b1011,c$app_arg_91}),c$app_arg_90}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out_4 = ({({4'b1100,(map_in_4[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out_4 = ({({4'b1101,(map_in_4[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out_4 = ({({4'b1110,(map_in_4[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out_4 = 64'd17293822569102704640;
        endcase
      end


    assign result_sel_alt_res_2[i_4*64+:64] = map_out_4;
  end
  endgenerate
  // map end

  assign c$vec_5 = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd0,64'd1}
                   ,{4'b0101,3'd1,64'd1}
                   ,{4'b0101,3'd2,64'd10}
                   ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd3,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd2,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i_5;
  generate
  for (i_5=0; i_5 < 23; i_5 = i_5 + 1) begin : map_5
    wire [70:0] map_in_5;
    assign map_in_5 = c$vec_5[i_5*71+:71];
    reg [63:0] map_out_5;
    // CPU.hs:112:1-6
    wire [2:0] dst_62;
    // CPU.hs:112:1-6
    wire [2:0] src_48;
    // CPU.hs:112:1-6
    wire [2:0] dst_63;
    // CPU.hs:112:1-6
    wire [2:0] src_49;
    // CPU.hs:112:1-6
    wire [2:0] lhs_6;
    // CPU.hs:112:1-6
    wire [2:0] rhs_6;
    // CPU.hs:112:1-6
    wire [2:0] dst_64;
    // CPU.hs:112:1-6
    wire [63:0] imm_14;
    // CPU.hs:112:1-6
    wire [2:0] dst_65;
    // CPU.hs:112:1-6
    wire [63:0] imm_15;
    // CPU.hs:112:1-6
    wire [2:0] dst_66;
    // CPU.hs:112:1-6
    wire [2:0] src_50;
    // CPU.hs:112:1-6
    wire [2:0] dst_67;
    // CPU.hs:112:1-6
    wire [2:0] src_51;
    // CPU.hs:112:1-6
    wire [2:0] dst_68;
    // CPU.hs:112:1-6
    wire [2:0] src_52;
    // CPU.hs:112:1-6
    wire [2:0] dst_69;
    // CPU.hs:112:1-6
    wire [2:0] src_53;
    // CPU.hs:112:1-6
    wire [2:0] dst_70;
    // CPU.hs:112:1-6
    wire [2:0] src_54;
    reg [3:0] c$app_arg_108;
    reg [3:0] c$app_arg_109;
    reg [3:0] c$app_arg_110;
    reg [3:0] c$app_arg_111;
    reg [3:0] c$app_arg_112;
    reg [3:0] c$app_arg_113;
    reg [3:0] c$app_arg_114;
    reg [3:0] c$app_arg_115;
    reg [3:0] c$app_arg_116;
    reg [3:0] c$app_arg_117;
    reg [3:0] c$app_arg_118;
    reg [3:0] c$app_arg_119;
    reg [3:0] c$app_arg_120;
    reg [3:0] c$app_arg_121;
    reg [3:0] c$app_arg_122;
    reg [3:0] c$app_arg_123;
    reg [3:0] c$app_arg_124;
    reg [3:0] c$app_arg_125;
      assign dst_62 = map_in_5[66:64];

      assign src_48 = map_in_5[63:61];

      assign dst_63 = map_in_5[66:64];

      assign src_49 = map_in_5[63:61];

      assign lhs_6 = map_in_5[66:64];

      assign rhs_6 = map_in_5[63:61];

      assign dst_64 = map_in_5[66:64];

      assign imm_14 = map_in_5[63:0];

      assign dst_65 = map_in_5[66:64];

      assign imm_15 = map_in_5[63:0];

      assign dst_66 = map_in_5[66:64];

      assign src_50 = map_in_5[63:61];

      assign dst_67 = map_in_5[66:64];

      assign src_51 = map_in_5[63:61];

      assign dst_68 = map_in_5[66:64];

      assign src_52 = map_in_5[63:61];

      assign dst_69 = map_in_5[66:64];

      assign src_53 = map_in_5[63:61];

      assign dst_70 = map_in_5[66:64];

      assign src_54 = map_in_5[63:61];

      always @(*) begin
        case(src_48)
          3'b000 : c$app_arg_108 = 4'b0000;
          3'b001 : c$app_arg_108 = 4'b0001;
          3'b010 : c$app_arg_108 = 4'b0010;
          3'b011 : c$app_arg_108 = 4'b0011;
          default : c$app_arg_108 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_62)
          3'b000 : c$app_arg_109 = 4'b0000;
          3'b001 : c$app_arg_109 = 4'b0001;
          3'b010 : c$app_arg_109 = 4'b0010;
          3'b011 : c$app_arg_109 = 4'b0011;
          default : c$app_arg_109 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_49)
          3'b000 : c$app_arg_110 = 4'b0000;
          3'b001 : c$app_arg_110 = 4'b0001;
          3'b010 : c$app_arg_110 = 4'b0010;
          3'b011 : c$app_arg_110 = 4'b0011;
          default : c$app_arg_110 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_63)
          3'b000 : c$app_arg_111 = 4'b0000;
          3'b001 : c$app_arg_111 = 4'b0001;
          3'b010 : c$app_arg_111 = 4'b0010;
          3'b011 : c$app_arg_111 = 4'b0011;
          default : c$app_arg_111 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_6)
          3'b000 : c$app_arg_112 = 4'b0000;
          3'b001 : c$app_arg_112 = 4'b0001;
          3'b010 : c$app_arg_112 = 4'b0010;
          3'b011 : c$app_arg_112 = 4'b0011;
          default : c$app_arg_112 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_6)
          3'b000 : c$app_arg_113 = 4'b0000;
          3'b001 : c$app_arg_113 = 4'b0001;
          3'b010 : c$app_arg_113 = 4'b0010;
          3'b011 : c$app_arg_113 = 4'b0011;
          default : c$app_arg_113 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_64)
          3'b000 : c$app_arg_114 = 4'b0000;
          3'b001 : c$app_arg_114 = 4'b0001;
          3'b010 : c$app_arg_114 = 4'b0010;
          3'b011 : c$app_arg_114 = 4'b0011;
          default : c$app_arg_114 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_65)
          3'b000 : c$app_arg_115 = 4'b0000;
          3'b001 : c$app_arg_115 = 4'b0001;
          3'b010 : c$app_arg_115 = 4'b0010;
          3'b011 : c$app_arg_115 = 4'b0011;
          default : c$app_arg_115 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_50)
          3'b000 : c$app_arg_116 = 4'b0000;
          3'b001 : c$app_arg_116 = 4'b0001;
          3'b010 : c$app_arg_116 = 4'b0010;
          3'b011 : c$app_arg_116 = 4'b0011;
          default : c$app_arg_116 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_66)
          3'b000 : c$app_arg_117 = 4'b0000;
          3'b001 : c$app_arg_117 = 4'b0001;
          3'b010 : c$app_arg_117 = 4'b0010;
          3'b011 : c$app_arg_117 = 4'b0011;
          default : c$app_arg_117 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_51)
          3'b000 : c$app_arg_118 = 4'b0000;
          3'b001 : c$app_arg_118 = 4'b0001;
          3'b010 : c$app_arg_118 = 4'b0010;
          3'b011 : c$app_arg_118 = 4'b0011;
          default : c$app_arg_118 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_67)
          3'b000 : c$app_arg_119 = 4'b0000;
          3'b001 : c$app_arg_119 = 4'b0001;
          3'b010 : c$app_arg_119 = 4'b0010;
          3'b011 : c$app_arg_119 = 4'b0011;
          default : c$app_arg_119 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_52)
          3'b000 : c$app_arg_120 = 4'b0000;
          3'b001 : c$app_arg_120 = 4'b0001;
          3'b010 : c$app_arg_120 = 4'b0010;
          3'b011 : c$app_arg_120 = 4'b0011;
          default : c$app_arg_120 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_68)
          3'b000 : c$app_arg_121 = 4'b0000;
          3'b001 : c$app_arg_121 = 4'b0001;
          3'b010 : c$app_arg_121 = 4'b0010;
          3'b011 : c$app_arg_121 = 4'b0011;
          default : c$app_arg_121 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_53)
          3'b000 : c$app_arg_122 = 4'b0000;
          3'b001 : c$app_arg_122 = 4'b0001;
          3'b010 : c$app_arg_122 = 4'b0010;
          3'b011 : c$app_arg_122 = 4'b0011;
          default : c$app_arg_122 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_69)
          3'b000 : c$app_arg_123 = 4'b0000;
          3'b001 : c$app_arg_123 = 4'b0001;
          3'b010 : c$app_arg_123 = 4'b0010;
          3'b011 : c$app_arg_123 = 4'b0011;
          default : c$app_arg_123 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_54)
          3'b000 : c$app_arg_124 = 4'b0000;
          3'b001 : c$app_arg_124 = 4'b0001;
          3'b010 : c$app_arg_124 = 4'b0010;
          3'b011 : c$app_arg_124 = 4'b0011;
          default : c$app_arg_124 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_70)
          3'b000 : c$app_arg_125 = 4'b0000;
          3'b001 : c$app_arg_125 = 4'b0001;
          3'b010 : c$app_arg_125 = 4'b0010;
          3'b011 : c$app_arg_125 = 4'b0011;
          default : c$app_arg_125 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in_5[70:67])
          4'b0000 : map_out_5 = ({({({4'b0000,c$app_arg_125}),c$app_arg_124}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out_5 = ({({({4'b0001,c$app_arg_123}),c$app_arg_122}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out_5 = ({({({4'b0010,c$app_arg_121}),c$app_arg_120}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out_5 = ({({({4'b0011,c$app_arg_119}),c$app_arg_118}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out_5 = ({({({4'b0100,c$app_arg_117}),c$app_arg_116}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out_5 = ({({4'b0101,c$app_arg_115}),((imm_15[0+:56]))});
          4'b0110 : map_out_5 = ({({4'b0110,c$app_arg_114}),((imm_14[0+:56]))});
          4'b0111 : map_out_5 = ({({({4'b0111,c$app_arg_113}),c$app_arg_112}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out_5 = ({({({4'b1010,c$app_arg_111}),c$app_arg_110}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out_5 = ({({({4'b1011,c$app_arg_109}),c$app_arg_108}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out_5 = ({({4'b1100,(map_in_5[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out_5 = ({({4'b1101,(map_in_5[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out_5 = ({({4'b1110,(map_in_5[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out_5 = 64'd17293822569102704640;
        endcase
      end


    assign result_sel_alt_res_3[i_5*64+:64] = map_out_5;
  end
  endgenerate
  // map end

  assign c$vec_6 = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd0,64'd1}
                   ,{4'b0101,3'd1,64'd1}
                   ,{4'b0101,3'd2,64'd10}
                   ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd3,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd2,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i_6;
  generate
  for (i_6=0; i_6 < 23; i_6 = i_6 + 1) begin : map_6
    wire [70:0] map_in_6;
    assign map_in_6 = c$vec_6[i_6*71+:71];
    reg [63:0] map_out_6;
    // CPU.hs:112:1-6
    wire [2:0] dst_71;
    // CPU.hs:112:1-6
    wire [2:0] src_55;
    // CPU.hs:112:1-6
    wire [2:0] dst_72;
    // CPU.hs:112:1-6
    wire [2:0] src_56;
    // CPU.hs:112:1-6
    wire [2:0] lhs_7;
    // CPU.hs:112:1-6
    wire [2:0] rhs_7;
    // CPU.hs:112:1-6
    wire [2:0] dst_73;
    // CPU.hs:112:1-6
    wire [63:0] imm_16;
    // CPU.hs:112:1-6
    wire [2:0] dst_74;
    // CPU.hs:112:1-6
    wire [63:0] imm_17;
    // CPU.hs:112:1-6
    wire [2:0] dst_75;
    // CPU.hs:112:1-6
    wire [2:0] src_57;
    // CPU.hs:112:1-6
    wire [2:0] dst_76;
    // CPU.hs:112:1-6
    wire [2:0] src_58;
    // CPU.hs:112:1-6
    wire [2:0] dst_77;
    // CPU.hs:112:1-6
    wire [2:0] src_59;
    // CPU.hs:112:1-6
    wire [2:0] dst_78;
    // CPU.hs:112:1-6
    wire [2:0] src_60;
    // CPU.hs:112:1-6
    wire [2:0] dst_79;
    // CPU.hs:112:1-6
    wire [2:0] src_61;
    reg [3:0] c$app_arg_126;
    reg [3:0] c$app_arg_127;
    reg [3:0] c$app_arg_128;
    reg [3:0] c$app_arg_129;
    reg [3:0] c$app_arg_130;
    reg [3:0] c$app_arg_131;
    reg [3:0] c$app_arg_132;
    reg [3:0] c$app_arg_133;
    reg [3:0] c$app_arg_134;
    reg [3:0] c$app_arg_135;
    reg [3:0] c$app_arg_136;
    reg [3:0] c$app_arg_137;
    reg [3:0] c$app_arg_138;
    reg [3:0] c$app_arg_139;
    reg [3:0] c$app_arg_140;
    reg [3:0] c$app_arg_141;
    reg [3:0] c$app_arg_142;
    reg [3:0] c$app_arg_143;
      assign dst_71 = map_in_6[66:64];

      assign src_55 = map_in_6[63:61];

      assign dst_72 = map_in_6[66:64];

      assign src_56 = map_in_6[63:61];

      assign lhs_7 = map_in_6[66:64];

      assign rhs_7 = map_in_6[63:61];

      assign dst_73 = map_in_6[66:64];

      assign imm_16 = map_in_6[63:0];

      assign dst_74 = map_in_6[66:64];

      assign imm_17 = map_in_6[63:0];

      assign dst_75 = map_in_6[66:64];

      assign src_57 = map_in_6[63:61];

      assign dst_76 = map_in_6[66:64];

      assign src_58 = map_in_6[63:61];

      assign dst_77 = map_in_6[66:64];

      assign src_59 = map_in_6[63:61];

      assign dst_78 = map_in_6[66:64];

      assign src_60 = map_in_6[63:61];

      assign dst_79 = map_in_6[66:64];

      assign src_61 = map_in_6[63:61];

      always @(*) begin
        case(src_55)
          3'b000 : c$app_arg_126 = 4'b0000;
          3'b001 : c$app_arg_126 = 4'b0001;
          3'b010 : c$app_arg_126 = 4'b0010;
          3'b011 : c$app_arg_126 = 4'b0011;
          default : c$app_arg_126 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_71)
          3'b000 : c$app_arg_127 = 4'b0000;
          3'b001 : c$app_arg_127 = 4'b0001;
          3'b010 : c$app_arg_127 = 4'b0010;
          3'b011 : c$app_arg_127 = 4'b0011;
          default : c$app_arg_127 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_56)
          3'b000 : c$app_arg_128 = 4'b0000;
          3'b001 : c$app_arg_128 = 4'b0001;
          3'b010 : c$app_arg_128 = 4'b0010;
          3'b011 : c$app_arg_128 = 4'b0011;
          default : c$app_arg_128 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_72)
          3'b000 : c$app_arg_129 = 4'b0000;
          3'b001 : c$app_arg_129 = 4'b0001;
          3'b010 : c$app_arg_129 = 4'b0010;
          3'b011 : c$app_arg_129 = 4'b0011;
          default : c$app_arg_129 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_7)
          3'b000 : c$app_arg_130 = 4'b0000;
          3'b001 : c$app_arg_130 = 4'b0001;
          3'b010 : c$app_arg_130 = 4'b0010;
          3'b011 : c$app_arg_130 = 4'b0011;
          default : c$app_arg_130 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_7)
          3'b000 : c$app_arg_131 = 4'b0000;
          3'b001 : c$app_arg_131 = 4'b0001;
          3'b010 : c$app_arg_131 = 4'b0010;
          3'b011 : c$app_arg_131 = 4'b0011;
          default : c$app_arg_131 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_73)
          3'b000 : c$app_arg_132 = 4'b0000;
          3'b001 : c$app_arg_132 = 4'b0001;
          3'b010 : c$app_arg_132 = 4'b0010;
          3'b011 : c$app_arg_132 = 4'b0011;
          default : c$app_arg_132 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_74)
          3'b000 : c$app_arg_133 = 4'b0000;
          3'b001 : c$app_arg_133 = 4'b0001;
          3'b010 : c$app_arg_133 = 4'b0010;
          3'b011 : c$app_arg_133 = 4'b0011;
          default : c$app_arg_133 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_57)
          3'b000 : c$app_arg_134 = 4'b0000;
          3'b001 : c$app_arg_134 = 4'b0001;
          3'b010 : c$app_arg_134 = 4'b0010;
          3'b011 : c$app_arg_134 = 4'b0011;
          default : c$app_arg_134 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_75)
          3'b000 : c$app_arg_135 = 4'b0000;
          3'b001 : c$app_arg_135 = 4'b0001;
          3'b010 : c$app_arg_135 = 4'b0010;
          3'b011 : c$app_arg_135 = 4'b0011;
          default : c$app_arg_135 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_58)
          3'b000 : c$app_arg_136 = 4'b0000;
          3'b001 : c$app_arg_136 = 4'b0001;
          3'b010 : c$app_arg_136 = 4'b0010;
          3'b011 : c$app_arg_136 = 4'b0011;
          default : c$app_arg_136 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_76)
          3'b000 : c$app_arg_137 = 4'b0000;
          3'b001 : c$app_arg_137 = 4'b0001;
          3'b010 : c$app_arg_137 = 4'b0010;
          3'b011 : c$app_arg_137 = 4'b0011;
          default : c$app_arg_137 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_59)
          3'b000 : c$app_arg_138 = 4'b0000;
          3'b001 : c$app_arg_138 = 4'b0001;
          3'b010 : c$app_arg_138 = 4'b0010;
          3'b011 : c$app_arg_138 = 4'b0011;
          default : c$app_arg_138 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_77)
          3'b000 : c$app_arg_139 = 4'b0000;
          3'b001 : c$app_arg_139 = 4'b0001;
          3'b010 : c$app_arg_139 = 4'b0010;
          3'b011 : c$app_arg_139 = 4'b0011;
          default : c$app_arg_139 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_60)
          3'b000 : c$app_arg_140 = 4'b0000;
          3'b001 : c$app_arg_140 = 4'b0001;
          3'b010 : c$app_arg_140 = 4'b0010;
          3'b011 : c$app_arg_140 = 4'b0011;
          default : c$app_arg_140 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_78)
          3'b000 : c$app_arg_141 = 4'b0000;
          3'b001 : c$app_arg_141 = 4'b0001;
          3'b010 : c$app_arg_141 = 4'b0010;
          3'b011 : c$app_arg_141 = 4'b0011;
          default : c$app_arg_141 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_61)
          3'b000 : c$app_arg_142 = 4'b0000;
          3'b001 : c$app_arg_142 = 4'b0001;
          3'b010 : c$app_arg_142 = 4'b0010;
          3'b011 : c$app_arg_142 = 4'b0011;
          default : c$app_arg_142 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_79)
          3'b000 : c$app_arg_143 = 4'b0000;
          3'b001 : c$app_arg_143 = 4'b0001;
          3'b010 : c$app_arg_143 = 4'b0010;
          3'b011 : c$app_arg_143 = 4'b0011;
          default : c$app_arg_143 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in_6[70:67])
          4'b0000 : map_out_6 = ({({({4'b0000,c$app_arg_143}),c$app_arg_142}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out_6 = ({({({4'b0001,c$app_arg_141}),c$app_arg_140}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out_6 = ({({({4'b0010,c$app_arg_139}),c$app_arg_138}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out_6 = ({({({4'b0011,c$app_arg_137}),c$app_arg_136}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out_6 = ({({({4'b0100,c$app_arg_135}),c$app_arg_134}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out_6 = ({({4'b0101,c$app_arg_133}),((imm_17[0+:56]))});
          4'b0110 : map_out_6 = ({({4'b0110,c$app_arg_132}),((imm_16[0+:56]))});
          4'b0111 : map_out_6 = ({({({4'b0111,c$app_arg_131}),c$app_arg_130}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out_6 = ({({({4'b1010,c$app_arg_129}),c$app_arg_128}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out_6 = ({({({4'b1011,c$app_arg_127}),c$app_arg_126}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out_6 = ({({4'b1100,(map_in_6[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out_6 = ({({4'b1101,(map_in_6[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out_6 = ({({4'b1110,(map_in_6[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out_6 = 64'd17293822569102704640;
        endcase
      end


    assign result_sel_alt_res_4[i_6*64+:64] = map_out_6;
  end
  endgenerate
  // map end

  assign c$vec_7 = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd0,64'd1}
                   ,{4'b0101,3'd1,64'd1}
                   ,{4'b0101,3'd2,64'd10}
                   ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd3,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd2,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i_7;
  generate
  for (i_7=0; i_7 < 23; i_7 = i_7 + 1) begin : map_7
    wire [70:0] map_in_7;
    assign map_in_7 = c$vec_7[i_7*71+:71];
    reg [63:0] map_out_7;
    // CPU.hs:112:1-6
    wire [2:0] dst_80;
    // CPU.hs:112:1-6
    wire [2:0] src_62;
    // CPU.hs:112:1-6
    wire [2:0] dst_81;
    // CPU.hs:112:1-6
    wire [2:0] src_63;
    // CPU.hs:112:1-6
    wire [2:0] lhs_8;
    // CPU.hs:112:1-6
    wire [2:0] rhs_8;
    // CPU.hs:112:1-6
    wire [2:0] dst_82;
    // CPU.hs:112:1-6
    wire [63:0] imm_18;
    // CPU.hs:112:1-6
    wire [2:0] dst_83;
    // CPU.hs:112:1-6
    wire [63:0] imm_19;
    // CPU.hs:112:1-6
    wire [2:0] dst_84;
    // CPU.hs:112:1-6
    wire [2:0] src_64;
    // CPU.hs:112:1-6
    wire [2:0] dst_85;
    // CPU.hs:112:1-6
    wire [2:0] src_65;
    // CPU.hs:112:1-6
    wire [2:0] dst_86;
    // CPU.hs:112:1-6
    wire [2:0] src_66;
    // CPU.hs:112:1-6
    wire [2:0] dst_87;
    // CPU.hs:112:1-6
    wire [2:0] src_67;
    // CPU.hs:112:1-6
    wire [2:0] dst_88;
    // CPU.hs:112:1-6
    wire [2:0] src_68;
    reg [3:0] c$app_arg_144;
    reg [3:0] c$app_arg_145;
    reg [3:0] c$app_arg_146;
    reg [3:0] c$app_arg_147;
    reg [3:0] c$app_arg_148;
    reg [3:0] c$app_arg_149;
    reg [3:0] c$app_arg_150;
    reg [3:0] c$app_arg_151;
    reg [3:0] c$app_arg_152;
    reg [3:0] c$app_arg_153;
    reg [3:0] c$app_arg_154;
    reg [3:0] c$app_arg_155;
    reg [3:0] c$app_arg_156;
    reg [3:0] c$app_arg_157;
    reg [3:0] c$app_arg_158;
    reg [3:0] c$app_arg_159;
    reg [3:0] c$app_arg_160;
    reg [3:0] c$app_arg_161;
      assign dst_80 = map_in_7[66:64];

      assign src_62 = map_in_7[63:61];

      assign dst_81 = map_in_7[66:64];

      assign src_63 = map_in_7[63:61];

      assign lhs_8 = map_in_7[66:64];

      assign rhs_8 = map_in_7[63:61];

      assign dst_82 = map_in_7[66:64];

      assign imm_18 = map_in_7[63:0];

      assign dst_83 = map_in_7[66:64];

      assign imm_19 = map_in_7[63:0];

      assign dst_84 = map_in_7[66:64];

      assign src_64 = map_in_7[63:61];

      assign dst_85 = map_in_7[66:64];

      assign src_65 = map_in_7[63:61];

      assign dst_86 = map_in_7[66:64];

      assign src_66 = map_in_7[63:61];

      assign dst_87 = map_in_7[66:64];

      assign src_67 = map_in_7[63:61];

      assign dst_88 = map_in_7[66:64];

      assign src_68 = map_in_7[63:61];

      always @(*) begin
        case(src_62)
          3'b000 : c$app_arg_144 = 4'b0000;
          3'b001 : c$app_arg_144 = 4'b0001;
          3'b010 : c$app_arg_144 = 4'b0010;
          3'b011 : c$app_arg_144 = 4'b0011;
          default : c$app_arg_144 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_80)
          3'b000 : c$app_arg_145 = 4'b0000;
          3'b001 : c$app_arg_145 = 4'b0001;
          3'b010 : c$app_arg_145 = 4'b0010;
          3'b011 : c$app_arg_145 = 4'b0011;
          default : c$app_arg_145 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_63)
          3'b000 : c$app_arg_146 = 4'b0000;
          3'b001 : c$app_arg_146 = 4'b0001;
          3'b010 : c$app_arg_146 = 4'b0010;
          3'b011 : c$app_arg_146 = 4'b0011;
          default : c$app_arg_146 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_81)
          3'b000 : c$app_arg_147 = 4'b0000;
          3'b001 : c$app_arg_147 = 4'b0001;
          3'b010 : c$app_arg_147 = 4'b0010;
          3'b011 : c$app_arg_147 = 4'b0011;
          default : c$app_arg_147 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_8)
          3'b000 : c$app_arg_148 = 4'b0000;
          3'b001 : c$app_arg_148 = 4'b0001;
          3'b010 : c$app_arg_148 = 4'b0010;
          3'b011 : c$app_arg_148 = 4'b0011;
          default : c$app_arg_148 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_8)
          3'b000 : c$app_arg_149 = 4'b0000;
          3'b001 : c$app_arg_149 = 4'b0001;
          3'b010 : c$app_arg_149 = 4'b0010;
          3'b011 : c$app_arg_149 = 4'b0011;
          default : c$app_arg_149 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_82)
          3'b000 : c$app_arg_150 = 4'b0000;
          3'b001 : c$app_arg_150 = 4'b0001;
          3'b010 : c$app_arg_150 = 4'b0010;
          3'b011 : c$app_arg_150 = 4'b0011;
          default : c$app_arg_150 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_83)
          3'b000 : c$app_arg_151 = 4'b0000;
          3'b001 : c$app_arg_151 = 4'b0001;
          3'b010 : c$app_arg_151 = 4'b0010;
          3'b011 : c$app_arg_151 = 4'b0011;
          default : c$app_arg_151 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_64)
          3'b000 : c$app_arg_152 = 4'b0000;
          3'b001 : c$app_arg_152 = 4'b0001;
          3'b010 : c$app_arg_152 = 4'b0010;
          3'b011 : c$app_arg_152 = 4'b0011;
          default : c$app_arg_152 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_84)
          3'b000 : c$app_arg_153 = 4'b0000;
          3'b001 : c$app_arg_153 = 4'b0001;
          3'b010 : c$app_arg_153 = 4'b0010;
          3'b011 : c$app_arg_153 = 4'b0011;
          default : c$app_arg_153 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_65)
          3'b000 : c$app_arg_154 = 4'b0000;
          3'b001 : c$app_arg_154 = 4'b0001;
          3'b010 : c$app_arg_154 = 4'b0010;
          3'b011 : c$app_arg_154 = 4'b0011;
          default : c$app_arg_154 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_85)
          3'b000 : c$app_arg_155 = 4'b0000;
          3'b001 : c$app_arg_155 = 4'b0001;
          3'b010 : c$app_arg_155 = 4'b0010;
          3'b011 : c$app_arg_155 = 4'b0011;
          default : c$app_arg_155 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_66)
          3'b000 : c$app_arg_156 = 4'b0000;
          3'b001 : c$app_arg_156 = 4'b0001;
          3'b010 : c$app_arg_156 = 4'b0010;
          3'b011 : c$app_arg_156 = 4'b0011;
          default : c$app_arg_156 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_86)
          3'b000 : c$app_arg_157 = 4'b0000;
          3'b001 : c$app_arg_157 = 4'b0001;
          3'b010 : c$app_arg_157 = 4'b0010;
          3'b011 : c$app_arg_157 = 4'b0011;
          default : c$app_arg_157 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_67)
          3'b000 : c$app_arg_158 = 4'b0000;
          3'b001 : c$app_arg_158 = 4'b0001;
          3'b010 : c$app_arg_158 = 4'b0010;
          3'b011 : c$app_arg_158 = 4'b0011;
          default : c$app_arg_158 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_87)
          3'b000 : c$app_arg_159 = 4'b0000;
          3'b001 : c$app_arg_159 = 4'b0001;
          3'b010 : c$app_arg_159 = 4'b0010;
          3'b011 : c$app_arg_159 = 4'b0011;
          default : c$app_arg_159 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_68)
          3'b000 : c$app_arg_160 = 4'b0000;
          3'b001 : c$app_arg_160 = 4'b0001;
          3'b010 : c$app_arg_160 = 4'b0010;
          3'b011 : c$app_arg_160 = 4'b0011;
          default : c$app_arg_160 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_88)
          3'b000 : c$app_arg_161 = 4'b0000;
          3'b001 : c$app_arg_161 = 4'b0001;
          3'b010 : c$app_arg_161 = 4'b0010;
          3'b011 : c$app_arg_161 = 4'b0011;
          default : c$app_arg_161 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in_7[70:67])
          4'b0000 : map_out_7 = ({({({4'b0000,c$app_arg_161}),c$app_arg_160}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out_7 = ({({({4'b0001,c$app_arg_159}),c$app_arg_158}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out_7 = ({({({4'b0010,c$app_arg_157}),c$app_arg_156}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out_7 = ({({({4'b0011,c$app_arg_155}),c$app_arg_154}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out_7 = ({({({4'b0100,c$app_arg_153}),c$app_arg_152}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out_7 = ({({4'b0101,c$app_arg_151}),((imm_19[0+:56]))});
          4'b0110 : map_out_7 = ({({4'b0110,c$app_arg_150}),((imm_18[0+:56]))});
          4'b0111 : map_out_7 = ({({({4'b0111,c$app_arg_149}),c$app_arg_148}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out_7 = ({({({4'b1010,c$app_arg_147}),c$app_arg_146}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out_7 = ({({({4'b1011,c$app_arg_145}),c$app_arg_144}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out_7 = ({({4'b1100,(map_in_7[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out_7 = ({({4'b1101,(map_in_7[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out_7 = ({({4'b1110,(map_in_7[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out_7 = 64'd17293822569102704640;
        endcase
      end


    assign result_sel_alt_res_5[i_7*64+:64] = map_out_7;
  end
  endgenerate
  // map end

  assign c$vec_8 = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd0,64'd1}
                   ,{4'b0101,3'd1,64'd1}
                   ,{4'b0101,3'd2,64'd10}
                   ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd3,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd2,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i_8;
  generate
  for (i_8=0; i_8 < 23; i_8 = i_8 + 1) begin : map_8
    wire [70:0] map_in_8;
    assign map_in_8 = c$vec_8[i_8*71+:71];
    reg [63:0] map_out_8;
    // CPU.hs:112:1-6
    wire [2:0] dst_89;
    // CPU.hs:112:1-6
    wire [2:0] src_69;
    // CPU.hs:112:1-6
    wire [2:0] dst_90;
    // CPU.hs:112:1-6
    wire [2:0] src_70;
    // CPU.hs:112:1-6
    wire [2:0] lhs_9;
    // CPU.hs:112:1-6
    wire [2:0] rhs_9;
    // CPU.hs:112:1-6
    wire [2:0] dst_91;
    // CPU.hs:112:1-6
    wire [63:0] imm_20;
    // CPU.hs:112:1-6
    wire [2:0] dst_92;
    // CPU.hs:112:1-6
    wire [63:0] imm_21;
    // CPU.hs:112:1-6
    wire [2:0] dst_93;
    // CPU.hs:112:1-6
    wire [2:0] src_71;
    // CPU.hs:112:1-6
    wire [2:0] dst_94;
    // CPU.hs:112:1-6
    wire [2:0] src_72;
    // CPU.hs:112:1-6
    wire [2:0] dst_95;
    // CPU.hs:112:1-6
    wire [2:0] src_73;
    // CPU.hs:112:1-6
    wire [2:0] dst_96;
    // CPU.hs:112:1-6
    wire [2:0] src_74;
    // CPU.hs:112:1-6
    wire [2:0] dst_97;
    // CPU.hs:112:1-6
    wire [2:0] src_75;
    reg [3:0] c$app_arg_162;
    reg [3:0] c$app_arg_163;
    reg [3:0] c$app_arg_164;
    reg [3:0] c$app_arg_165;
    reg [3:0] c$app_arg_166;
    reg [3:0] c$app_arg_167;
    reg [3:0] c$app_arg_168;
    reg [3:0] c$app_arg_169;
    reg [3:0] c$app_arg_170;
    reg [3:0] c$app_arg_171;
    reg [3:0] c$app_arg_172;
    reg [3:0] c$app_arg_173;
    reg [3:0] c$app_arg_174;
    reg [3:0] c$app_arg_175;
    reg [3:0] c$app_arg_176;
    reg [3:0] c$app_arg_177;
    reg [3:0] c$app_arg_178;
    reg [3:0] c$app_arg_179;
      assign dst_89 = map_in_8[66:64];

      assign src_69 = map_in_8[63:61];

      assign dst_90 = map_in_8[66:64];

      assign src_70 = map_in_8[63:61];

      assign lhs_9 = map_in_8[66:64];

      assign rhs_9 = map_in_8[63:61];

      assign dst_91 = map_in_8[66:64];

      assign imm_20 = map_in_8[63:0];

      assign dst_92 = map_in_8[66:64];

      assign imm_21 = map_in_8[63:0];

      assign dst_93 = map_in_8[66:64];

      assign src_71 = map_in_8[63:61];

      assign dst_94 = map_in_8[66:64];

      assign src_72 = map_in_8[63:61];

      assign dst_95 = map_in_8[66:64];

      assign src_73 = map_in_8[63:61];

      assign dst_96 = map_in_8[66:64];

      assign src_74 = map_in_8[63:61];

      assign dst_97 = map_in_8[66:64];

      assign src_75 = map_in_8[63:61];

      always @(*) begin
        case(src_69)
          3'b000 : c$app_arg_162 = 4'b0000;
          3'b001 : c$app_arg_162 = 4'b0001;
          3'b010 : c$app_arg_162 = 4'b0010;
          3'b011 : c$app_arg_162 = 4'b0011;
          default : c$app_arg_162 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_89)
          3'b000 : c$app_arg_163 = 4'b0000;
          3'b001 : c$app_arg_163 = 4'b0001;
          3'b010 : c$app_arg_163 = 4'b0010;
          3'b011 : c$app_arg_163 = 4'b0011;
          default : c$app_arg_163 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_70)
          3'b000 : c$app_arg_164 = 4'b0000;
          3'b001 : c$app_arg_164 = 4'b0001;
          3'b010 : c$app_arg_164 = 4'b0010;
          3'b011 : c$app_arg_164 = 4'b0011;
          default : c$app_arg_164 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_90)
          3'b000 : c$app_arg_165 = 4'b0000;
          3'b001 : c$app_arg_165 = 4'b0001;
          3'b010 : c$app_arg_165 = 4'b0010;
          3'b011 : c$app_arg_165 = 4'b0011;
          default : c$app_arg_165 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_9)
          3'b000 : c$app_arg_166 = 4'b0000;
          3'b001 : c$app_arg_166 = 4'b0001;
          3'b010 : c$app_arg_166 = 4'b0010;
          3'b011 : c$app_arg_166 = 4'b0011;
          default : c$app_arg_166 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_9)
          3'b000 : c$app_arg_167 = 4'b0000;
          3'b001 : c$app_arg_167 = 4'b0001;
          3'b010 : c$app_arg_167 = 4'b0010;
          3'b011 : c$app_arg_167 = 4'b0011;
          default : c$app_arg_167 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_91)
          3'b000 : c$app_arg_168 = 4'b0000;
          3'b001 : c$app_arg_168 = 4'b0001;
          3'b010 : c$app_arg_168 = 4'b0010;
          3'b011 : c$app_arg_168 = 4'b0011;
          default : c$app_arg_168 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_92)
          3'b000 : c$app_arg_169 = 4'b0000;
          3'b001 : c$app_arg_169 = 4'b0001;
          3'b010 : c$app_arg_169 = 4'b0010;
          3'b011 : c$app_arg_169 = 4'b0011;
          default : c$app_arg_169 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_71)
          3'b000 : c$app_arg_170 = 4'b0000;
          3'b001 : c$app_arg_170 = 4'b0001;
          3'b010 : c$app_arg_170 = 4'b0010;
          3'b011 : c$app_arg_170 = 4'b0011;
          default : c$app_arg_170 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_93)
          3'b000 : c$app_arg_171 = 4'b0000;
          3'b001 : c$app_arg_171 = 4'b0001;
          3'b010 : c$app_arg_171 = 4'b0010;
          3'b011 : c$app_arg_171 = 4'b0011;
          default : c$app_arg_171 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_72)
          3'b000 : c$app_arg_172 = 4'b0000;
          3'b001 : c$app_arg_172 = 4'b0001;
          3'b010 : c$app_arg_172 = 4'b0010;
          3'b011 : c$app_arg_172 = 4'b0011;
          default : c$app_arg_172 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_94)
          3'b000 : c$app_arg_173 = 4'b0000;
          3'b001 : c$app_arg_173 = 4'b0001;
          3'b010 : c$app_arg_173 = 4'b0010;
          3'b011 : c$app_arg_173 = 4'b0011;
          default : c$app_arg_173 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_73)
          3'b000 : c$app_arg_174 = 4'b0000;
          3'b001 : c$app_arg_174 = 4'b0001;
          3'b010 : c$app_arg_174 = 4'b0010;
          3'b011 : c$app_arg_174 = 4'b0011;
          default : c$app_arg_174 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_95)
          3'b000 : c$app_arg_175 = 4'b0000;
          3'b001 : c$app_arg_175 = 4'b0001;
          3'b010 : c$app_arg_175 = 4'b0010;
          3'b011 : c$app_arg_175 = 4'b0011;
          default : c$app_arg_175 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_74)
          3'b000 : c$app_arg_176 = 4'b0000;
          3'b001 : c$app_arg_176 = 4'b0001;
          3'b010 : c$app_arg_176 = 4'b0010;
          3'b011 : c$app_arg_176 = 4'b0011;
          default : c$app_arg_176 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_96)
          3'b000 : c$app_arg_177 = 4'b0000;
          3'b001 : c$app_arg_177 = 4'b0001;
          3'b010 : c$app_arg_177 = 4'b0010;
          3'b011 : c$app_arg_177 = 4'b0011;
          default : c$app_arg_177 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_75)
          3'b000 : c$app_arg_178 = 4'b0000;
          3'b001 : c$app_arg_178 = 4'b0001;
          3'b010 : c$app_arg_178 = 4'b0010;
          3'b011 : c$app_arg_178 = 4'b0011;
          default : c$app_arg_178 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_97)
          3'b000 : c$app_arg_179 = 4'b0000;
          3'b001 : c$app_arg_179 = 4'b0001;
          3'b010 : c$app_arg_179 = 4'b0010;
          3'b011 : c$app_arg_179 = 4'b0011;
          default : c$app_arg_179 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in_8[70:67])
          4'b0000 : map_out_8 = ({({({4'b0000,c$app_arg_179}),c$app_arg_178}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out_8 = ({({({4'b0001,c$app_arg_177}),c$app_arg_176}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out_8 = ({({({4'b0010,c$app_arg_175}),c$app_arg_174}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out_8 = ({({({4'b0011,c$app_arg_173}),c$app_arg_172}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out_8 = ({({({4'b0100,c$app_arg_171}),c$app_arg_170}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out_8 = ({({4'b0101,c$app_arg_169}),((imm_21[0+:56]))});
          4'b0110 : map_out_8 = ({({4'b0110,c$app_arg_168}),((imm_20[0+:56]))});
          4'b0111 : map_out_8 = ({({({4'b0111,c$app_arg_167}),c$app_arg_166}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out_8 = ({({({4'b1010,c$app_arg_165}),c$app_arg_164}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out_8 = ({({({4'b1011,c$app_arg_163}),c$app_arg_162}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out_8 = ({({4'b1100,(map_in_8[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out_8 = ({({4'b1101,(map_in_8[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out_8 = ({({4'b1110,(map_in_8[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out_8 = 64'd17293822569102704640;
        endcase
      end


    assign result_sel_alt_res_6[i_8*64+:64] = map_out_8;
  end
  endgenerate
  // map end

  assign c$vec_9 = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd0,64'd1}
                   ,{4'b0101,3'd1,64'd1}
                   ,{4'b0101,3'd2,64'd10}
                   ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd3,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0101,3'd2,64'd1}
                   ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                   ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i_9;
  generate
  for (i_9=0; i_9 < 23; i_9 = i_9 + 1) begin : map_9
    wire [70:0] map_in_9;
    assign map_in_9 = c$vec_9[i_9*71+:71];
    reg [63:0] map_out_9;
    // CPU.hs:112:1-6
    wire [2:0] dst_98;
    // CPU.hs:112:1-6
    wire [2:0] src_76;
    // CPU.hs:112:1-6
    wire [2:0] dst_99;
    // CPU.hs:112:1-6
    wire [2:0] src_77;
    // CPU.hs:112:1-6
    wire [2:0] lhs_10;
    // CPU.hs:112:1-6
    wire [2:0] rhs_10;
    // CPU.hs:112:1-6
    wire [2:0] dst_100;
    // CPU.hs:112:1-6
    wire [63:0] imm_22;
    // CPU.hs:112:1-6
    wire [2:0] dst_101;
    // CPU.hs:112:1-6
    wire [63:0] imm_23;
    // CPU.hs:112:1-6
    wire [2:0] dst_102;
    // CPU.hs:112:1-6
    wire [2:0] src_78;
    // CPU.hs:112:1-6
    wire [2:0] dst_103;
    // CPU.hs:112:1-6
    wire [2:0] src_79;
    // CPU.hs:112:1-6
    wire [2:0] dst_104;
    // CPU.hs:112:1-6
    wire [2:0] src_80;
    // CPU.hs:112:1-6
    wire [2:0] dst_105;
    // CPU.hs:112:1-6
    wire [2:0] src_81;
    // CPU.hs:112:1-6
    wire [2:0] dst_106;
    // CPU.hs:112:1-6
    wire [2:0] src_82;
    reg [3:0] c$app_arg_180;
    reg [3:0] c$app_arg_181;
    reg [3:0] c$app_arg_182;
    reg [3:0] c$app_arg_183;
    reg [3:0] c$app_arg_184;
    reg [3:0] c$app_arg_185;
    reg [3:0] c$app_arg_186;
    reg [3:0] c$app_arg_187;
    reg [3:0] c$app_arg_188;
    reg [3:0] c$app_arg_189;
    reg [3:0] c$app_arg_190;
    reg [3:0] c$app_arg_191;
    reg [3:0] c$app_arg_192;
    reg [3:0] c$app_arg_193;
    reg [3:0] c$app_arg_194;
    reg [3:0] c$app_arg_195;
    reg [3:0] c$app_arg_196;
    reg [3:0] c$app_arg_197;
      assign dst_98 = map_in_9[66:64];

      assign src_76 = map_in_9[63:61];

      assign dst_99 = map_in_9[66:64];

      assign src_77 = map_in_9[63:61];

      assign lhs_10 = map_in_9[66:64];

      assign rhs_10 = map_in_9[63:61];

      assign dst_100 = map_in_9[66:64];

      assign imm_22 = map_in_9[63:0];

      assign dst_101 = map_in_9[66:64];

      assign imm_23 = map_in_9[63:0];

      assign dst_102 = map_in_9[66:64];

      assign src_78 = map_in_9[63:61];

      assign dst_103 = map_in_9[66:64];

      assign src_79 = map_in_9[63:61];

      assign dst_104 = map_in_9[66:64];

      assign src_80 = map_in_9[63:61];

      assign dst_105 = map_in_9[66:64];

      assign src_81 = map_in_9[63:61];

      assign dst_106 = map_in_9[66:64];

      assign src_82 = map_in_9[63:61];

      always @(*) begin
        case(src_76)
          3'b000 : c$app_arg_180 = 4'b0000;
          3'b001 : c$app_arg_180 = 4'b0001;
          3'b010 : c$app_arg_180 = 4'b0010;
          3'b011 : c$app_arg_180 = 4'b0011;
          default : c$app_arg_180 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_98)
          3'b000 : c$app_arg_181 = 4'b0000;
          3'b001 : c$app_arg_181 = 4'b0001;
          3'b010 : c$app_arg_181 = 4'b0010;
          3'b011 : c$app_arg_181 = 4'b0011;
          default : c$app_arg_181 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_77)
          3'b000 : c$app_arg_182 = 4'b0000;
          3'b001 : c$app_arg_182 = 4'b0001;
          3'b010 : c$app_arg_182 = 4'b0010;
          3'b011 : c$app_arg_182 = 4'b0011;
          default : c$app_arg_182 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_99)
          3'b000 : c$app_arg_183 = 4'b0000;
          3'b001 : c$app_arg_183 = 4'b0001;
          3'b010 : c$app_arg_183 = 4'b0010;
          3'b011 : c$app_arg_183 = 4'b0011;
          default : c$app_arg_183 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_10)
          3'b000 : c$app_arg_184 = 4'b0000;
          3'b001 : c$app_arg_184 = 4'b0001;
          3'b010 : c$app_arg_184 = 4'b0010;
          3'b011 : c$app_arg_184 = 4'b0011;
          default : c$app_arg_184 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_10)
          3'b000 : c$app_arg_185 = 4'b0000;
          3'b001 : c$app_arg_185 = 4'b0001;
          3'b010 : c$app_arg_185 = 4'b0010;
          3'b011 : c$app_arg_185 = 4'b0011;
          default : c$app_arg_185 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_100)
          3'b000 : c$app_arg_186 = 4'b0000;
          3'b001 : c$app_arg_186 = 4'b0001;
          3'b010 : c$app_arg_186 = 4'b0010;
          3'b011 : c$app_arg_186 = 4'b0011;
          default : c$app_arg_186 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_101)
          3'b000 : c$app_arg_187 = 4'b0000;
          3'b001 : c$app_arg_187 = 4'b0001;
          3'b010 : c$app_arg_187 = 4'b0010;
          3'b011 : c$app_arg_187 = 4'b0011;
          default : c$app_arg_187 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_78)
          3'b000 : c$app_arg_188 = 4'b0000;
          3'b001 : c$app_arg_188 = 4'b0001;
          3'b010 : c$app_arg_188 = 4'b0010;
          3'b011 : c$app_arg_188 = 4'b0011;
          default : c$app_arg_188 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_102)
          3'b000 : c$app_arg_189 = 4'b0000;
          3'b001 : c$app_arg_189 = 4'b0001;
          3'b010 : c$app_arg_189 = 4'b0010;
          3'b011 : c$app_arg_189 = 4'b0011;
          default : c$app_arg_189 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_79)
          3'b000 : c$app_arg_190 = 4'b0000;
          3'b001 : c$app_arg_190 = 4'b0001;
          3'b010 : c$app_arg_190 = 4'b0010;
          3'b011 : c$app_arg_190 = 4'b0011;
          default : c$app_arg_190 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_103)
          3'b000 : c$app_arg_191 = 4'b0000;
          3'b001 : c$app_arg_191 = 4'b0001;
          3'b010 : c$app_arg_191 = 4'b0010;
          3'b011 : c$app_arg_191 = 4'b0011;
          default : c$app_arg_191 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_80)
          3'b000 : c$app_arg_192 = 4'b0000;
          3'b001 : c$app_arg_192 = 4'b0001;
          3'b010 : c$app_arg_192 = 4'b0010;
          3'b011 : c$app_arg_192 = 4'b0011;
          default : c$app_arg_192 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_104)
          3'b000 : c$app_arg_193 = 4'b0000;
          3'b001 : c$app_arg_193 = 4'b0001;
          3'b010 : c$app_arg_193 = 4'b0010;
          3'b011 : c$app_arg_193 = 4'b0011;
          default : c$app_arg_193 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_81)
          3'b000 : c$app_arg_194 = 4'b0000;
          3'b001 : c$app_arg_194 = 4'b0001;
          3'b010 : c$app_arg_194 = 4'b0010;
          3'b011 : c$app_arg_194 = 4'b0011;
          default : c$app_arg_194 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_105)
          3'b000 : c$app_arg_195 = 4'b0000;
          3'b001 : c$app_arg_195 = 4'b0001;
          3'b010 : c$app_arg_195 = 4'b0010;
          3'b011 : c$app_arg_195 = 4'b0011;
          default : c$app_arg_195 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_82)
          3'b000 : c$app_arg_196 = 4'b0000;
          3'b001 : c$app_arg_196 = 4'b0001;
          3'b010 : c$app_arg_196 = 4'b0010;
          3'b011 : c$app_arg_196 = 4'b0011;
          default : c$app_arg_196 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_106)
          3'b000 : c$app_arg_197 = 4'b0000;
          3'b001 : c$app_arg_197 = 4'b0001;
          3'b010 : c$app_arg_197 = 4'b0010;
          3'b011 : c$app_arg_197 = 4'b0011;
          default : c$app_arg_197 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in_9[70:67])
          4'b0000 : map_out_9 = ({({({4'b0000,c$app_arg_197}),c$app_arg_196}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out_9 = ({({({4'b0001,c$app_arg_195}),c$app_arg_194}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out_9 = ({({({4'b0010,c$app_arg_193}),c$app_arg_192}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out_9 = ({({({4'b0011,c$app_arg_191}),c$app_arg_190}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out_9 = ({({({4'b0100,c$app_arg_189}),c$app_arg_188}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out_9 = ({({4'b0101,c$app_arg_187}),((imm_23[0+:56]))});
          4'b0110 : map_out_9 = ({({4'b0110,c$app_arg_186}),((imm_22[0+:56]))});
          4'b0111 : map_out_9 = ({({({4'b0111,c$app_arg_185}),c$app_arg_184}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out_9 = ({({({4'b1010,c$app_arg_183}),c$app_arg_182}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out_9 = ({({({4'b1011,c$app_arg_181}),c$app_arg_180}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out_9 = ({({4'b1100,(map_in_9[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out_9 = ({({4'b1101,(map_in_9[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out_9 = ({({4'b1110,(map_in_9[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out_9 = 64'd17293822569102704640;
        endcase
      end


    assign result_sel_alt_res_7[i_9*64+:64] = map_out_9;
  end
  endgenerate
  // map end

  assign c$vec_10 = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd0,64'd1}
                    ,{4'b0101,3'd1,64'd1}
                    ,{4'b0101,3'd2,64'd10}
                    ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd3,64'd1}
                    ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd2,64'd1}
                    ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i_10;
  generate
  for (i_10=0; i_10 < 23; i_10 = i_10 + 1) begin : map_10
    wire [70:0] map_in_10;
    assign map_in_10 = c$vec_10[i_10*71+:71];
    reg [63:0] map_out_10;
    // CPU.hs:112:1-6
    wire [2:0] dst_107;
    // CPU.hs:112:1-6
    wire [2:0] src_83;
    // CPU.hs:112:1-6
    wire [2:0] dst_108;
    // CPU.hs:112:1-6
    wire [2:0] src_84;
    // CPU.hs:112:1-6
    wire [2:0] lhs_11;
    // CPU.hs:112:1-6
    wire [2:0] rhs_11;
    // CPU.hs:112:1-6
    wire [2:0] dst_109;
    // CPU.hs:112:1-6
    wire [63:0] imm_24;
    // CPU.hs:112:1-6
    wire [2:0] dst_110;
    // CPU.hs:112:1-6
    wire [63:0] imm_25;
    // CPU.hs:112:1-6
    wire [2:0] dst_111;
    // CPU.hs:112:1-6
    wire [2:0] src_85;
    // CPU.hs:112:1-6
    wire [2:0] dst_112;
    // CPU.hs:112:1-6
    wire [2:0] src_86;
    // CPU.hs:112:1-6
    wire [2:0] dst_113;
    // CPU.hs:112:1-6
    wire [2:0] src_87;
    // CPU.hs:112:1-6
    wire [2:0] dst_114;
    // CPU.hs:112:1-6
    wire [2:0] src_88;
    // CPU.hs:112:1-6
    wire [2:0] dst_115;
    // CPU.hs:112:1-6
    wire [2:0] src_89;
    reg [3:0] c$app_arg_198;
    reg [3:0] c$app_arg_199;
    reg [3:0] c$app_arg_200;
    reg [3:0] c$app_arg_201;
    reg [3:0] c$app_arg_202;
    reg [3:0] c$app_arg_203;
    reg [3:0] c$app_arg_204;
    reg [3:0] c$app_arg_205;
    reg [3:0] c$app_arg_206;
    reg [3:0] c$app_arg_207;
    reg [3:0] c$app_arg_208;
    reg [3:0] c$app_arg_209;
    reg [3:0] c$app_arg_210;
    reg [3:0] c$app_arg_211;
    reg [3:0] c$app_arg_212;
    reg [3:0] c$app_arg_213;
    reg [3:0] c$app_arg_214;
    reg [3:0] c$app_arg_215;
      assign dst_107 = map_in_10[66:64];

      assign src_83 = map_in_10[63:61];

      assign dst_108 = map_in_10[66:64];

      assign src_84 = map_in_10[63:61];

      assign lhs_11 = map_in_10[66:64];

      assign rhs_11 = map_in_10[63:61];

      assign dst_109 = map_in_10[66:64];

      assign imm_24 = map_in_10[63:0];

      assign dst_110 = map_in_10[66:64];

      assign imm_25 = map_in_10[63:0];

      assign dst_111 = map_in_10[66:64];

      assign src_85 = map_in_10[63:61];

      assign dst_112 = map_in_10[66:64];

      assign src_86 = map_in_10[63:61];

      assign dst_113 = map_in_10[66:64];

      assign src_87 = map_in_10[63:61];

      assign dst_114 = map_in_10[66:64];

      assign src_88 = map_in_10[63:61];

      assign dst_115 = map_in_10[66:64];

      assign src_89 = map_in_10[63:61];

      always @(*) begin
        case(src_83)
          3'b000 : c$app_arg_198 = 4'b0000;
          3'b001 : c$app_arg_198 = 4'b0001;
          3'b010 : c$app_arg_198 = 4'b0010;
          3'b011 : c$app_arg_198 = 4'b0011;
          default : c$app_arg_198 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_107)
          3'b000 : c$app_arg_199 = 4'b0000;
          3'b001 : c$app_arg_199 = 4'b0001;
          3'b010 : c$app_arg_199 = 4'b0010;
          3'b011 : c$app_arg_199 = 4'b0011;
          default : c$app_arg_199 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_84)
          3'b000 : c$app_arg_200 = 4'b0000;
          3'b001 : c$app_arg_200 = 4'b0001;
          3'b010 : c$app_arg_200 = 4'b0010;
          3'b011 : c$app_arg_200 = 4'b0011;
          default : c$app_arg_200 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_108)
          3'b000 : c$app_arg_201 = 4'b0000;
          3'b001 : c$app_arg_201 = 4'b0001;
          3'b010 : c$app_arg_201 = 4'b0010;
          3'b011 : c$app_arg_201 = 4'b0011;
          default : c$app_arg_201 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_11)
          3'b000 : c$app_arg_202 = 4'b0000;
          3'b001 : c$app_arg_202 = 4'b0001;
          3'b010 : c$app_arg_202 = 4'b0010;
          3'b011 : c$app_arg_202 = 4'b0011;
          default : c$app_arg_202 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_11)
          3'b000 : c$app_arg_203 = 4'b0000;
          3'b001 : c$app_arg_203 = 4'b0001;
          3'b010 : c$app_arg_203 = 4'b0010;
          3'b011 : c$app_arg_203 = 4'b0011;
          default : c$app_arg_203 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_109)
          3'b000 : c$app_arg_204 = 4'b0000;
          3'b001 : c$app_arg_204 = 4'b0001;
          3'b010 : c$app_arg_204 = 4'b0010;
          3'b011 : c$app_arg_204 = 4'b0011;
          default : c$app_arg_204 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_110)
          3'b000 : c$app_arg_205 = 4'b0000;
          3'b001 : c$app_arg_205 = 4'b0001;
          3'b010 : c$app_arg_205 = 4'b0010;
          3'b011 : c$app_arg_205 = 4'b0011;
          default : c$app_arg_205 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_85)
          3'b000 : c$app_arg_206 = 4'b0000;
          3'b001 : c$app_arg_206 = 4'b0001;
          3'b010 : c$app_arg_206 = 4'b0010;
          3'b011 : c$app_arg_206 = 4'b0011;
          default : c$app_arg_206 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_111)
          3'b000 : c$app_arg_207 = 4'b0000;
          3'b001 : c$app_arg_207 = 4'b0001;
          3'b010 : c$app_arg_207 = 4'b0010;
          3'b011 : c$app_arg_207 = 4'b0011;
          default : c$app_arg_207 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_86)
          3'b000 : c$app_arg_208 = 4'b0000;
          3'b001 : c$app_arg_208 = 4'b0001;
          3'b010 : c$app_arg_208 = 4'b0010;
          3'b011 : c$app_arg_208 = 4'b0011;
          default : c$app_arg_208 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_112)
          3'b000 : c$app_arg_209 = 4'b0000;
          3'b001 : c$app_arg_209 = 4'b0001;
          3'b010 : c$app_arg_209 = 4'b0010;
          3'b011 : c$app_arg_209 = 4'b0011;
          default : c$app_arg_209 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_87)
          3'b000 : c$app_arg_210 = 4'b0000;
          3'b001 : c$app_arg_210 = 4'b0001;
          3'b010 : c$app_arg_210 = 4'b0010;
          3'b011 : c$app_arg_210 = 4'b0011;
          default : c$app_arg_210 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_113)
          3'b000 : c$app_arg_211 = 4'b0000;
          3'b001 : c$app_arg_211 = 4'b0001;
          3'b010 : c$app_arg_211 = 4'b0010;
          3'b011 : c$app_arg_211 = 4'b0011;
          default : c$app_arg_211 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_88)
          3'b000 : c$app_arg_212 = 4'b0000;
          3'b001 : c$app_arg_212 = 4'b0001;
          3'b010 : c$app_arg_212 = 4'b0010;
          3'b011 : c$app_arg_212 = 4'b0011;
          default : c$app_arg_212 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_114)
          3'b000 : c$app_arg_213 = 4'b0000;
          3'b001 : c$app_arg_213 = 4'b0001;
          3'b010 : c$app_arg_213 = 4'b0010;
          3'b011 : c$app_arg_213 = 4'b0011;
          default : c$app_arg_213 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_89)
          3'b000 : c$app_arg_214 = 4'b0000;
          3'b001 : c$app_arg_214 = 4'b0001;
          3'b010 : c$app_arg_214 = 4'b0010;
          3'b011 : c$app_arg_214 = 4'b0011;
          default : c$app_arg_214 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_115)
          3'b000 : c$app_arg_215 = 4'b0000;
          3'b001 : c$app_arg_215 = 4'b0001;
          3'b010 : c$app_arg_215 = 4'b0010;
          3'b011 : c$app_arg_215 = 4'b0011;
          default : c$app_arg_215 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in_10[70:67])
          4'b0000 : map_out_10 = ({({({4'b0000,c$app_arg_215}),c$app_arg_214}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out_10 = ({({({4'b0001,c$app_arg_213}),c$app_arg_212}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out_10 = ({({({4'b0010,c$app_arg_211}),c$app_arg_210}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out_10 = ({({({4'b0011,c$app_arg_209}),c$app_arg_208}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out_10 = ({({({4'b0100,c$app_arg_207}),c$app_arg_206}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out_10 = ({({4'b0101,c$app_arg_205}),((imm_25[0+:56]))});
          4'b0110 : map_out_10 = ({({4'b0110,c$app_arg_204}),((imm_24[0+:56]))});
          4'b0111 : map_out_10 = ({({({4'b0111,c$app_arg_203}),c$app_arg_202}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out_10 = ({({({4'b1010,c$app_arg_201}),c$app_arg_200}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out_10 = ({({({4'b1011,c$app_arg_199}),c$app_arg_198}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out_10 = ({({4'b1100,(map_in_10[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out_10 = ({({4'b1101,(map_in_10[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out_10 = ({({4'b1110,(map_in_10[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out_10 = 64'd17293822569102704640;
        endcase
      end


    assign result_sel_alt_res_8[i_10*64+:64] = map_out_10;
  end
  endgenerate
  // map end

  assign c$vec_11 = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd0,64'd1}
                    ,{4'b0101,3'd1,64'd1}
                    ,{4'b0101,3'd2,64'd10}
                    ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd3,64'd1}
                    ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd2,64'd1}
                    ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i_11;
  generate
  for (i_11=0; i_11 < 23; i_11 = i_11 + 1) begin : map_11
    wire [70:0] map_in_11;
    assign map_in_11 = c$vec_11[i_11*71+:71];
    reg [63:0] map_out_11;
    // CPU.hs:112:1-6
    wire [2:0] dst_116;
    // CPU.hs:112:1-6
    wire [2:0] src_90;
    // CPU.hs:112:1-6
    wire [2:0] dst_117;
    // CPU.hs:112:1-6
    wire [2:0] src_91;
    // CPU.hs:112:1-6
    wire [2:0] lhs_12;
    // CPU.hs:112:1-6
    wire [2:0] rhs_12;
    // CPU.hs:112:1-6
    wire [2:0] dst_118;
    // CPU.hs:112:1-6
    wire [63:0] imm_26;
    // CPU.hs:112:1-6
    wire [2:0] dst_119;
    // CPU.hs:112:1-6
    wire [63:0] imm_27;
    // CPU.hs:112:1-6
    wire [2:0] dst_120;
    // CPU.hs:112:1-6
    wire [2:0] src_92;
    // CPU.hs:112:1-6
    wire [2:0] dst_121;
    // CPU.hs:112:1-6
    wire [2:0] src_93;
    // CPU.hs:112:1-6
    wire [2:0] dst_122;
    // CPU.hs:112:1-6
    wire [2:0] src_94;
    // CPU.hs:112:1-6
    wire [2:0] dst_123;
    // CPU.hs:112:1-6
    wire [2:0] src_95;
    // CPU.hs:112:1-6
    wire [2:0] dst_124;
    // CPU.hs:112:1-6
    wire [2:0] src_96;
    reg [3:0] c$app_arg_216;
    reg [3:0] c$app_arg_217;
    reg [3:0] c$app_arg_218;
    reg [3:0] c$app_arg_219;
    reg [3:0] c$app_arg_220;
    reg [3:0] c$app_arg_221;
    reg [3:0] c$app_arg_222;
    reg [3:0] c$app_arg_223;
    reg [3:0] c$app_arg_224;
    reg [3:0] c$app_arg_225;
    reg [3:0] c$app_arg_226;
    reg [3:0] c$app_arg_227;
    reg [3:0] c$app_arg_228;
    reg [3:0] c$app_arg_229;
    reg [3:0] c$app_arg_230;
    reg [3:0] c$app_arg_231;
    reg [3:0] c$app_arg_232;
    reg [3:0] c$app_arg_233;
      assign dst_116 = map_in_11[66:64];

      assign src_90 = map_in_11[63:61];

      assign dst_117 = map_in_11[66:64];

      assign src_91 = map_in_11[63:61];

      assign lhs_12 = map_in_11[66:64];

      assign rhs_12 = map_in_11[63:61];

      assign dst_118 = map_in_11[66:64];

      assign imm_26 = map_in_11[63:0];

      assign dst_119 = map_in_11[66:64];

      assign imm_27 = map_in_11[63:0];

      assign dst_120 = map_in_11[66:64];

      assign src_92 = map_in_11[63:61];

      assign dst_121 = map_in_11[66:64];

      assign src_93 = map_in_11[63:61];

      assign dst_122 = map_in_11[66:64];

      assign src_94 = map_in_11[63:61];

      assign dst_123 = map_in_11[66:64];

      assign src_95 = map_in_11[63:61];

      assign dst_124 = map_in_11[66:64];

      assign src_96 = map_in_11[63:61];

      always @(*) begin
        case(src_90)
          3'b000 : c$app_arg_216 = 4'b0000;
          3'b001 : c$app_arg_216 = 4'b0001;
          3'b010 : c$app_arg_216 = 4'b0010;
          3'b011 : c$app_arg_216 = 4'b0011;
          default : c$app_arg_216 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_116)
          3'b000 : c$app_arg_217 = 4'b0000;
          3'b001 : c$app_arg_217 = 4'b0001;
          3'b010 : c$app_arg_217 = 4'b0010;
          3'b011 : c$app_arg_217 = 4'b0011;
          default : c$app_arg_217 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_91)
          3'b000 : c$app_arg_218 = 4'b0000;
          3'b001 : c$app_arg_218 = 4'b0001;
          3'b010 : c$app_arg_218 = 4'b0010;
          3'b011 : c$app_arg_218 = 4'b0011;
          default : c$app_arg_218 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_117)
          3'b000 : c$app_arg_219 = 4'b0000;
          3'b001 : c$app_arg_219 = 4'b0001;
          3'b010 : c$app_arg_219 = 4'b0010;
          3'b011 : c$app_arg_219 = 4'b0011;
          default : c$app_arg_219 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_12)
          3'b000 : c$app_arg_220 = 4'b0000;
          3'b001 : c$app_arg_220 = 4'b0001;
          3'b010 : c$app_arg_220 = 4'b0010;
          3'b011 : c$app_arg_220 = 4'b0011;
          default : c$app_arg_220 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_12)
          3'b000 : c$app_arg_221 = 4'b0000;
          3'b001 : c$app_arg_221 = 4'b0001;
          3'b010 : c$app_arg_221 = 4'b0010;
          3'b011 : c$app_arg_221 = 4'b0011;
          default : c$app_arg_221 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_118)
          3'b000 : c$app_arg_222 = 4'b0000;
          3'b001 : c$app_arg_222 = 4'b0001;
          3'b010 : c$app_arg_222 = 4'b0010;
          3'b011 : c$app_arg_222 = 4'b0011;
          default : c$app_arg_222 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_119)
          3'b000 : c$app_arg_223 = 4'b0000;
          3'b001 : c$app_arg_223 = 4'b0001;
          3'b010 : c$app_arg_223 = 4'b0010;
          3'b011 : c$app_arg_223 = 4'b0011;
          default : c$app_arg_223 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_92)
          3'b000 : c$app_arg_224 = 4'b0000;
          3'b001 : c$app_arg_224 = 4'b0001;
          3'b010 : c$app_arg_224 = 4'b0010;
          3'b011 : c$app_arg_224 = 4'b0011;
          default : c$app_arg_224 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_120)
          3'b000 : c$app_arg_225 = 4'b0000;
          3'b001 : c$app_arg_225 = 4'b0001;
          3'b010 : c$app_arg_225 = 4'b0010;
          3'b011 : c$app_arg_225 = 4'b0011;
          default : c$app_arg_225 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_93)
          3'b000 : c$app_arg_226 = 4'b0000;
          3'b001 : c$app_arg_226 = 4'b0001;
          3'b010 : c$app_arg_226 = 4'b0010;
          3'b011 : c$app_arg_226 = 4'b0011;
          default : c$app_arg_226 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_121)
          3'b000 : c$app_arg_227 = 4'b0000;
          3'b001 : c$app_arg_227 = 4'b0001;
          3'b010 : c$app_arg_227 = 4'b0010;
          3'b011 : c$app_arg_227 = 4'b0011;
          default : c$app_arg_227 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_94)
          3'b000 : c$app_arg_228 = 4'b0000;
          3'b001 : c$app_arg_228 = 4'b0001;
          3'b010 : c$app_arg_228 = 4'b0010;
          3'b011 : c$app_arg_228 = 4'b0011;
          default : c$app_arg_228 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_122)
          3'b000 : c$app_arg_229 = 4'b0000;
          3'b001 : c$app_arg_229 = 4'b0001;
          3'b010 : c$app_arg_229 = 4'b0010;
          3'b011 : c$app_arg_229 = 4'b0011;
          default : c$app_arg_229 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_95)
          3'b000 : c$app_arg_230 = 4'b0000;
          3'b001 : c$app_arg_230 = 4'b0001;
          3'b010 : c$app_arg_230 = 4'b0010;
          3'b011 : c$app_arg_230 = 4'b0011;
          default : c$app_arg_230 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_123)
          3'b000 : c$app_arg_231 = 4'b0000;
          3'b001 : c$app_arg_231 = 4'b0001;
          3'b010 : c$app_arg_231 = 4'b0010;
          3'b011 : c$app_arg_231 = 4'b0011;
          default : c$app_arg_231 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_96)
          3'b000 : c$app_arg_232 = 4'b0000;
          3'b001 : c$app_arg_232 = 4'b0001;
          3'b010 : c$app_arg_232 = 4'b0010;
          3'b011 : c$app_arg_232 = 4'b0011;
          default : c$app_arg_232 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_124)
          3'b000 : c$app_arg_233 = 4'b0000;
          3'b001 : c$app_arg_233 = 4'b0001;
          3'b010 : c$app_arg_233 = 4'b0010;
          3'b011 : c$app_arg_233 = 4'b0011;
          default : c$app_arg_233 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in_11[70:67])
          4'b0000 : map_out_11 = ({({({4'b0000,c$app_arg_233}),c$app_arg_232}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out_11 = ({({({4'b0001,c$app_arg_231}),c$app_arg_230}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out_11 = ({({({4'b0010,c$app_arg_229}),c$app_arg_228}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out_11 = ({({({4'b0011,c$app_arg_227}),c$app_arg_226}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out_11 = ({({({4'b0100,c$app_arg_225}),c$app_arg_224}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out_11 = ({({4'b0101,c$app_arg_223}),((imm_27[0+:56]))});
          4'b0110 : map_out_11 = ({({4'b0110,c$app_arg_222}),((imm_26[0+:56]))});
          4'b0111 : map_out_11 = ({({({4'b0111,c$app_arg_221}),c$app_arg_220}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out_11 = ({({({4'b1010,c$app_arg_219}),c$app_arg_218}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out_11 = ({({({4'b1011,c$app_arg_217}),c$app_arg_216}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out_11 = ({({4'b1100,(map_in_11[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out_11 = ({({4'b1101,(map_in_11[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out_11 = ({({4'b1110,(map_in_11[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out_11 = 64'd17293822569102704640;
        endcase
      end


    assign result_sel_alt_res_9[i_11*64+:64] = map_out_11;
  end
  endgenerate
  // map end

  assign c$vec_12 = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd0,64'd1}
                    ,{4'b0101,3'd1,64'd1}
                    ,{4'b0101,3'd2,64'd10}
                    ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd3,64'd1}
                    ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd2,64'd1}
                    ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i_12;
  generate
  for (i_12=0; i_12 < 23; i_12 = i_12 + 1) begin : map_12
    wire [70:0] map_in_12;
    assign map_in_12 = c$vec_12[i_12*71+:71];
    reg [63:0] map_out_12;
    // CPU.hs:112:1-6
    wire [2:0] dst_125;
    // CPU.hs:112:1-6
    wire [2:0] src_97;
    // CPU.hs:112:1-6
    wire [2:0] dst_126;
    // CPU.hs:112:1-6
    wire [2:0] src_98;
    // CPU.hs:112:1-6
    wire [2:0] lhs_13;
    // CPU.hs:112:1-6
    wire [2:0] rhs_13;
    // CPU.hs:112:1-6
    wire [2:0] dst_127;
    // CPU.hs:112:1-6
    wire [63:0] imm_28;
    // CPU.hs:112:1-6
    wire [2:0] dst_128;
    // CPU.hs:112:1-6
    wire [63:0] imm_29;
    // CPU.hs:112:1-6
    wire [2:0] dst_129;
    // CPU.hs:112:1-6
    wire [2:0] src_99;
    // CPU.hs:112:1-6
    wire [2:0] dst_130;
    // CPU.hs:112:1-6
    wire [2:0] src_100;
    // CPU.hs:112:1-6
    wire [2:0] dst_131;
    // CPU.hs:112:1-6
    wire [2:0] src_101;
    // CPU.hs:112:1-6
    wire [2:0] dst_132;
    // CPU.hs:112:1-6
    wire [2:0] src_102;
    // CPU.hs:112:1-6
    wire [2:0] dst_133;
    // CPU.hs:112:1-6
    wire [2:0] src_103;
    reg [3:0] c$app_arg_234;
    reg [3:0] c$app_arg_235;
    reg [3:0] c$app_arg_236;
    reg [3:0] c$app_arg_237;
    reg [3:0] c$app_arg_238;
    reg [3:0] c$app_arg_239;
    reg [3:0] c$app_arg_240;
    reg [3:0] c$app_arg_241;
    reg [3:0] c$app_arg_242;
    reg [3:0] c$app_arg_243;
    reg [3:0] c$app_arg_244;
    reg [3:0] c$app_arg_245;
    reg [3:0] c$app_arg_246;
    reg [3:0] c$app_arg_247;
    reg [3:0] c$app_arg_248;
    reg [3:0] c$app_arg_249;
    reg [3:0] c$app_arg_250;
    reg [3:0] c$app_arg_251;
      assign dst_125 = map_in_12[66:64];

      assign src_97 = map_in_12[63:61];

      assign dst_126 = map_in_12[66:64];

      assign src_98 = map_in_12[63:61];

      assign lhs_13 = map_in_12[66:64];

      assign rhs_13 = map_in_12[63:61];

      assign dst_127 = map_in_12[66:64];

      assign imm_28 = map_in_12[63:0];

      assign dst_128 = map_in_12[66:64];

      assign imm_29 = map_in_12[63:0];

      assign dst_129 = map_in_12[66:64];

      assign src_99 = map_in_12[63:61];

      assign dst_130 = map_in_12[66:64];

      assign src_100 = map_in_12[63:61];

      assign dst_131 = map_in_12[66:64];

      assign src_101 = map_in_12[63:61];

      assign dst_132 = map_in_12[66:64];

      assign src_102 = map_in_12[63:61];

      assign dst_133 = map_in_12[66:64];

      assign src_103 = map_in_12[63:61];

      always @(*) begin
        case(src_97)
          3'b000 : c$app_arg_234 = 4'b0000;
          3'b001 : c$app_arg_234 = 4'b0001;
          3'b010 : c$app_arg_234 = 4'b0010;
          3'b011 : c$app_arg_234 = 4'b0011;
          default : c$app_arg_234 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_125)
          3'b000 : c$app_arg_235 = 4'b0000;
          3'b001 : c$app_arg_235 = 4'b0001;
          3'b010 : c$app_arg_235 = 4'b0010;
          3'b011 : c$app_arg_235 = 4'b0011;
          default : c$app_arg_235 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_98)
          3'b000 : c$app_arg_236 = 4'b0000;
          3'b001 : c$app_arg_236 = 4'b0001;
          3'b010 : c$app_arg_236 = 4'b0010;
          3'b011 : c$app_arg_236 = 4'b0011;
          default : c$app_arg_236 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_126)
          3'b000 : c$app_arg_237 = 4'b0000;
          3'b001 : c$app_arg_237 = 4'b0001;
          3'b010 : c$app_arg_237 = 4'b0010;
          3'b011 : c$app_arg_237 = 4'b0011;
          default : c$app_arg_237 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_13)
          3'b000 : c$app_arg_238 = 4'b0000;
          3'b001 : c$app_arg_238 = 4'b0001;
          3'b010 : c$app_arg_238 = 4'b0010;
          3'b011 : c$app_arg_238 = 4'b0011;
          default : c$app_arg_238 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_13)
          3'b000 : c$app_arg_239 = 4'b0000;
          3'b001 : c$app_arg_239 = 4'b0001;
          3'b010 : c$app_arg_239 = 4'b0010;
          3'b011 : c$app_arg_239 = 4'b0011;
          default : c$app_arg_239 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_127)
          3'b000 : c$app_arg_240 = 4'b0000;
          3'b001 : c$app_arg_240 = 4'b0001;
          3'b010 : c$app_arg_240 = 4'b0010;
          3'b011 : c$app_arg_240 = 4'b0011;
          default : c$app_arg_240 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_128)
          3'b000 : c$app_arg_241 = 4'b0000;
          3'b001 : c$app_arg_241 = 4'b0001;
          3'b010 : c$app_arg_241 = 4'b0010;
          3'b011 : c$app_arg_241 = 4'b0011;
          default : c$app_arg_241 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_99)
          3'b000 : c$app_arg_242 = 4'b0000;
          3'b001 : c$app_arg_242 = 4'b0001;
          3'b010 : c$app_arg_242 = 4'b0010;
          3'b011 : c$app_arg_242 = 4'b0011;
          default : c$app_arg_242 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_129)
          3'b000 : c$app_arg_243 = 4'b0000;
          3'b001 : c$app_arg_243 = 4'b0001;
          3'b010 : c$app_arg_243 = 4'b0010;
          3'b011 : c$app_arg_243 = 4'b0011;
          default : c$app_arg_243 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_100)
          3'b000 : c$app_arg_244 = 4'b0000;
          3'b001 : c$app_arg_244 = 4'b0001;
          3'b010 : c$app_arg_244 = 4'b0010;
          3'b011 : c$app_arg_244 = 4'b0011;
          default : c$app_arg_244 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_130)
          3'b000 : c$app_arg_245 = 4'b0000;
          3'b001 : c$app_arg_245 = 4'b0001;
          3'b010 : c$app_arg_245 = 4'b0010;
          3'b011 : c$app_arg_245 = 4'b0011;
          default : c$app_arg_245 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_101)
          3'b000 : c$app_arg_246 = 4'b0000;
          3'b001 : c$app_arg_246 = 4'b0001;
          3'b010 : c$app_arg_246 = 4'b0010;
          3'b011 : c$app_arg_246 = 4'b0011;
          default : c$app_arg_246 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_131)
          3'b000 : c$app_arg_247 = 4'b0000;
          3'b001 : c$app_arg_247 = 4'b0001;
          3'b010 : c$app_arg_247 = 4'b0010;
          3'b011 : c$app_arg_247 = 4'b0011;
          default : c$app_arg_247 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_102)
          3'b000 : c$app_arg_248 = 4'b0000;
          3'b001 : c$app_arg_248 = 4'b0001;
          3'b010 : c$app_arg_248 = 4'b0010;
          3'b011 : c$app_arg_248 = 4'b0011;
          default : c$app_arg_248 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_132)
          3'b000 : c$app_arg_249 = 4'b0000;
          3'b001 : c$app_arg_249 = 4'b0001;
          3'b010 : c$app_arg_249 = 4'b0010;
          3'b011 : c$app_arg_249 = 4'b0011;
          default : c$app_arg_249 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_103)
          3'b000 : c$app_arg_250 = 4'b0000;
          3'b001 : c$app_arg_250 = 4'b0001;
          3'b010 : c$app_arg_250 = 4'b0010;
          3'b011 : c$app_arg_250 = 4'b0011;
          default : c$app_arg_250 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_133)
          3'b000 : c$app_arg_251 = 4'b0000;
          3'b001 : c$app_arg_251 = 4'b0001;
          3'b010 : c$app_arg_251 = 4'b0010;
          3'b011 : c$app_arg_251 = 4'b0011;
          default : c$app_arg_251 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in_12[70:67])
          4'b0000 : map_out_12 = ({({({4'b0000,c$app_arg_251}),c$app_arg_250}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out_12 = ({({({4'b0001,c$app_arg_249}),c$app_arg_248}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out_12 = ({({({4'b0010,c$app_arg_247}),c$app_arg_246}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out_12 = ({({({4'b0011,c$app_arg_245}),c$app_arg_244}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out_12 = ({({({4'b0100,c$app_arg_243}),c$app_arg_242}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out_12 = ({({4'b0101,c$app_arg_241}),((imm_29[0+:56]))});
          4'b0110 : map_out_12 = ({({4'b0110,c$app_arg_240}),((imm_28[0+:56]))});
          4'b0111 : map_out_12 = ({({({4'b0111,c$app_arg_239}),c$app_arg_238}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out_12 = ({({({4'b1010,c$app_arg_237}),c$app_arg_236}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out_12 = ({({({4'b1011,c$app_arg_235}),c$app_arg_234}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out_12 = ({({4'b1100,(map_in_12[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out_12 = ({({4'b1101,(map_in_12[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out_12 = ({({4'b1110,(map_in_12[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out_12 = 64'd17293822569102704640;
        endcase
      end


    assign result_sel_alt_res_10[i_12*64+:64] = map_out_12;
  end
  endgenerate
  // map end

  assign c$vec_13 = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd0,64'd1}
                    ,{4'b0101,3'd1,64'd1}
                    ,{4'b0101,3'd2,64'd10}
                    ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd3,64'd1}
                    ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd2,64'd1}
                    ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i_13;
  generate
  for (i_13=0; i_13 < 23; i_13 = i_13 + 1) begin : map_13
    wire [70:0] map_in_13;
    assign map_in_13 = c$vec_13[i_13*71+:71];
    reg [63:0] map_out_13;
    // CPU.hs:112:1-6
    wire [2:0] dst_134;
    // CPU.hs:112:1-6
    wire [2:0] src_104;
    // CPU.hs:112:1-6
    wire [2:0] dst_135;
    // CPU.hs:112:1-6
    wire [2:0] src_105;
    // CPU.hs:112:1-6
    wire [2:0] lhs_14;
    // CPU.hs:112:1-6
    wire [2:0] rhs_14;
    // CPU.hs:112:1-6
    wire [2:0] dst_136;
    // CPU.hs:112:1-6
    wire [63:0] imm_30;
    // CPU.hs:112:1-6
    wire [2:0] dst_137;
    // CPU.hs:112:1-6
    wire [63:0] imm_31;
    // CPU.hs:112:1-6
    wire [2:0] dst_138;
    // CPU.hs:112:1-6
    wire [2:0] src_106;
    // CPU.hs:112:1-6
    wire [2:0] dst_139;
    // CPU.hs:112:1-6
    wire [2:0] src_107;
    // CPU.hs:112:1-6
    wire [2:0] dst_140;
    // CPU.hs:112:1-6
    wire [2:0] src_108;
    // CPU.hs:112:1-6
    wire [2:0] dst_141;
    // CPU.hs:112:1-6
    wire [2:0] src_109;
    // CPU.hs:112:1-6
    wire [2:0] dst_142;
    // CPU.hs:112:1-6
    wire [2:0] src_110;
    reg [3:0] c$app_arg_252;
    reg [3:0] c$app_arg_253;
    reg [3:0] c$app_arg_254;
    reg [3:0] c$app_arg_255;
    reg [3:0] c$app_arg_256;
    reg [3:0] c$app_arg_257;
    reg [3:0] c$app_arg_258;
    reg [3:0] c$app_arg_259;
    reg [3:0] c$app_arg_260;
    reg [3:0] c$app_arg_261;
    reg [3:0] c$app_arg_262;
    reg [3:0] c$app_arg_263;
    reg [3:0] c$app_arg_264;
    reg [3:0] c$app_arg_265;
    reg [3:0] c$app_arg_266;
    reg [3:0] c$app_arg_267;
    reg [3:0] c$app_arg_268;
    reg [3:0] c$app_arg_269;
      assign dst_134 = map_in_13[66:64];

      assign src_104 = map_in_13[63:61];

      assign dst_135 = map_in_13[66:64];

      assign src_105 = map_in_13[63:61];

      assign lhs_14 = map_in_13[66:64];

      assign rhs_14 = map_in_13[63:61];

      assign dst_136 = map_in_13[66:64];

      assign imm_30 = map_in_13[63:0];

      assign dst_137 = map_in_13[66:64];

      assign imm_31 = map_in_13[63:0];

      assign dst_138 = map_in_13[66:64];

      assign src_106 = map_in_13[63:61];

      assign dst_139 = map_in_13[66:64];

      assign src_107 = map_in_13[63:61];

      assign dst_140 = map_in_13[66:64];

      assign src_108 = map_in_13[63:61];

      assign dst_141 = map_in_13[66:64];

      assign src_109 = map_in_13[63:61];

      assign dst_142 = map_in_13[66:64];

      assign src_110 = map_in_13[63:61];

      always @(*) begin
        case(src_104)
          3'b000 : c$app_arg_252 = 4'b0000;
          3'b001 : c$app_arg_252 = 4'b0001;
          3'b010 : c$app_arg_252 = 4'b0010;
          3'b011 : c$app_arg_252 = 4'b0011;
          default : c$app_arg_252 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_134)
          3'b000 : c$app_arg_253 = 4'b0000;
          3'b001 : c$app_arg_253 = 4'b0001;
          3'b010 : c$app_arg_253 = 4'b0010;
          3'b011 : c$app_arg_253 = 4'b0011;
          default : c$app_arg_253 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_105)
          3'b000 : c$app_arg_254 = 4'b0000;
          3'b001 : c$app_arg_254 = 4'b0001;
          3'b010 : c$app_arg_254 = 4'b0010;
          3'b011 : c$app_arg_254 = 4'b0011;
          default : c$app_arg_254 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_135)
          3'b000 : c$app_arg_255 = 4'b0000;
          3'b001 : c$app_arg_255 = 4'b0001;
          3'b010 : c$app_arg_255 = 4'b0010;
          3'b011 : c$app_arg_255 = 4'b0011;
          default : c$app_arg_255 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_14)
          3'b000 : c$app_arg_256 = 4'b0000;
          3'b001 : c$app_arg_256 = 4'b0001;
          3'b010 : c$app_arg_256 = 4'b0010;
          3'b011 : c$app_arg_256 = 4'b0011;
          default : c$app_arg_256 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_14)
          3'b000 : c$app_arg_257 = 4'b0000;
          3'b001 : c$app_arg_257 = 4'b0001;
          3'b010 : c$app_arg_257 = 4'b0010;
          3'b011 : c$app_arg_257 = 4'b0011;
          default : c$app_arg_257 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_136)
          3'b000 : c$app_arg_258 = 4'b0000;
          3'b001 : c$app_arg_258 = 4'b0001;
          3'b010 : c$app_arg_258 = 4'b0010;
          3'b011 : c$app_arg_258 = 4'b0011;
          default : c$app_arg_258 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_137)
          3'b000 : c$app_arg_259 = 4'b0000;
          3'b001 : c$app_arg_259 = 4'b0001;
          3'b010 : c$app_arg_259 = 4'b0010;
          3'b011 : c$app_arg_259 = 4'b0011;
          default : c$app_arg_259 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_106)
          3'b000 : c$app_arg_260 = 4'b0000;
          3'b001 : c$app_arg_260 = 4'b0001;
          3'b010 : c$app_arg_260 = 4'b0010;
          3'b011 : c$app_arg_260 = 4'b0011;
          default : c$app_arg_260 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_138)
          3'b000 : c$app_arg_261 = 4'b0000;
          3'b001 : c$app_arg_261 = 4'b0001;
          3'b010 : c$app_arg_261 = 4'b0010;
          3'b011 : c$app_arg_261 = 4'b0011;
          default : c$app_arg_261 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_107)
          3'b000 : c$app_arg_262 = 4'b0000;
          3'b001 : c$app_arg_262 = 4'b0001;
          3'b010 : c$app_arg_262 = 4'b0010;
          3'b011 : c$app_arg_262 = 4'b0011;
          default : c$app_arg_262 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_139)
          3'b000 : c$app_arg_263 = 4'b0000;
          3'b001 : c$app_arg_263 = 4'b0001;
          3'b010 : c$app_arg_263 = 4'b0010;
          3'b011 : c$app_arg_263 = 4'b0011;
          default : c$app_arg_263 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_108)
          3'b000 : c$app_arg_264 = 4'b0000;
          3'b001 : c$app_arg_264 = 4'b0001;
          3'b010 : c$app_arg_264 = 4'b0010;
          3'b011 : c$app_arg_264 = 4'b0011;
          default : c$app_arg_264 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_140)
          3'b000 : c$app_arg_265 = 4'b0000;
          3'b001 : c$app_arg_265 = 4'b0001;
          3'b010 : c$app_arg_265 = 4'b0010;
          3'b011 : c$app_arg_265 = 4'b0011;
          default : c$app_arg_265 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_109)
          3'b000 : c$app_arg_266 = 4'b0000;
          3'b001 : c$app_arg_266 = 4'b0001;
          3'b010 : c$app_arg_266 = 4'b0010;
          3'b011 : c$app_arg_266 = 4'b0011;
          default : c$app_arg_266 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_141)
          3'b000 : c$app_arg_267 = 4'b0000;
          3'b001 : c$app_arg_267 = 4'b0001;
          3'b010 : c$app_arg_267 = 4'b0010;
          3'b011 : c$app_arg_267 = 4'b0011;
          default : c$app_arg_267 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_110)
          3'b000 : c$app_arg_268 = 4'b0000;
          3'b001 : c$app_arg_268 = 4'b0001;
          3'b010 : c$app_arg_268 = 4'b0010;
          3'b011 : c$app_arg_268 = 4'b0011;
          default : c$app_arg_268 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_142)
          3'b000 : c$app_arg_269 = 4'b0000;
          3'b001 : c$app_arg_269 = 4'b0001;
          3'b010 : c$app_arg_269 = 4'b0010;
          3'b011 : c$app_arg_269 = 4'b0011;
          default : c$app_arg_269 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in_13[70:67])
          4'b0000 : map_out_13 = ({({({4'b0000,c$app_arg_269}),c$app_arg_268}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out_13 = ({({({4'b0001,c$app_arg_267}),c$app_arg_266}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out_13 = ({({({4'b0010,c$app_arg_265}),c$app_arg_264}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out_13 = ({({({4'b0011,c$app_arg_263}),c$app_arg_262}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out_13 = ({({({4'b0100,c$app_arg_261}),c$app_arg_260}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out_13 = ({({4'b0101,c$app_arg_259}),((imm_31[0+:56]))});
          4'b0110 : map_out_13 = ({({4'b0110,c$app_arg_258}),((imm_30[0+:56]))});
          4'b0111 : map_out_13 = ({({({4'b0111,c$app_arg_257}),c$app_arg_256}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out_13 = ({({({4'b1010,c$app_arg_255}),c$app_arg_254}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out_13 = ({({({4'b1011,c$app_arg_253}),c$app_arg_252}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out_13 = ({({4'b1100,(map_in_13[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out_13 = ({({4'b1101,(map_in_13[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out_13 = ({({4'b1110,(map_in_13[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out_13 = 64'd17293822569102704640;
        endcase
      end


    assign result_sel_alt_res_11[i_13*64+:64] = map_out_13;
  end
  endgenerate
  // map end

  always @(*) begin
    case(ir[70:67])
      4'b0000 : result = {{{2'b00,71'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                          ,result_7}
                         ,{result_sel_alt_res,({41 {64'd0}})}};
      4'b0001 : result = {{{2'b00,71'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                          ,result_7}
                         ,{result_sel_alt_res_0,({41 {64'd0}})}};
      4'b0010 : result = {{{2'b00,71'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                          ,result_7}
                         ,{result_sel_alt_res_1,({41 {64'd0}})}};
      4'b0011 : result = {{{2'b00,71'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                          ,result_7}
                         ,{result_sel_alt_res_2,({41 {64'd0}})}};
      4'b0100 : result = {{{2'b00,71'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                          ,result_7}
                         ,{result_sel_alt_res_3,({41 {64'd0}})}};
      4'b0101 : result = {{{2'b00,71'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                          ,result_7}
                         ,{result_sel_alt_res_4,({41 {64'd0}})}};
      4'b0110 : result = {{{2'b00,71'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                          ,result_7}
                         ,{result_sel_alt_res_5,({41 {64'd0}})}};
      4'b0111 : result = {{{2'b00,71'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                          ,{ds2,ds3,ds4,ds5,result_6,ds7}}
                         ,{result_sel_alt_res_6,({41 {64'd0}})}};
      4'b1000 : result = {{{2'b00,71'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                          ,result_7}
                         ,{result_sel_alt_res_7,({41 {64'd0}})}};
      4'b1001 : result = {{{2'b00,71'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                          ,regs}
                         ,result_0};
      4'b1010 : result = {c$arg
                         ,{result_sel_alt_res_8,({41 {64'd0}})}};
      4'b1011 : result = {{mode,regs}
                         ,{result_sel_alt_res_9,({41 {64'd0}})}};
      4'b1100 : result = {{mode,c$app_arg}
                         ,{result_sel_alt_res_10,({41 {64'd0}})}};
      default : result = {{{2'b10,71'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                          ,regs}
                         ,{result_sel_alt_res_11,({41 {64'd0}})}};
    endcase
  end

  assign ir = mode[70:0];

  assign regs = c$arg[328:0];

  assign c$app_arg = (c$case_alt_3 == 1'b0) ? regs : regs;

  assign c$vec_14 = {64'd4611686018427387904
                    ,64'd4688247212092686336
                    ,64'd4764808405757984768
                    ,64'd4841369599423283200
                    ,64'd5764607523034234881
                    ,64'd5836665117072162817
                    ,64'd5908722711110090762
                    ,64'd12907316532043841536
                    ,64'd4764808405757984768
                    ,64'd4841369599423283200
                    ,64'd5980780305148018689
                    ,64'd12898309332789100544
                    ,64'd4503599627370496
                    ,64'd11614783438988509184
                    ,64'd5908722711110090753
                    ,64'd12898309332789100544
                    ,64'd4841369599423283200
                    ,64'd11542725844950581248
                    ,64'd8079457731502669824
                    ,64'd11542725844950581248
                    ,64'd15037519155790086144
                    ,64'd13855324253605330944
                    ,64'd17293822569102704640
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0
                    ,64'd0};

  // vector replace begin
  genvar i_14;
  generate
  for (i_14=0;i_14<64;i_14=i_14+1) begin : vector_replace
    assign result_0[(63-i_14)*64+:64] = (wild1) == i_14 ? c$case_alt_2 : c$vec_14[(63-i_14)*64+:64];
  end
  endgenerate
  // vector replace end

  assign ds2 = regs[328:265];

  assign ds3 = regs[264:201];

  assign ds4 = regs[200:137];

  assign ds5 = regs[136:73];

  assign ds6 = regs[72:9];

  assign ds1 = c$ptr_app_arg[55 : 52];

  always @(*) begin
    case(ds1)
      4'b0000 : result_1 = 3'd0;
      4'b0001 : result_1 = 3'd1;
      4'b0010 : result_1 = 3'd2;
      4'b0011 : result_1 = 3'd3;
      default : result_1 = {3 {1'bx}};
    endcase
  end

  assign ds1_0 = c$ptr_app_arg[59 : 56];

  always @(*) begin
    case(ds1_0)
      4'b0000 : result_2 = 3'd0;
      4'b0001 : result_2 = 3'd1;
      4'b0010 : result_2 = 3'd2;
      4'b0011 : result_2 = 3'd3;
      default : result_2 = {3 {1'bx}};
    endcase
  end

  assign c$ptr_app_arg = result_8;

  assign ptr = (c$ptr_app_arg[63 : 55]);

  always @(*) begin
    case(ds)
      4'd12 : result_3 = {4'b1010,ptr,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};
      4'd13 : result_3 = {4'b1011,ptr,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};
      4'd14 : result_3 = {4'b1100,ptr,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};
      4'd15 : result_3 = {4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};
      default : result_3 = {71 {1'bx}};
    endcase
  end

  assign imm = ({12'b000000000000,(c$ptr_app_arg[51 : 0])});

  always @(*) begin
    case(ds)
      4'd5 : result_4 = {4'b0101,result_2,imm};
      4'd6 : result_4 = {4'b0110,result_2,imm};
      4'd7 : result_4 = {4'b0111,result_2,result_1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};
      4'd10 : result_4 = {4'b1000,result_2,result_1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};
      4'd11 : result_4 = {4'b1001,result_2,result_1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};
      default : result_4 = result_3;
    endcase
  end

  always @(*) begin
    case(ds)
      4'd0 : result_5 = {4'b0000,result_2,result_1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};
      4'd1 : result_5 = {4'b0001,result_2,result_1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};
      4'd2 : result_5 = {4'b0010,result_2,result_1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};
      4'd3 : result_5 = {4'b0011,result_2,result_1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};
      4'd4 : result_5 = {4'b0100,result_2,result_1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};
      default : result_5 = result_4;
    endcase
  end

  assign ds = (c$ptr_app_arg[63 : 60]);

  always @(*) begin
    case(src)
      3'b000 : c$case_alt_2 = ds2;
      3'b001 : c$case_alt_2 = ds3;
      3'b010 : c$case_alt_2 = ds4;
      3'b011 : c$case_alt_2 = ds5;
      default : c$case_alt_2 = {64 {1'bx}};
    endcase
  end

  assign ds7 = regs[8:0];

  assign result_6 = (x == y) ? 64'd1 : c$case_alt_4;

  assign result_7_selection = c$tupIn[66:64];

  always @(*) begin
    case(result_7_selection)
      3'b000 : result_7 = {c$tupIn[63:0]
                          ,ds1_1
                          ,ds2_0
                          ,ds3_0
                          ,ds4_0
                          ,ds5_0};
      3'b001 : result_7 = {regs[328:265]
                          ,c$tupIn[63:0]
                          ,ds2_0
                          ,ds3_0
                          ,ds4_0
                          ,ds5_0};
      3'b010 : result_7 = {regs[328:265]
                          ,ds1_1
                          ,c$tupIn[63:0]
                          ,ds3_0
                          ,ds4_0
                          ,ds5_0};
      3'b011 : result_7 = {regs[328:265]
                          ,ds1_1
                          ,ds2_0
                          ,c$tupIn[63:0]
                          ,ds4_0
                          ,ds5_0};
      default : result_7 = {329 {1'bx}};
    endcase
  end

  assign ds3_0 = regs[136:73];

  assign ds5_0 = regs[8:0];

  assign ds4_0 = regs[72:9];

  assign ds2_0 = regs[200:137];

  assign ds1_1 = regs[264:201];

  assign c$vec_15 = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd0,64'd1}
                    ,{4'b0101,3'd1,64'd1}
                    ,{4'b0101,3'd2,64'd10}
                    ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd3,64'd1}
                    ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd2,64'd1}
                    ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i_15;
  generate
  for (i_15=0; i_15 < 23; i_15 = i_15 + 1) begin : map_14
    wire [70:0] map_in_14;
    assign map_in_14 = c$vec_15[i_15*71+:71];
    reg [63:0] map_out_14;
    // CPU.hs:112:1-6
    wire [2:0] dst_143;
    // CPU.hs:112:1-6
    wire [2:0] src_111;
    // CPU.hs:112:1-6
    wire [2:0] dst_144;
    // CPU.hs:112:1-6
    wire [2:0] src_112;
    // CPU.hs:112:1-6
    wire [2:0] lhs_15;
    // CPU.hs:112:1-6
    wire [2:0] rhs_15;
    // CPU.hs:112:1-6
    wire [2:0] dst_145;
    // CPU.hs:112:1-6
    wire [63:0] imm_32;
    // CPU.hs:112:1-6
    wire [2:0] dst_146;
    // CPU.hs:112:1-6
    wire [63:0] imm_33;
    // CPU.hs:112:1-6
    wire [2:0] dst_147;
    // CPU.hs:112:1-6
    wire [2:0] src_113;
    // CPU.hs:112:1-6
    wire [2:0] dst_148;
    // CPU.hs:112:1-6
    wire [2:0] src_114;
    // CPU.hs:112:1-6
    wire [2:0] dst_149;
    // CPU.hs:112:1-6
    wire [2:0] src_115;
    // CPU.hs:112:1-6
    wire [2:0] dst_150;
    // CPU.hs:112:1-6
    wire [2:0] src_116;
    // CPU.hs:112:1-6
    wire [2:0] dst_151;
    // CPU.hs:112:1-6
    wire [2:0] src_117;
    reg [3:0] c$app_arg_270;
    reg [3:0] c$app_arg_271;
    reg [3:0] c$app_arg_272;
    reg [3:0] c$app_arg_273;
    reg [3:0] c$app_arg_274;
    reg [3:0] c$app_arg_275;
    reg [3:0] c$app_arg_276;
    reg [3:0] c$app_arg_277;
    reg [3:0] c$app_arg_278;
    reg [3:0] c$app_arg_279;
    reg [3:0] c$app_arg_280;
    reg [3:0] c$app_arg_281;
    reg [3:0] c$app_arg_282;
    reg [3:0] c$app_arg_283;
    reg [3:0] c$app_arg_284;
    reg [3:0] c$app_arg_285;
    reg [3:0] c$app_arg_286;
    reg [3:0] c$app_arg_287;
      assign dst_143 = map_in_14[66:64];

      assign src_111 = map_in_14[63:61];

      assign dst_144 = map_in_14[66:64];

      assign src_112 = map_in_14[63:61];

      assign lhs_15 = map_in_14[66:64];

      assign rhs_15 = map_in_14[63:61];

      assign dst_145 = map_in_14[66:64];

      assign imm_32 = map_in_14[63:0];

      assign dst_146 = map_in_14[66:64];

      assign imm_33 = map_in_14[63:0];

      assign dst_147 = map_in_14[66:64];

      assign src_113 = map_in_14[63:61];

      assign dst_148 = map_in_14[66:64];

      assign src_114 = map_in_14[63:61];

      assign dst_149 = map_in_14[66:64];

      assign src_115 = map_in_14[63:61];

      assign dst_150 = map_in_14[66:64];

      assign src_116 = map_in_14[63:61];

      assign dst_151 = map_in_14[66:64];

      assign src_117 = map_in_14[63:61];

      always @(*) begin
        case(src_111)
          3'b000 : c$app_arg_270 = 4'b0000;
          3'b001 : c$app_arg_270 = 4'b0001;
          3'b010 : c$app_arg_270 = 4'b0010;
          3'b011 : c$app_arg_270 = 4'b0011;
          default : c$app_arg_270 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_143)
          3'b000 : c$app_arg_271 = 4'b0000;
          3'b001 : c$app_arg_271 = 4'b0001;
          3'b010 : c$app_arg_271 = 4'b0010;
          3'b011 : c$app_arg_271 = 4'b0011;
          default : c$app_arg_271 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_112)
          3'b000 : c$app_arg_272 = 4'b0000;
          3'b001 : c$app_arg_272 = 4'b0001;
          3'b010 : c$app_arg_272 = 4'b0010;
          3'b011 : c$app_arg_272 = 4'b0011;
          default : c$app_arg_272 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_144)
          3'b000 : c$app_arg_273 = 4'b0000;
          3'b001 : c$app_arg_273 = 4'b0001;
          3'b010 : c$app_arg_273 = 4'b0010;
          3'b011 : c$app_arg_273 = 4'b0011;
          default : c$app_arg_273 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_15)
          3'b000 : c$app_arg_274 = 4'b0000;
          3'b001 : c$app_arg_274 = 4'b0001;
          3'b010 : c$app_arg_274 = 4'b0010;
          3'b011 : c$app_arg_274 = 4'b0011;
          default : c$app_arg_274 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_15)
          3'b000 : c$app_arg_275 = 4'b0000;
          3'b001 : c$app_arg_275 = 4'b0001;
          3'b010 : c$app_arg_275 = 4'b0010;
          3'b011 : c$app_arg_275 = 4'b0011;
          default : c$app_arg_275 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_145)
          3'b000 : c$app_arg_276 = 4'b0000;
          3'b001 : c$app_arg_276 = 4'b0001;
          3'b010 : c$app_arg_276 = 4'b0010;
          3'b011 : c$app_arg_276 = 4'b0011;
          default : c$app_arg_276 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_146)
          3'b000 : c$app_arg_277 = 4'b0000;
          3'b001 : c$app_arg_277 = 4'b0001;
          3'b010 : c$app_arg_277 = 4'b0010;
          3'b011 : c$app_arg_277 = 4'b0011;
          default : c$app_arg_277 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_113)
          3'b000 : c$app_arg_278 = 4'b0000;
          3'b001 : c$app_arg_278 = 4'b0001;
          3'b010 : c$app_arg_278 = 4'b0010;
          3'b011 : c$app_arg_278 = 4'b0011;
          default : c$app_arg_278 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_147)
          3'b000 : c$app_arg_279 = 4'b0000;
          3'b001 : c$app_arg_279 = 4'b0001;
          3'b010 : c$app_arg_279 = 4'b0010;
          3'b011 : c$app_arg_279 = 4'b0011;
          default : c$app_arg_279 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_114)
          3'b000 : c$app_arg_280 = 4'b0000;
          3'b001 : c$app_arg_280 = 4'b0001;
          3'b010 : c$app_arg_280 = 4'b0010;
          3'b011 : c$app_arg_280 = 4'b0011;
          default : c$app_arg_280 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_148)
          3'b000 : c$app_arg_281 = 4'b0000;
          3'b001 : c$app_arg_281 = 4'b0001;
          3'b010 : c$app_arg_281 = 4'b0010;
          3'b011 : c$app_arg_281 = 4'b0011;
          default : c$app_arg_281 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_115)
          3'b000 : c$app_arg_282 = 4'b0000;
          3'b001 : c$app_arg_282 = 4'b0001;
          3'b010 : c$app_arg_282 = 4'b0010;
          3'b011 : c$app_arg_282 = 4'b0011;
          default : c$app_arg_282 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_149)
          3'b000 : c$app_arg_283 = 4'b0000;
          3'b001 : c$app_arg_283 = 4'b0001;
          3'b010 : c$app_arg_283 = 4'b0010;
          3'b011 : c$app_arg_283 = 4'b0011;
          default : c$app_arg_283 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_116)
          3'b000 : c$app_arg_284 = 4'b0000;
          3'b001 : c$app_arg_284 = 4'b0001;
          3'b010 : c$app_arg_284 = 4'b0010;
          3'b011 : c$app_arg_284 = 4'b0011;
          default : c$app_arg_284 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_150)
          3'b000 : c$app_arg_285 = 4'b0000;
          3'b001 : c$app_arg_285 = 4'b0001;
          3'b010 : c$app_arg_285 = 4'b0010;
          3'b011 : c$app_arg_285 = 4'b0011;
          default : c$app_arg_285 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_117)
          3'b000 : c$app_arg_286 = 4'b0000;
          3'b001 : c$app_arg_286 = 4'b0001;
          3'b010 : c$app_arg_286 = 4'b0010;
          3'b011 : c$app_arg_286 = 4'b0011;
          default : c$app_arg_286 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_151)
          3'b000 : c$app_arg_287 = 4'b0000;
          3'b001 : c$app_arg_287 = 4'b0001;
          3'b010 : c$app_arg_287 = 4'b0010;
          3'b011 : c$app_arg_287 = 4'b0011;
          default : c$app_arg_287 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in_14[70:67])
          4'b0000 : map_out_14 = ({({({4'b0000,c$app_arg_287}),c$app_arg_286}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out_14 = ({({({4'b0001,c$app_arg_285}),c$app_arg_284}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out_14 = ({({({4'b0010,c$app_arg_283}),c$app_arg_282}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out_14 = ({({({4'b0011,c$app_arg_281}),c$app_arg_280}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out_14 = ({({({4'b0100,c$app_arg_279}),c$app_arg_278}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out_14 = ({({4'b0101,c$app_arg_277}),((imm_33[0+:56]))});
          4'b0110 : map_out_14 = ({({4'b0110,c$app_arg_276}),((imm_32[0+:56]))});
          4'b0111 : map_out_14 = ({({({4'b0111,c$app_arg_275}),c$app_arg_274}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out_14 = ({({({4'b1010,c$app_arg_273}),c$app_arg_272}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out_14 = ({({({4'b1011,c$app_arg_271}),c$app_arg_270}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out_14 = ({({4'b1100,(map_in_14[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out_14 = ({({4'b1101,(map_in_14[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out_14 = ({({4'b1110,(map_in_14[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out_14 = 64'd17293822569102704640;
        endcase
      end


    assign result_8_res[i_15*64+:64] = map_out_14;
  end
  endgenerate
  // map end

  assign c$vecFlat = ({result_8_res,({41 {64'd0}})});

  // index begin
  wire [63:0] vecArray [0:64-1];
  genvar i_16;
  generate
  for (i_16=0; i_16 < 64; i_16=i_16+1) begin : mk_array
    assign vecArray[(64-1)-i_16] = c$vecFlat[i_16*64+:64];
  end
  endgenerate
  assign result_8 = vecArray[(wild1_0)];
  // index end

  assign src = ir[63:61];

  assign c$case_alt_3_selection_res = ds5_1 & 64'd1;

  always @(*) begin
    case(c$case_alt_3_selection_res)
      64'd0 : c$case_alt_3 = 1'b0;
      default : c$case_alt_3 = 1'b1;
    endcase
  end

  assign ds5_1 = regs[72:9];

  assign c$i_1747 = (c$wild1_case_alt[0+:9]);

  assign wild1 = $signed(($signed({{(64-9) {1'b0}},c$i_1747})));

  assign c$case_alt_4 = (x <= y) ? 64'd2 : 64'd0;

  assign x = c$x_case_alt;

  assign y = c$y_case_alt;

  always @(*) begin
    case(ir[70:67])
      4'b0000 : c$tupIn = {dst_6
                          ,c$tupIn_case_alt_4 + c$tupIn_case_alt_3};
      4'b0001 : c$tupIn = {dst_5
                          ,c$tupIn_case_alt_2 - c$tupIn_case_alt_1};
      4'b0010 : c$tupIn = {dst_4
                          ,((c$tupIn_case_alt_10) & (c$tupIn_case_alt_9))};
      4'b0011 : c$tupIn = {dst_3
                          ,((c$tupIn_case_alt_8) | (c$tupIn_case_alt_7))};
      4'b0100 : c$tupIn = {dst_2
                          ,((c$tupIn_case_alt_6) ^ (c$tupIn_case_alt_5))};
      4'b0101 : c$tupIn = {dst_1
                          ,c$tupIn_case_alt_0 + imm_1};
      4'b0110 : c$tupIn = {dst_0
                          ,c$tupIn_case_alt - imm_0};
      default : c$tupIn = {dst,result_9};
    endcase
  end

  assign wild1_0 = $signed(($signed({{(64-9) {1'b0}},ds7})));

  always @(*) begin
    case(rhs)
      3'b000 : c$y_case_alt = ds2;
      3'b001 : c$y_case_alt = ds3;
      3'b010 : c$y_case_alt = ds4;
      3'b011 : c$y_case_alt = ds5;
      default : c$y_case_alt = {64 {1'bx}};
    endcase
  end

  always @(*) begin
    case(lhs)
      3'b000 : c$x_case_alt = ds2;
      3'b001 : c$x_case_alt = ds3;
      3'b010 : c$x_case_alt = ds4;
      3'b011 : c$x_case_alt = ds5;
      default : c$x_case_alt = {64 {1'bx}};
    endcase
  end

  assign lhs = ir[66:64];

  assign rhs = ir[63:61];

  always @(*) begin
    case(dst_7)
      3'b000 : c$wild1_case_alt = ds2;
      3'b001 : c$wild1_case_alt = ds3;
      3'b010 : c$wild1_case_alt = ds4;
      3'b011 : c$wild1_case_alt = ds5;
      default : c$wild1_case_alt = {64 {1'bx}};
    endcase
  end

  assign dst = ir[66:64];

  assign dst_0 = ir[66:64];

  assign dst_1 = ir[66:64];

  assign dst_2 = ir[66:64];

  assign dst_3 = ir[66:64];

  assign dst_4 = ir[66:64];

  assign dst_5 = ir[66:64];

  assign dst_6 = ir[66:64];

  assign c$vec_16 = {{4'b0100,3'd0,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd1,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd0,64'd1}
                    ,{4'b0101,3'd1,64'd1}
                    ,{4'b0101,3'd2,64'd10}
                    ,{4'b1001,3'd3,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd2,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd3,64'd1}
                    ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0000,3'd0,3'd1,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd1,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0101,3'd2,64'd1}
                    ,{4'b1001,3'd3,3'd0,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0100,3'd3,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b0111,3'd0,3'd2,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1000,3'd0,3'd3,61'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1011,9'd22,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1010,9'd9,58'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
                    ,{4'b1101,67'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}};

  // map begin
  genvar i_17;
  generate
  for (i_17=0; i_17 < 23; i_17 = i_17 + 1) begin : map_15
    wire [70:0] map_in_15;
    assign map_in_15 = c$vec_16[i_17*71+:71];
    reg [63:0] map_out_15;
    // CPU.hs:112:1-6
    wire [2:0] dst_152;
    // CPU.hs:112:1-6
    wire [2:0] src_118;
    // CPU.hs:112:1-6
    wire [2:0] dst_153;
    // CPU.hs:112:1-6
    wire [2:0] src_119;
    // CPU.hs:112:1-6
    wire [2:0] lhs_16;
    // CPU.hs:112:1-6
    wire [2:0] rhs_16;
    // CPU.hs:112:1-6
    wire [2:0] dst_154;
    // CPU.hs:112:1-6
    wire [63:0] imm_34;
    // CPU.hs:112:1-6
    wire [2:0] dst_155;
    // CPU.hs:112:1-6
    wire [63:0] imm_35;
    // CPU.hs:112:1-6
    wire [2:0] dst_156;
    // CPU.hs:112:1-6
    wire [2:0] src_120;
    // CPU.hs:112:1-6
    wire [2:0] dst_157;
    // CPU.hs:112:1-6
    wire [2:0] src_121;
    // CPU.hs:112:1-6
    wire [2:0] dst_158;
    // CPU.hs:112:1-6
    wire [2:0] src_122;
    // CPU.hs:112:1-6
    wire [2:0] dst_159;
    // CPU.hs:112:1-6
    wire [2:0] src_123;
    // CPU.hs:112:1-6
    wire [2:0] dst_160;
    // CPU.hs:112:1-6
    wire [2:0] src_124;
    reg [3:0] c$app_arg_288;
    reg [3:0] c$app_arg_289;
    reg [3:0] c$app_arg_290;
    reg [3:0] c$app_arg_291;
    reg [3:0] c$app_arg_292;
    reg [3:0] c$app_arg_293;
    reg [3:0] c$app_arg_294;
    reg [3:0] c$app_arg_295;
    reg [3:0] c$app_arg_296;
    reg [3:0] c$app_arg_297;
    reg [3:0] c$app_arg_298;
    reg [3:0] c$app_arg_299;
    reg [3:0] c$app_arg_300;
    reg [3:0] c$app_arg_301;
    reg [3:0] c$app_arg_302;
    reg [3:0] c$app_arg_303;
    reg [3:0] c$app_arg_304;
    reg [3:0] c$app_arg_305;
      assign dst_152 = map_in_15[66:64];

      assign src_118 = map_in_15[63:61];

      assign dst_153 = map_in_15[66:64];

      assign src_119 = map_in_15[63:61];

      assign lhs_16 = map_in_15[66:64];

      assign rhs_16 = map_in_15[63:61];

      assign dst_154 = map_in_15[66:64];

      assign imm_34 = map_in_15[63:0];

      assign dst_155 = map_in_15[66:64];

      assign imm_35 = map_in_15[63:0];

      assign dst_156 = map_in_15[66:64];

      assign src_120 = map_in_15[63:61];

      assign dst_157 = map_in_15[66:64];

      assign src_121 = map_in_15[63:61];

      assign dst_158 = map_in_15[66:64];

      assign src_122 = map_in_15[63:61];

      assign dst_159 = map_in_15[66:64];

      assign src_123 = map_in_15[63:61];

      assign dst_160 = map_in_15[66:64];

      assign src_124 = map_in_15[63:61];

      always @(*) begin
        case(src_118)
          3'b000 : c$app_arg_288 = 4'b0000;
          3'b001 : c$app_arg_288 = 4'b0001;
          3'b010 : c$app_arg_288 = 4'b0010;
          3'b011 : c$app_arg_288 = 4'b0011;
          default : c$app_arg_288 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_152)
          3'b000 : c$app_arg_289 = 4'b0000;
          3'b001 : c$app_arg_289 = 4'b0001;
          3'b010 : c$app_arg_289 = 4'b0010;
          3'b011 : c$app_arg_289 = 4'b0011;
          default : c$app_arg_289 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_119)
          3'b000 : c$app_arg_290 = 4'b0000;
          3'b001 : c$app_arg_290 = 4'b0001;
          3'b010 : c$app_arg_290 = 4'b0010;
          3'b011 : c$app_arg_290 = 4'b0011;
          default : c$app_arg_290 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_153)
          3'b000 : c$app_arg_291 = 4'b0000;
          3'b001 : c$app_arg_291 = 4'b0001;
          3'b010 : c$app_arg_291 = 4'b0010;
          3'b011 : c$app_arg_291 = 4'b0011;
          default : c$app_arg_291 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(rhs_16)
          3'b000 : c$app_arg_292 = 4'b0000;
          3'b001 : c$app_arg_292 = 4'b0001;
          3'b010 : c$app_arg_292 = 4'b0010;
          3'b011 : c$app_arg_292 = 4'b0011;
          default : c$app_arg_292 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(lhs_16)
          3'b000 : c$app_arg_293 = 4'b0000;
          3'b001 : c$app_arg_293 = 4'b0001;
          3'b010 : c$app_arg_293 = 4'b0010;
          3'b011 : c$app_arg_293 = 4'b0011;
          default : c$app_arg_293 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_154)
          3'b000 : c$app_arg_294 = 4'b0000;
          3'b001 : c$app_arg_294 = 4'b0001;
          3'b010 : c$app_arg_294 = 4'b0010;
          3'b011 : c$app_arg_294 = 4'b0011;
          default : c$app_arg_294 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_155)
          3'b000 : c$app_arg_295 = 4'b0000;
          3'b001 : c$app_arg_295 = 4'b0001;
          3'b010 : c$app_arg_295 = 4'b0010;
          3'b011 : c$app_arg_295 = 4'b0011;
          default : c$app_arg_295 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_120)
          3'b000 : c$app_arg_296 = 4'b0000;
          3'b001 : c$app_arg_296 = 4'b0001;
          3'b010 : c$app_arg_296 = 4'b0010;
          3'b011 : c$app_arg_296 = 4'b0011;
          default : c$app_arg_296 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_156)
          3'b000 : c$app_arg_297 = 4'b0000;
          3'b001 : c$app_arg_297 = 4'b0001;
          3'b010 : c$app_arg_297 = 4'b0010;
          3'b011 : c$app_arg_297 = 4'b0011;
          default : c$app_arg_297 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_121)
          3'b000 : c$app_arg_298 = 4'b0000;
          3'b001 : c$app_arg_298 = 4'b0001;
          3'b010 : c$app_arg_298 = 4'b0010;
          3'b011 : c$app_arg_298 = 4'b0011;
          default : c$app_arg_298 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_157)
          3'b000 : c$app_arg_299 = 4'b0000;
          3'b001 : c$app_arg_299 = 4'b0001;
          3'b010 : c$app_arg_299 = 4'b0010;
          3'b011 : c$app_arg_299 = 4'b0011;
          default : c$app_arg_299 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_122)
          3'b000 : c$app_arg_300 = 4'b0000;
          3'b001 : c$app_arg_300 = 4'b0001;
          3'b010 : c$app_arg_300 = 4'b0010;
          3'b011 : c$app_arg_300 = 4'b0011;
          default : c$app_arg_300 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_158)
          3'b000 : c$app_arg_301 = 4'b0000;
          3'b001 : c$app_arg_301 = 4'b0001;
          3'b010 : c$app_arg_301 = 4'b0010;
          3'b011 : c$app_arg_301 = 4'b0011;
          default : c$app_arg_301 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_123)
          3'b000 : c$app_arg_302 = 4'b0000;
          3'b001 : c$app_arg_302 = 4'b0001;
          3'b010 : c$app_arg_302 = 4'b0010;
          3'b011 : c$app_arg_302 = 4'b0011;
          default : c$app_arg_302 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_159)
          3'b000 : c$app_arg_303 = 4'b0000;
          3'b001 : c$app_arg_303 = 4'b0001;
          3'b010 : c$app_arg_303 = 4'b0010;
          3'b011 : c$app_arg_303 = 4'b0011;
          default : c$app_arg_303 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(src_124)
          3'b000 : c$app_arg_304 = 4'b0000;
          3'b001 : c$app_arg_304 = 4'b0001;
          3'b010 : c$app_arg_304 = 4'b0010;
          3'b011 : c$app_arg_304 = 4'b0011;
          default : c$app_arg_304 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(dst_160)
          3'b000 : c$app_arg_305 = 4'b0000;
          3'b001 : c$app_arg_305 = 4'b0001;
          3'b010 : c$app_arg_305 = 4'b0010;
          3'b011 : c$app_arg_305 = 4'b0011;
          default : c$app_arg_305 = {4 {1'bx}};
        endcase
      end

      always @(*) begin
        case(map_in_15[70:67])
          4'b0000 : map_out_15 = ({({({4'b0000,c$app_arg_305}),c$app_arg_304}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0001 : map_out_15 = ({({({4'b0001,c$app_arg_303}),c$app_arg_302}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0010 : map_out_15 = ({({({4'b0010,c$app_arg_301}),c$app_arg_300}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0011 : map_out_15 = ({({({4'b0011,c$app_arg_299}),c$app_arg_298}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0100 : map_out_15 = ({({({4'b0100,c$app_arg_297}),c$app_arg_296}),52'b0000000000000000000000000000000000000000000000000000});
          4'b0101 : map_out_15 = ({({4'b0101,c$app_arg_295}),((imm_35[0+:56]))});
          4'b0110 : map_out_15 = ({({4'b0110,c$app_arg_294}),((imm_34[0+:56]))});
          4'b0111 : map_out_15 = ({({({4'b0111,c$app_arg_293}),c$app_arg_292}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1000 : map_out_15 = ({({({4'b1010,c$app_arg_291}),c$app_arg_290}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1001 : map_out_15 = ({({({4'b1011,c$app_arg_289}),c$app_arg_288}),52'b0000000000000000000000000000000000000000000000000000});
          4'b1010 : map_out_15 = ({({4'b1100,(map_in_15[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1011 : map_out_15 = ({({4'b1101,(map_in_15[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          4'b1100 : map_out_15 = ({({4'b1110,(map_in_15[66:58])}),51'b000000000000000000000000000000000000000000000000000});
          default : map_out_15 = 64'd17293822569102704640;
        endcase
      end


    assign result_9_res[i_17*64+:64] = map_out_15;
  end
  endgenerate
  // map end

  assign c$vecFlat_0 = ({result_9_res,({41 {64'd0}})});

  // index begin
  wire [63:0] vecArray_0 [0:64-1];
  genvar i_18;
  generate
  for (i_18=0; i_18 < 64; i_18=i_18+1) begin : mk_array_0
    assign vecArray_0[(64-1)-i_18] = c$vecFlat_0[i_18*64+:64];
  end
  endgenerate
  assign result_9 = vecArray_0[(wild1_1)];
  // index end

  assign dst_7 = ir[66:64];

  assign imm_0 = ir[63:0];

  assign imm_1 = ir[63:0];

  always @(*) begin
    case(dst_0)
      3'b000 : c$tupIn_case_alt = ds2;
      3'b001 : c$tupIn_case_alt = ds3;
      3'b010 : c$tupIn_case_alt = ds4;
      3'b011 : c$tupIn_case_alt = ds5;
      default : c$tupIn_case_alt = {64 {1'bx}};
    endcase
  end

  always @(*) begin
    case(dst_1)
      3'b000 : c$tupIn_case_alt_0 = ds2;
      3'b001 : c$tupIn_case_alt_0 = ds3;
      3'b010 : c$tupIn_case_alt_0 = ds4;
      3'b011 : c$tupIn_case_alt_0 = ds5;
      default : c$tupIn_case_alt_0 = {64 {1'bx}};
    endcase
  end

  always @(*) begin
    case(src_0)
      3'b000 : c$tupIn_case_alt_1 = ds2;
      3'b001 : c$tupIn_case_alt_1 = ds3;
      3'b010 : c$tupIn_case_alt_1 = ds4;
      3'b011 : c$tupIn_case_alt_1 = ds5;
      default : c$tupIn_case_alt_1 = {64 {1'bx}};
    endcase
  end

  always @(*) begin
    case(dst_5)
      3'b000 : c$tupIn_case_alt_2 = ds2;
      3'b001 : c$tupIn_case_alt_2 = ds3;
      3'b010 : c$tupIn_case_alt_2 = ds4;
      3'b011 : c$tupIn_case_alt_2 = ds5;
      default : c$tupIn_case_alt_2 = {64 {1'bx}};
    endcase
  end

  always @(*) begin
    case(src_1)
      3'b000 : c$tupIn_case_alt_3 = ds2;
      3'b001 : c$tupIn_case_alt_3 = ds3;
      3'b010 : c$tupIn_case_alt_3 = ds4;
      3'b011 : c$tupIn_case_alt_3 = ds5;
      default : c$tupIn_case_alt_3 = {64 {1'bx}};
    endcase
  end

  always @(*) begin
    case(dst_6)
      3'b000 : c$tupIn_case_alt_4 = ds2;
      3'b001 : c$tupIn_case_alt_4 = ds3;
      3'b010 : c$tupIn_case_alt_4 = ds4;
      3'b011 : c$tupIn_case_alt_4 = ds5;
      default : c$tupIn_case_alt_4 = {64 {1'bx}};
    endcase
  end

  assign src_0 = ir[63:61];

  assign src_1 = ir[63:61];

  assign wild1_1 = $signed(($signed({{(64-9) {1'b0}},ds1_2})));

  always @(*) begin
    case(src_2)
      3'b000 : c$tupIn_case_alt_5 = ds2;
      3'b001 : c$tupIn_case_alt_5 = ds3;
      3'b010 : c$tupIn_case_alt_5 = ds4;
      3'b011 : c$tupIn_case_alt_5 = ds5;
      default : c$tupIn_case_alt_5 = {64 {1'bx}};
    endcase
  end

  always @(*) begin
    case(dst_2)
      3'b000 : c$tupIn_case_alt_6 = ds2;
      3'b001 : c$tupIn_case_alt_6 = ds3;
      3'b010 : c$tupIn_case_alt_6 = ds4;
      3'b011 : c$tupIn_case_alt_6 = ds5;
      default : c$tupIn_case_alt_6 = {64 {1'bx}};
    endcase
  end

  always @(*) begin
    case(src_3)
      3'b000 : c$tupIn_case_alt_7 = ds2;
      3'b001 : c$tupIn_case_alt_7 = ds3;
      3'b010 : c$tupIn_case_alt_7 = ds4;
      3'b011 : c$tupIn_case_alt_7 = ds5;
      default : c$tupIn_case_alt_7 = {64 {1'bx}};
    endcase
  end

  always @(*) begin
    case(dst_3)
      3'b000 : c$tupIn_case_alt_8 = ds2;
      3'b001 : c$tupIn_case_alt_8 = ds3;
      3'b010 : c$tupIn_case_alt_8 = ds4;
      3'b011 : c$tupIn_case_alt_8 = ds5;
      default : c$tupIn_case_alt_8 = {64 {1'bx}};
    endcase
  end

  always @(*) begin
    case(src_4)
      3'b000 : c$tupIn_case_alt_9 = ds2;
      3'b001 : c$tupIn_case_alt_9 = ds3;
      3'b010 : c$tupIn_case_alt_9 = ds4;
      3'b011 : c$tupIn_case_alt_9 = ds5;
      default : c$tupIn_case_alt_9 = {64 {1'bx}};
    endcase
  end

  always @(*) begin
    case(dst_4)
      3'b000 : c$tupIn_case_alt_10 = ds2;
      3'b001 : c$tupIn_case_alt_10 = ds3;
      3'b010 : c$tupIn_case_alt_10 = ds4;
      3'b011 : c$tupIn_case_alt_10 = ds5;
      default : c$tupIn_case_alt_10 = {64 {1'bx}};
    endcase
  end

  assign src_2 = ir[63:61];

  assign src_3 = ir[63:61];

  assign src_4 = ir[63:61];

  assign ds1_2 = c$ds1_case_alt[0+:9];

  always @(*) begin
    case(src_5)
      3'b000 : c$ds1_case_alt = ds2;
      3'b001 : c$ds1_case_alt = ds3;
      3'b010 : c$ds1_case_alt = ds4;
      3'b011 : c$ds1_case_alt = ds5;
      default : c$ds1_case_alt = {64 {1'bx}};
    endcase
  end

  assign src_5 = ir[63:61];

  assign c$case_alt_0 = c$case_alt[4497:4096];

  assign c$case_alt_1 = c$case_alt[4095:0];

  assign c$case_alt_0_0 = c$case_alt_0[401:329];

  assign c$case_alt_0_1 = c$case_alt_0[328:0];

  assign c$case_alt_0_1_0 = c$case_alt_0_1[328:265];

  assign c$case_alt_0_1_1 = c$case_alt_0_1[264:201];

  assign c$case_alt_0_1_2 = c$case_alt_0_1[200:137];

  assign c$case_alt_0_1_3 = c$case_alt_0_1[136:73];

  assign c$case_alt_0_1_4 = c$case_alt_0_1[72:9];

  assign c$case_alt_0_1_5 = c$case_alt_0_1[8:0];

  assign c$case_alt_1_0 = c$case_alt_1[4095:4032];

  assign c$case_alt_1_1 = c$case_alt_1[4031:3968];

  assign c$case_alt_1_2 = c$case_alt_1[3967:3904];

  assign c$case_alt_1_3 = c$case_alt_1[3903:3840];

  assign c$case_alt_1_4 = c$case_alt_1[3839:3776];

  assign c$case_alt_1_5 = c$case_alt_1[3775:3712];

  assign c$case_alt_1_6 = c$case_alt_1[3711:3648];

  assign c$case_alt_1_7 = c$case_alt_1[3647:3584];

  assign c$case_alt_1_8 = c$case_alt_1[3583:3520];

  assign c$case_alt_1_9 = c$case_alt_1[3519:3456];

  assign c$case_alt_1_10 = c$case_alt_1[3455:3392];

  assign c$case_alt_1_11 = c$case_alt_1[3391:3328];

  assign c$case_alt_1_12 = c$case_alt_1[3327:3264];

  assign c$case_alt_1_13 = c$case_alt_1[3263:3200];

  assign c$case_alt_1_14 = c$case_alt_1[3199:3136];

  assign c$case_alt_1_15 = c$case_alt_1[3135:3072];

  assign c$case_alt_1_16 = c$case_alt_1[3071:3008];

  assign c$case_alt_1_17 = c$case_alt_1[3007:2944];

  assign c$case_alt_1_18 = c$case_alt_1[2943:2880];

  assign c$case_alt_1_19 = c$case_alt_1[2879:2816];

  assign c$case_alt_1_20 = c$case_alt_1[2815:2752];

  assign c$case_alt_1_21 = c$case_alt_1[2751:2688];

  assign c$case_alt_1_22 = c$case_alt_1[2687:2624];

  assign c$case_alt_1_23 = c$case_alt_1[2623:2560];

  assign c$case_alt_1_24 = c$case_alt_1[2559:2496];

  assign c$case_alt_1_25 = c$case_alt_1[2495:2432];

  assign c$case_alt_1_26 = c$case_alt_1[2431:2368];

  assign c$case_alt_1_27 = c$case_alt_1[2367:2304];

  assign c$case_alt_1_28 = c$case_alt_1[2303:2240];

  assign c$case_alt_1_29 = c$case_alt_1[2239:2176];

  assign c$case_alt_1_30 = c$case_alt_1[2175:2112];

  assign c$case_alt_1_31 = c$case_alt_1[2111:2048];

  assign c$case_alt_1_32 = c$case_alt_1[2047:1984];

  assign c$case_alt_1_33 = c$case_alt_1[1983:1920];

  assign c$case_alt_1_34 = c$case_alt_1[1919:1856];

  assign c$case_alt_1_35 = c$case_alt_1[1855:1792];

  assign c$case_alt_1_36 = c$case_alt_1[1791:1728];

  assign c$case_alt_1_37 = c$case_alt_1[1727:1664];

  assign c$case_alt_1_38 = c$case_alt_1[1663:1600];

  assign c$case_alt_1_39 = c$case_alt_1[1599:1536];

  assign c$case_alt_1_40 = c$case_alt_1[1535:1472];

  assign c$case_alt_1_41 = c$case_alt_1[1471:1408];

  assign c$case_alt_1_42 = c$case_alt_1[1407:1344];

  assign c$case_alt_1_43 = c$case_alt_1[1343:1280];

  assign c$case_alt_1_44 = c$case_alt_1[1279:1216];

  assign c$case_alt_1_45 = c$case_alt_1[1215:1152];

  assign c$case_alt_1_46 = c$case_alt_1[1151:1088];

  assign c$case_alt_1_47 = c$case_alt_1[1087:1024];

  assign c$case_alt_1_48 = c$case_alt_1[1023:960];

  assign c$case_alt_1_49 = c$case_alt_1[959:896];

  assign c$case_alt_1_50 = c$case_alt_1[895:832];

  assign c$case_alt_1_51 = c$case_alt_1[831:768];

  assign c$case_alt_1_52 = c$case_alt_1[767:704];

  assign c$case_alt_1_53 = c$case_alt_1[703:640];

  assign c$case_alt_1_54 = c$case_alt_1[639:576];

  assign c$case_alt_1_55 = c$case_alt_1[575:512];

  assign c$case_alt_1_56 = c$case_alt_1[511:448];

  assign c$case_alt_1_57 = c$case_alt_1[447:384];

  assign c$case_alt_1_58 = c$case_alt_1[383:320];

  assign c$case_alt_1_59 = c$case_alt_1[319:256];

  assign c$case_alt_1_60 = c$case_alt_1[255:192];

  assign c$case_alt_1_61 = c$case_alt_1[191:128];

  assign c$case_alt_1_62 = c$case_alt_1[127:64];

  assign c$case_alt_1_63 = c$case_alt_1[63:0];


endmodule

